{"version":3,"sources":["../../../../src/elements/common/sub-header/Sort.js"],"names":["React","FormattedMessage","DropdownMenu","Menu","SelectMenuItem","SortButton","messages","FIELD_NAME","FIELD_DATE","FIELD_SIZE","SORT_ASC","SORT_DESC","SORT_ITEMS","Sort","sortBy","sortDirection","onSortChange","map","sortByValue","sortDirectionValue","isSelected","sortItemKey"],"mappings":";;;;;;;;AAAA;;;;;AAMA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,YAAP,MAAyB,gDAAzB;AACA,OAAOC,IAAP,MAAiB,+BAAjB;AACA,OAAOC,cAAP,MAA2B,yCAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,UAAjC,EAA6CC,QAA7C,EAAuDC,SAAvD,QAAwE,oBAAxE;AAWA,IAAMC,UAA2B,GAAG,CAChC,CAACL,UAAD,EAAaG,QAAb,CADgC,EAEhC,CAACH,UAAD,EAAaI,SAAb,CAFgC,EAGhC,CAACH,UAAD,EAAaE,QAAb,CAHgC,EAIhC,CAACF,UAAD,EAAaG,SAAb,CAJgC,EAKhC,CAACF,UAAD,EAAaC,QAAb,CALgC,EAMhC,CAACD,UAAD,EAAaE,SAAb,CANgC,CAApC;;AASA,IAAME,IAAI,GAAG,SAAPA,IAAO;AAAA,MAAGC,MAAH,QAAGA,MAAH;AAAA,MAAWC,aAAX,QAAWA,aAAX;AAAA,MAA0BC,YAA1B,QAA0BA,YAA1B;AAAA,SACT,oBAAC,YAAD;AAAc,IAAA,cAAc;AAA5B,KACI,oBAAC,UAAD,OADJ,EAEI,oBAAC,IAAD,QACKJ,UAAU,CAACK,GAAX,CAAe,iBAAuC;AAAA;AAAA,QAArCC,WAAqC;AAAA,QAAxBC,kBAAwB;;AACnD,QAAMC,UAAU,GAAGF,WAAW,KAAKJ,MAAhB,IAA0BK,kBAAkB,KAAKJ,aAApE;AACA,QAAMM,WAAW,aAAMH,WAAN,SAAoBC,kBAApB,CAAjB;AAEA,WACI,oBAAC,cAAD;AACI,MAAA,GAAG,EAAEE,WADT;AAEI,MAAA,UAAU,EAAED,UAFhB;AAGI,MAAA,OAAO,EAAE;AAAA,eAAMJ,YAAY,CAACE,WAAD,EAAcC,kBAAd,CAAlB;AAAA;AAHb,OAKI,oBAAC,gBAAD,EAAsBb,QAAQ,CAACe,WAAD,CAA9B,CALJ,CADJ;AASH,GAbA,CADL,CAFJ,CADS;AAAA,CAAb;;AAsBA,eAAeR,IAAf","sourcesContent":["/**\n * @flow\n * @file Sort component\n * @author Box\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport DropdownMenu from '../../../components/dropdown-menu/DropdownMenu';\nimport Menu from '../../../components/menu/Menu';\nimport SelectMenuItem from '../../../components/menu/SelectMenuItem';\nimport SortButton from './SortButton';\nimport messages from '../messages';\nimport { FIELD_NAME, FIELD_DATE, FIELD_SIZE, SORT_ASC, SORT_DESC } from '../../../constants';\nimport type { SortBy, SortDirection } from '../../../common/types/core';\n\ntype Props = {\n    onSortChange: Function,\n    sortBy: SortBy,\n    sortDirection: SortDirection,\n};\n\ntype SortItem = [SortBy, SortDirection];\n\nconst SORT_ITEMS: Array<SortItem> = [\n    [FIELD_NAME, SORT_ASC],\n    [FIELD_NAME, SORT_DESC],\n    [FIELD_DATE, SORT_ASC],\n    [FIELD_DATE, SORT_DESC],\n    [FIELD_SIZE, SORT_ASC],\n    [FIELD_SIZE, SORT_DESC],\n];\n\nconst Sort = ({ sortBy, sortDirection, onSortChange }: Props) => (\n    <DropdownMenu isRightAligned>\n        <SortButton />\n        <Menu>\n            {SORT_ITEMS.map(([sortByValue, sortDirectionValue]) => {\n                const isSelected = sortByValue === sortBy && sortDirectionValue === sortDirection;\n                const sortItemKey = `${sortByValue}${sortDirectionValue}`;\n\n                return (\n                    <SelectMenuItem\n                        key={sortItemKey}\n                        isSelected={isSelected}\n                        onClick={() => onSortChange(sortByValue, sortDirectionValue)}\n                    >\n                        <FormattedMessage {...messages[sortItemKey]} />\n                    </SelectMenuItem>\n                );\n            })}\n        </Menu>\n    </DropdownMenu>\n);\n\nexport default Sort;\n"],"file":"Sort.js"}