{"version":3,"sources":["../../../../src/elements/common/item/IconCell.js"],"names":["React","injectIntl","FileIcon","FolderIcon","BookmarkIcon","TYPE_FOLDER","TYPE_FILE","TYPE_WEBLINK","messages","IconCell","intl","rowData","dimension","type","extension","has_collaborations","is_externally_owned","title","formatMessage","file","collaboratedFolder","externalFolder","personalFolder","bookmark","IconCellBase"],"mappings":"AAAA;;;;AAKA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,YAA3B;AAGA,OAAOC,QAAP,MAAqB,mCAArB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AAGA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,YAAjC,QAAqD,oBAArD;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,OAAO,iBAAP;;AAIA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAyC;AAAA,MAAtCC,IAAsC,QAAtCA,IAAsC;AAAA,MAAhCC,OAAgC,QAAhCA,OAAgC;AAAA,MAAvBC,SAAuB,QAAvBA,SAAuB;AAAA,MAC9CC,IAD8C,GACwBF,OADxB,CAC9CE,IAD8C;AAAA,MACxCC,SADwC,GACwBH,OADxB,CACxCG,SADwC;AAAA,MAC7BC,kBAD6B,GACwBJ,OADxB,CAC7BI,kBAD6B;AAAA,MACTC,mBADS,GACwBL,OADxB,CACTK,mBADS;AAEtD,MAAIC,KAAJ;;AACA,UAAQJ,IAAR;AACI,SAAKP,SAAL;AACIW,MAAAA,KAAK,GAAGP,IAAI,CAACQ,aAAL,CAAmBV,QAAQ,CAACW,IAA5B,CAAR;AACA,aAAO,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAEP,SAArB;AAAgC,QAAA,SAAS,EAAEE,SAA3C;AAAsD,QAAA,KAAK,EAAEG;AAA7D,QAAP;;AACJ,SAAKZ,WAAL;AACI,UAAIU,kBAAJ,EAAwB;AACpBE,QAAAA,KAAK,GAAGP,IAAI,CAACQ,aAAL,CAAmBV,QAAQ,CAACY,kBAA5B,CAAR;AACH,OAFD,MAEO,IAAIJ,mBAAJ,EAAyB;AAC5BC,QAAAA,KAAK,GAAGP,IAAI,CAACQ,aAAL,CAAmBV,QAAQ,CAACa,cAA5B,CAAR;AACH,OAFM,MAEA;AACHJ,QAAAA,KAAK,GAAGP,IAAI,CAACQ,aAAL,CAAmBV,QAAQ,CAACc,cAA5B,CAAR;AACH;;AACD,aACI,oBAAC,UAAD;AACI,QAAA,SAAS,EAAEV,SADf;AAEI,QAAA,QAAQ,EAAEG,kBAFd;AAGI,QAAA,UAAU,EAAEC,mBAHhB;AAII,QAAA,KAAK,EAAEC;AAJX,QADJ;;AAQJ,SAAKV,YAAL;AACIU,MAAAA,KAAK,GAAGP,IAAI,CAACQ,aAAL,CAAmBV,QAAQ,CAACe,QAA5B,CAAR;AACA,aAAO,oBAAC,YAAD;AAAc,QAAA,MAAM,EAAEX,SAAtB;AAAiC,QAAA,KAAK,EAAEA,SAAxC;AAAmD,QAAA,KAAK,EAAEK;AAA1D,QAAP;;AACJ;AACIA,MAAAA,KAAK,GAAGP,IAAI,CAACQ,aAAL,CAAmBV,QAAQ,CAACW,IAA5B,CAAR;AACA,aAAO,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAEP,SAArB;AAAgC,QAAA,KAAK,EAAEK;AAAvC,QAAP;AAzBR;AA2BH,CA9BD;;AAgCA,SAASR,QAAQ,IAAIe,YAArB;AACA,eAAevB,UAAU,CAACQ,QAAD,CAAzB","sourcesContent":["/**\n * @flow\n * @author Box\n */\n\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport type { IntlShape } from 'react-intl';\n\nimport FileIcon from '../../../icons/file-icon/FileIcon';\nimport FolderIcon from '../../../icons/folder-icon/FolderIcon';\nimport BookmarkIcon from '../../../icons/bookmark-icon/BookmarkIcon';\nimport type { BoxItem } from '../../../common/types/core';\n\nimport { TYPE_FOLDER, TYPE_FILE, TYPE_WEBLINK } from '../../../constants';\nimport messages from '../messages';\n\nimport './IconCell.scss';\n\ntype Props = { dimension?: number, intl: IntlShape, rowData: BoxItem };\n\nconst IconCell = ({ intl, rowData, dimension }: Props) => {\n    const { type, extension, has_collaborations, is_externally_owned }: BoxItem = rowData;\n    let title;\n    switch (type) {\n        case TYPE_FILE:\n            title = intl.formatMessage(messages.file);\n            return <FileIcon dimension={dimension} extension={extension} title={title} />;\n        case TYPE_FOLDER:\n            if (has_collaborations) {\n                title = intl.formatMessage(messages.collaboratedFolder);\n            } else if (is_externally_owned) {\n                title = intl.formatMessage(messages.externalFolder);\n            } else {\n                title = intl.formatMessage(messages.personalFolder);\n            }\n            return (\n                <FolderIcon\n                    dimension={dimension}\n                    isCollab={has_collaborations}\n                    isExternal={is_externally_owned}\n                    title={title}\n                />\n            );\n        case TYPE_WEBLINK:\n            title = intl.formatMessage(messages.bookmark);\n            return <BookmarkIcon height={dimension} width={dimension} title={title} />;\n        default:\n            title = intl.formatMessage(messages.file);\n            return <FileIcon dimension={dimension} title={title} />;\n    }\n};\n\nexport { IconCell as IconCellBase };\nexport default injectIntl(IconCell);\n"],"file":"IconCell.js"}