{"version":3,"sources":["../../../src/elements/content-sidebar/withSidebarAnnotations.js"],"names":["getProp","noop","React","matchPath","FEED_ITEM_TYPE_VERSION","getBadUserError","withSidebarAnnotations","WrappedComponent","WithSidebarAnnotations","props","createRef","file","getAnnotationsPath","getAnnotationsMatchPath","history","location","match","annotationId","currentFileVersionId","fileVersionId","replace","annotatorState","activeAnnotationFileVersionId","activeAnnotationId","defaultFileVersionId","newLocationState","open","state","push","api","fileId","onVersionChange","feedAPI","getFeedAPI","getCachedItems","items","feedItems","version","filter","item","type","find","id","currentVersionId","updateVersionToCurrent","isOpen","pathname","isActivity","current","sidebarPanels","refresh","redirectDeeplinkedAnnotation","prevProps","prevAnnotatorState","prevFileId","prevLocation","action","annotation","prevActiveAnnotationId","prevAnnotation","prevMatch","hasActiveAnnotationChanged","isAnnotationsPath","isTransitioningToAnnotationPath","prevFileVersionId","addAnnotationReply","deleteAnnotationReply","updateAnnotationReply","updateAnnotation","deleteAnnotation","addAnnotation","updateActiveAnnotation","updateActiveVersion","meta","requestId","currentUser","isPending","hasItems","refreshActivitySidebar","annotationReply","addPendingReply","annotationItem","modifyFeedItemRepliesCountBy","updateReplyItem","updateFeedItem","deleteFeedItem","replyId","replyItem","replies","deleteReplyItem","Component","displayName","name"],"mappings":"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","sourcesContent":["// @flow\nimport getProp from 'lodash/get';\nimport noop from 'lodash/noop';\nimport * as React from 'react';\nimport { matchPath } from 'react-router-dom';\nimport type { BoxItem, User } from '../../common/types/core';\nimport { FEED_ITEM_TYPE_VERSION } from '../../constants';\nimport { getBadUserError } from '../../utils/error';\n\ninterface WithAnnotatorContextProps {\n    annotatorState?: AnnotatorState;\n    emitActiveAnnotationChangeEvent?: (id: string) => void;\n    emitAnnotationRemoveEvent?: (id: string, isStartEvent?: boolean) => void;\n    emitAnnotationReplyCreateEvent?: (\n        reply: Object,\n        requestId: string,\n        annotationId: string,\n        isStartEvent?: boolean,\n    ) => void;\n    emitAnnotationReplyDeleteEvent?: (id: string, annotationId: string, isStartEvent?: boolean) => void;\n    emitAnnotationReplyUpdateEvent?: (reply: Object, annotationId: string, isStartEvent?: boolean) => void;\n    emitAnnotationUpdateEvent?: (annotation: Object, isStartEvent?: boolean) => void;\n    getAnnotationsMatchPath?: GetMatchPath;\n    getAnnotationsPath?: (fileVersionId?: string, annotationId?: string) => string;\n}\n\ntype Props = {\n    ...ContextRouter,\n    currentUser?: User,\n    file: BoxItem,\n    fileId: string,\n    isOpen: boolean,\n    onVersionChange: Function,\n} & WithAnnotatorContextProps;\n\ntype SidebarPanelsRefType = {\n    refresh: (shouldRefreshCache?: boolean) => void,\n};\n\nexport default function withSidebarAnnotations(\n    WrappedComponent: React.ComponentType<Props>,\n): React.ComponentType<Props> {\n    class WithSidebarAnnotations extends React.Component<Props> {\n        static defaultProps = {\n            annotatorState: {},\n            getAnnotationsMatchPath: noop,\n            getAnnotationsPath: noop,\n            onVersionChange: noop,\n        };\n\n        static displayName: ?string;\n\n        props: Props;\n\n        sidebarPanels: { current: SidebarPanelsRefType | null } = React.createRef();\n\n        constructor(props) {\n            super(props);\n\n            this.redirectDeeplinkedAnnotation();\n        }\n\n        redirectDeeplinkedAnnotation = () => {\n            const { file, getAnnotationsPath, getAnnotationsMatchPath, history, location } = this.props;\n            const match = getAnnotationsMatchPath(location);\n            const annotationId = getProp(match, 'params.annotationId');\n            const currentFileVersionId = getProp(file, 'file_version.id');\n            const fileVersionId = getProp(match, 'params.fileVersionId');\n\n            if (fileVersionId && fileVersionId !== currentFileVersionId) {\n                history.replace(getAnnotationsPath(currentFileVersionId, annotationId));\n            }\n        };\n\n        componentDidUpdate(prevProps: Props) {\n            const { annotatorState, fileId, getAnnotationsMatchPath, location, onVersionChange }: Props = this.props;\n            const { annotatorState: prevAnnotatorState, fileId: prevFileId, location: prevLocation }: Props = prevProps;\n            const { action, activeAnnotationId, annotation } = annotatorState;\n            const { activeAnnotationId: prevActiveAnnotationId, annotation: prevAnnotation } = prevAnnotatorState;\n\n            const match = getAnnotationsMatchPath(location);\n            const prevMatch = getAnnotationsMatchPath(prevLocation);\n            const fileVersionId = getProp(match, 'params.fileVersionId');\n            const hasActiveAnnotationChanged = prevActiveAnnotationId !== activeAnnotationId;\n            const isAnnotationsPath = !!match;\n            const isTransitioningToAnnotationPath = activeAnnotationId && !isAnnotationsPath;\n            const prevFileVersionId = getProp(prevMatch, 'params.fileVersionId');\n\n            if (action === 'reply_create_start' || action === 'reply_create_end') {\n                this.addAnnotationReply();\n            }\n\n            if (action === 'reply_delete_start' || action === 'reply_delete_end') {\n                this.deleteAnnotationReply();\n            }\n\n            if (action === 'reply_update_start' || action === 'reply_update_end') {\n                this.updateAnnotationReply();\n            }\n\n            if (action === 'update_start' || action === 'update_end') {\n                this.updateAnnotation();\n            }\n\n            if (action === 'delete_start' || action === 'delete_end') {\n                this.deleteAnnotation();\n            }\n\n            if ((action === 'create_start' || action === 'create_end') && annotation && prevAnnotation !== annotation) {\n                this.addAnnotation();\n            }\n\n            // Active annotation id changed. If location is currently an annotation path or\n            // if location is not currently an annotation path but the active annotation id\n            // transitioned from falsy to truthy, update the location accordingly\n            if (hasActiveAnnotationChanged && (isAnnotationsPath || isTransitioningToAnnotationPath)) {\n                this.updateActiveAnnotation();\n            }\n\n            if (fileVersionId && prevFileVersionId !== fileVersionId) {\n                this.updateActiveVersion();\n            }\n\n            if (prevFileId !== fileId) {\n                // If the file id has changed, reset the current version id since the previous (possibly versioned)\n                // location is no longer active\n                onVersionChange(null);\n            }\n        }\n\n        addAnnotation() {\n            const {\n                annotatorState: { action, annotation, meta: { requestId } = {} },\n                api,\n                currentUser,\n                file,\n                fileId,\n            } = this.props;\n\n            if (!requestId) {\n                return;\n            }\n\n            // TODO: need to address in follow on -- currentUser may be undefined here but is never fetched for sure until ActivitySidebar\n            if (!currentUser) {\n                throw getBadUserError();\n            }\n\n            const feedAPI = api.getFeedAPI(false);\n            const isPending = action === 'create_start';\n            const { items: hasItems } = feedAPI.getCachedItems(fileId) || {};\n\n            // If there are existing items in the cache for this file, then patch the cache with the new annotation\n            // If there are no cache entry for feeditems, then it is assumed that it has not yet been fetched.\n            if (hasItems) {\n                feedAPI.addAnnotation(file, currentUser, annotation, requestId, isPending);\n            }\n\n            this.refreshActivitySidebar();\n        }\n\n        addAnnotationReply() {\n            const {\n                annotatorState: {\n                    action,\n                    annotation: { id: annotationId },\n                    annotationReply,\n                    meta: { requestId },\n                },\n                api,\n                currentUser,\n                file,\n            } = this.props;\n\n            if (!currentUser) {\n                throw getBadUserError();\n            }\n\n            const feedAPI = api.getFeedAPI(false);\n            feedAPI.file = file;\n\n            if (action === 'reply_create_start') {\n                feedAPI.addPendingReply(annotationId, currentUser, { ...annotationReply, id: requestId });\n            } else {\n                const { items: feedItems = [] } = feedAPI.getCachedItems(file.id) || {};\n                const annotationItem = feedItems.find(({ id }) => id === annotationId);\n\n                if (!annotationItem) {\n                    return;\n                }\n\n                feedAPI.modifyFeedItemRepliesCountBy(annotationId, 1);\n                feedAPI.updateReplyItem({ ...annotationReply, isPending: false }, annotationId, requestId);\n            }\n\n            this.refreshActivitySidebar();\n        }\n\n        deleteAnnotation() {\n            const {\n                annotatorState: { action, annotation },\n                api,\n                file,\n            } = this.props;\n\n            const feedAPI = api.getFeedAPI(false);\n            feedAPI.file = file;\n\n            if (action === 'delete_start') {\n                feedAPI.updateFeedItem({ isPending: true }, annotation.id);\n            } else {\n                feedAPI.deleteFeedItem(annotation.id);\n            }\n\n            this.refreshActivitySidebar();\n        }\n\n        deleteAnnotationReply() {\n            const {\n                annotatorState: {\n                    action,\n                    annotation: { id: annotationId },\n                    annotationReply: { id: replyId },\n                },\n                api,\n                file,\n            } = this.props;\n\n            const feedAPI = api.getFeedAPI(false);\n            feedAPI.file = file;\n\n            if (action === 'reply_delete_start') {\n                feedAPI.updateReplyItem({ isPending: true }, annotationId, replyId);\n            } else {\n                const { items: feedItems = [] } = feedAPI.getCachedItems(file.id) || {};\n                const annotationItem = feedItems.find(({ id }) => id === annotationId);\n\n                if (!annotationItem) {\n                    return;\n                }\n\n                // Check if the parent annotation has the reply currently visible and if so, remove it\n                const replyItem = annotationItem.replies.find(({ id }) => id === replyId);\n                if (replyItem) {\n                    feedAPI.deleteReplyItem(replyId, annotationId);\n                }\n\n                // Decrease the amount of replies by 1\n                feedAPI.modifyFeedItemRepliesCountBy(annotationId, -1);\n            }\n\n            this.refreshActivitySidebar();\n        }\n\n        updateAnnotation() {\n            const {\n                annotatorState: { action, annotation },\n                api,\n                file,\n            } = this.props;\n\n            const feedAPI = api.getFeedAPI(false);\n            const isPending = action === 'update_start';\n            feedAPI.file = file;\n\n            feedAPI.updateFeedItem({ ...annotation, isPending }, annotation.id);\n\n            this.refreshActivitySidebar();\n        }\n\n        updateAnnotationReply() {\n            const {\n                annotatorState: { action, annotation, annotationReply },\n                api,\n                file,\n            } = this.props;\n\n            const feedAPI = api.getFeedAPI(false);\n            const isPending = action === 'reply_update_start';\n            feedAPI.file = file;\n\n            feedAPI.updateReplyItem({ ...annotationReply, isPending }, annotation.id, annotationReply.id);\n\n            this.refreshActivitySidebar();\n        }\n\n        updateActiveAnnotation = () => {\n            const {\n                annotatorState: { activeAnnotationFileVersionId, activeAnnotationId },\n                file,\n                getAnnotationsMatchPath,\n                getAnnotationsPath,\n                history,\n                location,\n            } = this.props;\n            const match = getAnnotationsMatchPath(location);\n            const currentFileVersionId = getProp(file, 'file_version.id');\n            const defaultFileVersionId = activeAnnotationFileVersionId || currentFileVersionId;\n            const fileVersionId = getProp(match, 'params.fileVersionId', defaultFileVersionId);\n            const newLocationState = activeAnnotationId ? { open: true } : location.state;\n\n            // Update the location pathname and open state if transitioning to an active annotation id, force the sidebar open\n            // history.push({\n            //     pathname: getAnnotationsPath(fileVersionId, activeAnnotationId),\n            //     state: newLocationState,\n            // });\n            history.push(getAnnotationsPath(fileVersionId, activeAnnotationId), newLocationState);\n        };\n\n        updateActiveVersion = () => {\n            const {\n                api,\n                file,\n                fileId,\n                getAnnotationsMatchPath,\n                getAnnotationsPath,\n                history,\n                location,\n                onVersionChange,\n            } = this.props;\n            const feedAPI = api.getFeedAPI(false);\n            const match = getAnnotationsMatchPath(location);\n            const currentFileVersionId = getProp(file, 'file_version.id');\n            const fileVersionId = getProp(match, 'params.fileVersionId');\n            const { items: feedItems = [] } = feedAPI.getCachedItems(fileId) || {};\n            const version = feedItems\n                .filter(item => item.type === FEED_ITEM_TYPE_VERSION)\n                .find(item => item.id === fileVersionId);\n\n            if (version) {\n                onVersionChange(version, {\n                    currentVersionId: currentFileVersionId,\n                    updateVersionToCurrent: () => history.push(getAnnotationsPath(currentFileVersionId)),\n                });\n            }\n        };\n\n        refreshActivitySidebar = () => {\n            const { isOpen, location } = this.props;\n\n            const pathname = getProp(location, 'pathname', '');\n            const isActivity = matchPath('/activity', pathname);\n            const { current } = this.sidebarPanels;\n\n            // If the activity sidebar is currently open, then force it to refresh with the updated data\n            if (current && isActivity && isOpen) {\n                current.refresh(false);\n            }\n        };\n\n        render() {\n            return <WrappedComponent ref={this.sidebarPanels} {...this.props} />;\n        }\n    }\n\n    const displayName = WrappedComponent.displayName || WrappedComponent.name || 'Component';\n    WithSidebarAnnotations.displayName = `WithSidebarAnnotations(${displayName})`;\n\n    return WithSidebarAnnotations;\n}\n"],"file":"withSidebarAnnotations.js"}