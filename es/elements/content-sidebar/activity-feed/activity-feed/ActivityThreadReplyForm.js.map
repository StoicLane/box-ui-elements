{"version":3,"sources":["../../../../../src/elements/content-sidebar/activity-feed/activity-feed/ActivityThreadReplyForm.js"],"names":["React","FormattedMessage","injectIntl","PlainButton","ArrowArcRight","CommentForm","messages","ActivityThreadReplyForm","mentionSelectorContacts","getMentionWithQuery","isDisabled","onFocus","onHide","onReplyCreate","onShow","intl","useState","showReplyForm","setShowReplyForm","placeholder","formatMessage","replyInThread","showForm","hideForm","Promise","resolve","text","reply"],"mappings":";;;;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,EAA2BC,UAA3B,QAA6C,YAA7C;AAGA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AAIA,OAAOC,WAAP,MAAwB,iBAAxB;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,gCAAP;;AAcA,SAASC,uBAAT,OASU;AAAA,MARNC,uBAQM,QARNA,uBAQM;AAAA,MAPNC,mBAOM,QAPNA,mBAOM;AAAA,MANNC,UAMM,QANNA,UAMM;AAAA,MALNC,OAKM,QALNA,OAKM;AAAA,MAJNC,MAIM,QAJNA,MAIM;AAAA,MAHNC,aAGM,QAHNA,aAGM;AAAA,MAFNC,MAEM,QAFNA,MAEM;AAAA,MADNC,IACM,QADNA,IACM;;AAAA,wBACoCf,KAAK,CAACgB,QAAN,CAAe,KAAf,CADpC;AAAA;AAAA,MACCC,aADD;AAAA,MACgBC,gBADhB;;AAEN,MAAMC,WAAW,GAAGJ,IAAI,CAACK,aAAL,CAAmBd,QAAQ,CAACe,aAA5B,CAApB;;AAEA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnBJ,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAJ,IAAAA,MAAM;AACT,GAHD;;AAKA,MAAMS,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnBL,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAN,IAAAA,MAAM;AACT,GAHD;;AAKA,SAAOK,aAAa,GAChB,oBAAC,WAAD;AACI,IAAA,SAAS,EAAC,qCADd;AAEI,IAAA,MAAM,MAFV;AAGI,IAAA,SAAS,MAHb;AAII,IAAA,OAAO,EAAE,KAJb,CAKI;AALJ;AAMI,IAAA,IAAI,EAAE,EANV;AAOI,IAAA,YAAY,EAAE;AAAA,aAAMO,OAAO,CAACC,OAAR,EAAN;AAAA,KAPlB;AAQI,IAAA,QAAQ,EAAEF,QARd;AASI,IAAA,OAAO,EAAEZ,OATb;AAUI,IAAA,aAAa,EAAE,8BAAc;AAAA,UAAXe,IAAW,SAAXA,IAAW;AACzBb,MAAAA,aAAa,CAACa,IAAD,CAAb;AACAH,MAAAA,QAAQ;AACX,KAbL;AAcI,IAAA,uBAAuB,EAAEf,uBAd7B;AAeI,IAAA,mBAAmB,EAAEC,mBAfzB;AAgBI,IAAA,WAAW,EAAEU;AAhBjB,IADgB,GAoBhB,oBAAC,WAAD;AACI,IAAA,SAAS,EAAC,oCADd;AAEI,IAAA,OAAO,EAAEG,QAFb;AAGI,IAAA,IAAI,EAAC,QAHT;AAII,IAAA,UAAU,EAAEZ;AAJhB,KAMI,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAC;AAAzB,IANJ,EAOI,oBAAC,gBAAD,EAAsBJ,QAAQ,CAACqB,KAA/B,CAPJ,CApBJ;AA8BH;;AAED,eAAezB,UAAU,CAACK,uBAAD,CAAzB","sourcesContent":["// @flow\n\nimport * as React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport type { InjectIntlProvidedProps } from 'react-intl';\n\nimport PlainButton from '../../../../components/plain-button';\nimport ArrowArcRight from '../../../../icon/fill/ArrowArcRight';\n\nimport type { SelectorItems } from '../../../../common/types/core';\n\nimport CommentForm from '../comment-form';\n\nimport messages from './messages';\nimport './ActivityThreadReplyForm.scss';\n\ntype ActivityThreadReplyFromProps = {\n    getMentionWithQuery?: (searchStr: string) => void,\n    isDisabled?: boolean,\n    mentionSelectorContacts?: SelectorItems<>,\n    onFocus: () => void,\n    onHide: () => void,\n    onReplyCreate: (text: string) => void,\n    onShow: () => void,\n};\n\ntype Props = ActivityThreadReplyFromProps & InjectIntlProvidedProps;\n\nfunction ActivityThreadReplyForm({\n    mentionSelectorContacts,\n    getMentionWithQuery,\n    isDisabled,\n    onFocus,\n    onHide,\n    onReplyCreate,\n    onShow,\n    intl,\n}: Props) {\n    const [showReplyForm, setShowReplyForm] = React.useState(false);\n    const placeholder = intl.formatMessage(messages.replyInThread);\n\n    const showForm = () => {\n        setShowReplyForm(true);\n        onShow();\n    };\n\n    const hideForm = () => {\n        setShowReplyForm(false);\n        onHide();\n    };\n\n    return showReplyForm ? (\n        <CommentForm\n            className=\"bcs-ActivityThreadReplyForm-comment\"\n            isOpen\n            isEditing\n            showTip={false}\n            // $FlowFixMe user is needed for showing an avatar, we don't need that here\n            user={{}}\n            getAvatarUrl={() => Promise.resolve()}\n            onCancel={hideForm}\n            onFocus={onFocus}\n            createComment={({ text }) => {\n                onReplyCreate(text);\n                hideForm();\n            }}\n            mentionSelectorContacts={mentionSelectorContacts}\n            getMentionWithQuery={getMentionWithQuery}\n            placeholder={placeholder}\n        />\n    ) : (\n        <PlainButton\n            className=\"bcs-ActivityThreadReplyForm-toggle\"\n            onClick={showForm}\n            type=\"button\"\n            isDisabled={isDisabled}\n        >\n            <ArrowArcRight className=\"bcs-ActivityThreadReplyForm-arrow\" />\n            <FormattedMessage {...messages.reply} />\n        </PlainButton>\n    );\n}\n\nexport default injectIntl(ActivityThreadReplyForm);\n"],"file":"ActivityThreadReplyForm.js"}