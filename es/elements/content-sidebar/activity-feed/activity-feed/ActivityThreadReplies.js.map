{"version":3,"sources":["../../../../../src/elements/content-sidebar/activity-feed/activity-feed/ActivityThreadReplies.js"],"names":["React","Comment","LoadingIndicator","BaseComment","ActivityThreadReplies","currentUser","getAvatarUrl","getMentionWithQuery","getUserProfileUrl","hasNewThreadedReplies","isRepliesLoading","mentionSelectorContacts","onDelete","onEdit","onSelect","replies","translations","getReplyPermissions","reply","permissions","can_delete","can_edit","can_resolve","renderComment","type","id","map"],"mappings":"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","sourcesContent":["// @flow\nimport React from 'react';\nimport Comment from '../comment';\nimport LoadingIndicator from '../../../../components/loading-indicator';\nimport { BaseComment } from '../comment/BaseComment';\n\nimport type { GetAvatarUrlCallback, GetProfileUrlCallback } from '../../../common/flowTypes';\nimport type { Translations } from '../../flowTypes';\nimport type { SelectorItems, User } from '../../../../common/types/core';\nimport type { BoxCommentPermission, Comment as CommentType } from '../../../../common/types/feed';\n\nimport './ActivityThreadReplies.scss';\n\ntype Props = {\n    currentUser?: User,\n    getAvatarUrl: GetAvatarUrlCallback,\n    getMentionWithQuery?: Function,\n    getUserProfileUrl?: GetProfileUrlCallback,\n    hasNewThreadedReplies?: boolean,\n    isRepliesLoading?: boolean,\n    mentionSelectorContacts?: SelectorItems<>,\n    onDelete?: Function,\n    onEdit?: Function,\n    onSelect?: (isSelected: boolean) => void,\n    replies: Array<CommentType>,\n    translations?: Translations,\n};\n\nconst ActivityThreadReplies = ({\n    currentUser,\n    getAvatarUrl,\n    getMentionWithQuery,\n    getUserProfileUrl,\n    hasNewThreadedReplies = false,\n    isRepliesLoading,\n    mentionSelectorContacts,\n    onDelete,\n    onEdit,\n    onSelect,\n    replies,\n    translations,\n}: Props) => {\n    const getReplyPermissions = (reply: CommentType): BoxCommentPermission => {\n        const { permissions: { can_delete = false, can_edit = false, can_resolve = false } = {} } = reply;\n        return {\n            can_delete,\n            can_edit,\n            can_resolve,\n        };\n    };\n\n    const renderComment = (reply: CommentType) => {\n        if (hasNewThreadedReplies) {\n            return (\n                <BaseComment\n                    key={`${reply.type}${reply.id}`}\n                    {...reply}\n                    currentUser={currentUser}\n                    getAvatarUrl={getAvatarUrl}\n                    getMentionWithQuery={getMentionWithQuery}\n                    getUserProfileUrl={getUserProfileUrl}\n                    mentionSelectorContacts={mentionSelectorContacts}\n                    onDelete={onDelete}\n                    onCommentEdit={onEdit}\n                    onSelect={onSelect}\n                    permissions={getReplyPermissions(reply)}\n                    translations={translations}\n                />\n            );\n        }\n\n        return (\n            <Comment\n                key={`${reply.type}${reply.id}`}\n                {...reply}\n                currentUser={currentUser}\n                getAvatarUrl={getAvatarUrl}\n                getMentionWithQuery={getMentionWithQuery}\n                getUserProfileUrl={getUserProfileUrl}\n                mentionSelectorContacts={mentionSelectorContacts}\n                onDelete={onDelete}\n                onEdit={onEdit}\n                onSelect={onSelect}\n                permissions={getReplyPermissions(reply)}\n                translations={translations}\n            />\n        );\n    };\n\n    return (\n        <div className=\"bcs-ActivityThreadReplies\" data-testid=\"activity-thread-replies\">\n            {isRepliesLoading && (\n                <div className=\"bcs-ActivityThreadReplies-loading\" data-testid=\"activity-thread-replies-loading\">\n                    <LoadingIndicator />\n                </div>\n            )}\n            {replies.map((reply: CommentType) => renderComment(reply))}\n        </div>\n    );\n};\n\nexport default ActivityThreadReplies;\n"],"file":"ActivityThreadReplies.js"}