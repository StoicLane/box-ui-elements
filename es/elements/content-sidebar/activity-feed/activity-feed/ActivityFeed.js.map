{"version":3,"sources":["../../../../../src/elements/content-sidebar/activity-feed/activity-feed/ActivityFeed.js"],"names":["React","getProp","noop","throttle","FormattedMessage","classNames","ActiveState","CommentForm","EmptyState","InlineError","LoadingIndicator","messages","collapseFeedState","ItemTypes","FEED_ITEM_TYPE_ANNOTATION","FEED_ITEM_TYPE_COMMENT","FEED_ITEM_TYPE_TASK","PERMISSION_CAN_CREATE_ANNOTATIONS","scrollIntoView","ActivityFeed","isScrolled","isInputOpen","selectedItemId","createRef","props","feedItems","undefined","length","type","fileVersion","prevCurrentUser","prevFeedItems","currentUser","feedContainer","scrollTop","scrollHeight","event","target","Element","setState","handleFeedScroll","nativeEvent","stopImmediatePropagation","resetFeedScroll","text","hasMention","onCommentCreate","commentFormSubmitHandler","assignees","dueAt","onTaskCreate","data","versionInfoHandler","onVersionHistoryClick","itemId","hasReplies","id","activeFeedEntryId","activeFeedEntryType","state","isSelected","item","replies","isActive","isFeedItemActive","some","reply","prevProps","prevState","prevActiveFeedEntryId","currFeedItems","prevIsInputOpen","currIsInputOpen","hasLoaded","hasMoreItems","didLoadFeedItems","hasInputOpened","hasActiveFeedEntryIdChanged","scrollToActiveFeedItemOrErrorMessage","activeFeedItemRef","current","activityFeedError","approverSelectorContacts","file","getApproverWithQuery","getAvatarUrl","getMentionWithQuery","getUserProfileUrl","hasNewThreadedReplies","hasVersions","isDisabled","mentionSelectorContacts","contactsLoaded","onAnnotationDelete","onAnnotationEdit","onAnnotationSelect","onAnnotationStatusChange","onAppActivityDelete","onCommentDelete","onCommentUpdate","onHideReplies","onReplyCreate","onReplyDelete","onReplyUpdate","onShowReplies","onTaskAssignmentUpdate","onTaskDelete","onTaskModalClose","onTaskUpdate","onTaskView","shouldUseUAA","translations","currentFileVersionId","hasAnnotationCreatePermission","hasCommentPermission","showCommentForm","isEmpty","isLoading","activeFeedItem","Array","isArray","find","isCommentFeedItemActive","errorMessageByEntryType","annotation","annotationMissingError","comment","commentMissingError","task","taskMissingError","inlineFeedItemErrorMessage","isInlineFeedItemErrorVisible","onKeyDown","ref","throttledFeedScroll","status","permissions","onSuccess","onError","setSelectedItem","openVersionHistoryPopup","feedInlineErrorTitle","commentFormCancelHandler","commentFormFocusHandler","Component"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Component for Activity feed\n */\n\nimport * as React from 'react';\nimport getProp from 'lodash/get';\nimport noop from 'lodash/noop';\nimport throttle from 'lodash/throttle';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport ActiveState from './ActiveState';\nimport CommentForm from '../comment-form';\nimport EmptyState from './EmptyState';\nimport InlineError from '../../../../components/inline-error/InlineError';\nimport LoadingIndicator from '../../../../components/loading-indicator/LoadingIndicator';\nimport messages from './messages';\nimport { collapseFeedState, ItemTypes } from './activityFeedUtils';\nimport {\n    FEED_ITEM_TYPE_ANNOTATION,\n    FEED_ITEM_TYPE_COMMENT,\n    FEED_ITEM_TYPE_TASK,\n    PERMISSION_CAN_CREATE_ANNOTATIONS,\n} from '../../../../constants';\nimport { scrollIntoView } from '../../../../utils/dom';\nimport type {\n    Annotation,\n    AnnotationPermission,\n    BoxCommentPermission,\n    Comment,\n    CommentFeedItemType,\n    FeedItemStatus,\n    FeedItems,\n    FocusableFeedItemType,\n    Task,\n} from '../../../../common/types/feed';\nimport type { SelectorItems, User, GroupMini, BoxItem } from '../../../../common/types/core';\nimport type { Errors, GetAvatarUrlCallback, GetProfileUrlCallback } from '../../../common/flowTypes';\nimport type { Translations } from '../../flowTypes';\nimport { type OnAnnotationEdit } from '../comment/types';\n\nimport './ActivityFeed.scss';\n\ntype Props = {\n    activeFeedEntryId?: string,\n    activeFeedEntryType?: FocusableFeedItemType,\n    activityFeedError: ?Errors,\n    approverSelectorContacts?: SelectorItems<User | GroupMini>,\n    contactsLoaded?: boolean,\n    currentUser?: User,\n    feedItems?: FeedItems,\n    file: BoxItem,\n    getApproverWithQuery?: Function,\n    getAvatarUrl: GetAvatarUrlCallback,\n    getMentionWithQuery?: Function,\n    getUserProfileUrl?: GetProfileUrlCallback,\n    hasNewThreadedReplies?: boolean,\n    hasReplies?: boolean,\n    hasVersions?: boolean,\n    isDisabled?: boolean,\n    mentionSelectorContacts?: SelectorItems<User>,\n    onAnnotationDelete?: ({ id: string, permissions: AnnotationPermission }) => void,\n    onAnnotationEdit?: OnAnnotationEdit,\n    onAnnotationSelect?: (annotation: Annotation) => void,\n    onAnnotationStatusChange?: (id: string, status: FeedItemStatus, permissions: AnnotationPermission) => void,\n    onAppActivityDelete?: Function,\n    onCommentCreate?: Function,\n    onCommentDelete?: Function,\n    onCommentUpdate?: (\n        id: string,\n        text?: string,\n        status?: FeedItemStatus,\n        hasMention: boolean,\n        permissions: BoxCommentPermission,\n        onSuccess: ?Function,\n        onError: ?Function,\n    ) => void,\n    onHideReplies?: (id: string, replies: Array<Comment>) => void,\n    onReplyCreate?: (parentId: string, parentType: CommentFeedItemType, text: string) => void,\n    onReplyDelete?: ({ id: string, parentId: string, permissions: BoxCommentPermission }) => void,\n    onReplyUpdate?: (\n        id: string,\n        parentId: string,\n        text: string,\n        permissions: BoxCommentPermission,\n        onSuccess: ?Function,\n        onError: ?Function,\n    ) => void,\n    onShowReplies?: (id: string, type: CommentFeedItemType) => void,\n    onTaskAssignmentUpdate?: Function,\n    onTaskCreate?: Function,\n    onTaskDelete?: Function,\n    onTaskModalClose?: Function,\n    onTaskUpdate?: Function,\n    onTaskView?: Function,\n    onVersionHistoryClick?: Function,\n    shouldUseUAA?: boolean,\n    translations?: Translations,\n};\n\ntype State = {\n    isInputOpen: boolean,\n    isScrolled: boolean,\n    selectedItemId: string | null,\n};\n\nclass ActivityFeed extends React.Component<Props, State> {\n    state = {\n        isScrolled: false,\n        isInputOpen: false,\n        selectedItemId: null,\n    };\n\n    activeFeedItemRef = React.createRef<null | HTMLElement>();\n\n    feedContainer: null | HTMLElement;\n\n    componentDidMount() {\n        this.resetFeedScroll();\n    }\n\n    componentDidUpdate(prevProps: Props, prevState: State) {\n        const {\n            activeFeedEntryId: prevActiveFeedEntryId,\n            currentUser: prevCurrentUser,\n            feedItems: prevFeedItems,\n        } = prevProps;\n        const { feedItems: currFeedItems, activeFeedEntryId } = this.props;\n        const { isInputOpen: prevIsInputOpen } = prevState;\n        const { isInputOpen: currIsInputOpen } = this.state;\n\n        const hasLoaded = this.hasLoaded(prevCurrentUser, prevFeedItems);\n        const hasMoreItems = prevFeedItems && currFeedItems && prevFeedItems.length < currFeedItems.length;\n        const didLoadFeedItems = prevFeedItems === undefined && currFeedItems !== undefined;\n        const hasInputOpened = currIsInputOpen !== prevIsInputOpen;\n        const hasActiveFeedEntryIdChanged = activeFeedEntryId !== prevActiveFeedEntryId;\n\n        if ((hasLoaded || hasMoreItems || didLoadFeedItems || hasInputOpened) && activeFeedEntryId === undefined) {\n            this.resetFeedScroll();\n        }\n\n        if (didLoadFeedItems || hasActiveFeedEntryIdChanged) {\n            this.scrollToActiveFeedItemOrErrorMessage();\n        }\n    }\n\n    scrollToActiveFeedItemOrErrorMessage() {\n        const { current: activeFeedItemRef } = this.activeFeedItemRef;\n        const { activeFeedEntryId } = this.props;\n\n        // if there is no active item, do not scroll\n        if (!activeFeedEntryId) {\n            return;\n        }\n\n        // if there was supposed to be an active feed item but the feed item does not exist\n        // scroll to the bottom to show the inline error message\n        if (activeFeedItemRef === null) {\n            this.resetFeedScroll();\n            return;\n        }\n\n        scrollIntoView(activeFeedItemRef);\n    }\n\n    /**\n     * Detects whether or not the empty state should be shown.\n     * @param {object} currentUser - The user that is logged into the account\n     * @param {object} feedItems - Items in the activity feed\n     */\n    isEmpty = ({ feedItems }: Props = this.props): boolean => {\n        if (feedItems === undefined) {\n            return false;\n        }\n        return feedItems.length === 0 || (feedItems.length === 1 && feedItems[0].type === ItemTypes.fileVersion);\n    };\n\n    /**\n     * Determines whether currentUser and feedItems have loaded.\n     * @param prevCurrentUser - The previous value of the currentUser prop\n     * @param prevFeedItems - The previous value of the feedItems prop\n     * @returns {boolean}\n     */\n    hasLoaded = (prevCurrentUser?: User, prevFeedItems?: FeedItems): boolean => {\n        const { currentUser, feedItems } = this.props;\n        return currentUser !== undefined && feedItems !== undefined && (!prevCurrentUser || !prevFeedItems);\n    };\n\n    /**\n     * Scrolls the container to the bottom\n     */\n    resetFeedScroll = () => {\n        if (this.feedContainer) {\n            this.feedContainer.scrollTop = this.feedContainer.scrollHeight;\n        }\n    };\n\n    handleFeedScroll = (event: UIEvent): void => {\n        const { target } = event;\n        if (target instanceof Element) {\n            const { scrollTop } = target;\n            this.setState({ isScrolled: scrollTop > 0 });\n        }\n    };\n\n    throttledFeedScroll = throttle(this.handleFeedScroll, 100);\n\n    onKeyDown = (event: SyntheticKeyboardEvent<>): void => {\n        const { nativeEvent } = event;\n        nativeEvent.stopImmediatePropagation();\n    };\n\n    commentFormFocusHandler = (): void => {\n        this.resetFeedScroll();\n        this.setState({ isInputOpen: true });\n    };\n\n    commentFormCancelHandler = (): void => this.setState({ isInputOpen: false });\n\n    commentFormSubmitHandler = (): void => this.setState({ isInputOpen: false });\n\n    onCommentCreate = ({ text, hasMention }: { hasMention: boolean, text: string }) => {\n        const { onCommentCreate = noop } = this.props;\n        onCommentCreate(text, hasMention);\n        this.commentFormSubmitHandler();\n    };\n\n    /**\n     * Creates a task.\n     *\n     * @param {string} text - Task text\n     * @param {Array} assignees - List of assignees\n     * @param {number} dueAt - Task's due date\n     * @return {void}\n     */\n    onTaskCreate = ({ text, assignees, dueAt }: { assignees: SelectorItems<>, dueAt: string, text: string }): void => {\n        const { onTaskCreate = noop } = this.props;\n        onTaskCreate(text, assignees, dueAt);\n        this.commentFormSubmitHandler();\n    };\n\n    /**\n     * Invokes version history popup handler.\n     *\n     * @param {Object} data - Version history data\n     * @return {void}\n     */\n    openVersionHistoryPopup = (data: any): void => {\n        const versionInfoHandler = this.props.onVersionHistoryClick || noop;\n        versionInfoHandler(data);\n    };\n\n    setSelectedItem = (itemId: string | null) => {\n        const { hasReplies } = this.props;\n        if (!hasReplies) {\n            return;\n        }\n        this.setState({ selectedItemId: itemId });\n    };\n\n    isFeedItemActive = <T, U: { id: string, type: T }>({ id, type }: U): boolean => {\n        const { activeFeedEntryId, activeFeedEntryType } = this.props;\n        const { selectedItemId } = this.state;\n\n        const isSelected = selectedItemId === id;\n\n        return selectedItemId ? isSelected : id === activeFeedEntryId && type === activeFeedEntryType;\n    };\n\n    isCommentFeedItemActive = <T, U: { id: string, replies?: Array<Comment>, type: T }>(item: U): boolean => {\n        const { activeFeedEntryId } = this.props;\n        const { replies } = item;\n\n        const isActive = this.isFeedItemActive<T, U>(item);\n        return isActive || (!!replies && replies.some(reply => reply.id === activeFeedEntryId));\n    };\n\n    render(): React.Node {\n        const {\n            activeFeedEntryType,\n            activityFeedError,\n            approverSelectorContacts,\n            currentUser,\n            feedItems,\n            file,\n            getApproverWithQuery,\n            getAvatarUrl,\n            getMentionWithQuery,\n            getUserProfileUrl,\n            hasNewThreadedReplies,\n            hasReplies,\n            hasVersions,\n            isDisabled,\n            mentionSelectorContacts,\n            contactsLoaded,\n            onAnnotationDelete,\n            onAnnotationEdit,\n            onAnnotationSelect,\n            onAnnotationStatusChange,\n            onAppActivityDelete,\n            onCommentCreate,\n            onCommentDelete,\n            onCommentUpdate,\n            onHideReplies,\n            onReplyCreate,\n            onReplyDelete,\n            onReplyUpdate,\n            onShowReplies,\n            onTaskAssignmentUpdate,\n            onTaskDelete,\n            onTaskModalClose,\n            onTaskUpdate,\n            onTaskView,\n            onVersionHistoryClick,\n            shouldUseUAA,\n            translations,\n        } = this.props;\n        const { isInputOpen, isScrolled } = this.state;\n        const currentFileVersionId = getProp(file, 'file_version.id');\n        const hasAnnotationCreatePermission = getProp(file, ['permissions', PERMISSION_CAN_CREATE_ANNOTATIONS], false);\n        const hasCommentPermission = getProp(file, 'permissions.can_comment', false);\n        const showCommentForm = !!(currentUser && hasCommentPermission && onCommentCreate && feedItems);\n\n        const isEmpty = this.isEmpty(this.props);\n        const isLoading = !this.hasLoaded();\n\n        const activeFeedItem =\n            Array.isArray(feedItems) &&\n            feedItems.find(item => {\n                switch (item.type) {\n                    case FEED_ITEM_TYPE_ANNOTATION:\n                        return this.isCommentFeedItemActive<typeof FEED_ITEM_TYPE_ANNOTATION, Annotation>(item);\n                    case FEED_ITEM_TYPE_COMMENT:\n                        return this.isCommentFeedItemActive<typeof FEED_ITEM_TYPE_COMMENT, Comment>(item);\n                    case FEED_ITEM_TYPE_TASK:\n                        return this.isFeedItemActive<typeof FEED_ITEM_TYPE_TASK, Task>(item);\n                    default:\n                        return false;\n                }\n            });\n\n        const errorMessageByEntryType = {\n            annotation: messages.annotationMissingError,\n            comment: messages.commentMissingError,\n            task: messages.taskMissingError,\n        };\n\n        const inlineFeedItemErrorMessage = activeFeedEntryType\n            ? errorMessageByEntryType[activeFeedEntryType]\n            : undefined;\n\n        const isInlineFeedItemErrorVisible = !isLoading && activeFeedEntryType && !activeFeedItem;\n\n        return (\n            // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n            <div\n                className={classNames('bcs-activity-feed', { 'bcs-is-scrolled': isScrolled })}\n                data-testid={isScrolled ? 'activityfeedscrolled' : 'activityfeed'}\n                onKeyDown={this.onKeyDown}\n            >\n                <div\n                    ref={ref => {\n                        this.feedContainer = ref;\n                    }}\n                    className=\"bcs-activity-feed-items-container\"\n                    onScroll={this.throttledFeedScroll}\n                >\n                    {isLoading && (\n                        <div className=\"bcs-activity-feed-loading-state\">\n                            <LoadingIndicator />\n                        </div>\n                    )}\n\n                    {isEmpty && !isLoading && (\n                        <EmptyState\n                            showAnnotationMessage={hasAnnotationCreatePermission}\n                            showCommentMessage={showCommentForm}\n                        />\n                    )}\n                    {!isEmpty && !isLoading && (\n                        <ActiveState\n                            {...activityFeedError}\n                            activeFeedItem={activeFeedItem}\n                            activeFeedItemRef={this.activeFeedItemRef}\n                            approverSelectorContacts={approverSelectorContacts}\n                            currentFileVersionId={currentFileVersionId}\n                            currentUser={currentUser}\n                            getApproverWithQuery={getApproverWithQuery}\n                            getAvatarUrl={getAvatarUrl}\n                            getMentionWithQuery={getMentionWithQuery}\n                            getUserProfileUrl={getUserProfileUrl}\n                            hasNewThreadedReplies={hasNewThreadedReplies}\n                            hasReplies={hasReplies}\n                            hasVersions={hasVersions}\n                            isDisabled={isDisabled}\n                            items={collapseFeedState(feedItems)}\n                            mentionSelectorContacts={mentionSelectorContacts}\n                            onAnnotationDelete={onAnnotationDelete}\n                            onAnnotationEdit={onAnnotationEdit}\n                            onAnnotationSelect={onAnnotationSelect}\n                            onAnnotationStatusChange={onAnnotationStatusChange}\n                            onAppActivityDelete={onAppActivityDelete}\n                            onCommentDelete={hasCommentPermission ? onCommentDelete : noop}\n                            onCommentEdit={\n                                hasCommentPermission && onCommentUpdate\n                                    ? props => {\n                                          onCommentUpdate(\n                                              props.id,\n                                              props.text,\n                                              props.status,\n                                              props.hasMention,\n                                              props.permissions,\n                                              props.onSuccess,\n                                              props.onError,\n                                          );\n                                      }\n                                    : noop\n                            }\n                            onCommentSelect={this.setSelectedItem}\n                            onHideReplies={onHideReplies}\n                            onReplyCreate={hasCommentPermission ? onReplyCreate : noop}\n                            onReplyDelete={hasCommentPermission ? onReplyDelete : noop}\n                            onReplyUpdate={hasCommentPermission ? onReplyUpdate : noop}\n                            onShowReplies={onShowReplies}\n                            onTaskAssignmentUpdate={onTaskAssignmentUpdate}\n                            onTaskDelete={onTaskDelete}\n                            onTaskEdit={onTaskUpdate}\n                            onTaskModalClose={onTaskModalClose}\n                            onTaskView={onTaskView}\n                            onVersionInfo={onVersionHistoryClick ? this.openVersionHistoryPopup : null}\n                            shouldUseUAA={shouldUseUAA}\n                            translations={translations}\n                        />\n                    )}\n                    {isInlineFeedItemErrorVisible && inlineFeedItemErrorMessage && (\n                        <InlineError\n                            title={<FormattedMessage {...messages.feedInlineErrorTitle} />}\n                            className=\"bcs-feedItemInlineError\"\n                        >\n                            <FormattedMessage {...inlineFeedItemErrorMessage} />\n                        </InlineError>\n                    )}\n                </div>\n\n                {showCommentForm ? (\n                    <CommentForm\n                        onSubmit={this.resetFeedScroll}\n                        isDisabled={isDisabled}\n                        mentionSelectorContacts={mentionSelectorContacts}\n                        contactsLoaded={contactsLoaded}\n                        className={classNames('bcs-activity-feed-comment-input', {\n                            'bcs-is-disabled': isDisabled,\n                        })}\n                        createComment={hasCommentPermission ? this.onCommentCreate : noop}\n                        getMentionWithQuery={getMentionWithQuery}\n                        isOpen={isInputOpen}\n                        // $FlowFixMe\n                        user={currentUser}\n                        onCancel={this.commentFormCancelHandler}\n                        onFocus={this.commentFormFocusHandler}\n                        getAvatarUrl={getAvatarUrl}\n                    />\n                ) : null}\n            </div>\n        );\n    }\n}\n\nexport default ActivityFeed;\n"],"file":"ActivityFeed.js"}