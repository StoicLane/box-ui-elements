{"version":3,"sources":["../../../../../src/elements/content-sidebar/activity-feed/activity-feed/ActivityThread.js"],"names":["React","FormattedMessage","noop","PlainButton","ActivityThreadReplies","ActivityThreadReplyForm","messages","ActivityThread","children","currentUser","getAvatarUrl","getMentionWithQuery","getUserProfileUrl","hasNewThreadedReplies","hasReplies","isAlwaysExpanded","isPending","isRepliesLoading","mentionSelectorContacts","onHideReplies","onReplyCreate","onReplyDelete","onReplyEdit","onReplySelect","onShowReplies","replies","repliesTotalCount","translations","repliesLength","length","repliesToLoadCount","Math","max","onHideRepliesHandler","handleFormFocusOrShow","handleFormHide","renderButton","showReplies","hideReplies"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport noop from 'lodash/noop';\n\nimport PlainButton from '../../../../components/plain-button';\nimport ActivityThreadReplies from './ActivityThreadReplies';\nimport ActivityThreadReplyForm from './ActivityThreadReplyForm';\n\nimport type { GetAvatarUrlCallback, GetProfileUrlCallback } from '../../../common/flowTypes';\nimport type { Translations } from '../../flowTypes';\nimport type { SelectorItems, User } from '../../../../common/types/core';\nimport type { BoxCommentPermission, Comment as CommentType, FeedItemStatus } from '../../../../common/types/feed';\n\nimport messages from './messages';\n\nimport './ActivityThread.scss';\n\ntype Props = {\n    children: React.Node,\n    currentUser?: User,\n    getAvatarUrl: GetAvatarUrlCallback,\n    getMentionWithQuery?: Function,\n    getUserProfileUrl?: GetProfileUrlCallback,\n    hasNewThreadedReplies?: boolean,\n    hasReplies: boolean,\n    isAlwaysExpanded?: boolean,\n    isPending?: boolean,\n    isRepliesLoading?: boolean,\n    mentionSelectorContacts?: SelectorItems<>,\n    onHideReplies?: (lastReply: CommentType) => void,\n    onReplyCreate?: (text: string) => void,\n    onReplyDelete?: ({ id: string, permissions: BoxCommentPermission }) => void,\n    onReplyEdit?: (\n        id: string,\n        text: string,\n        status?: FeedItemStatus,\n        hasMention?: boolean,\n        permissions: BoxCommentPermission,\n        onSuccess: ?Function,\n        onError: ?Function,\n    ) => void,\n    onReplySelect?: (isSelected: boolean) => void,\n    onShowReplies?: () => void,\n    replies?: Array<CommentType>,\n    repliesTotalCount?: number,\n    translations?: Translations,\n};\n\nconst ActivityThread = ({\n    children,\n    currentUser,\n    getAvatarUrl,\n    getMentionWithQuery,\n    getUserProfileUrl,\n    hasNewThreadedReplies = false,\n    hasReplies,\n    isAlwaysExpanded = false,\n    isPending,\n    isRepliesLoading,\n    mentionSelectorContacts,\n    onHideReplies = noop,\n    onReplyCreate,\n    onReplyDelete = noop,\n    onReplyEdit = noop,\n    onReplySelect = noop,\n    onShowReplies = noop,\n    replies = [],\n    repliesTotalCount = 0,\n    translations,\n}: Props) => {\n    const { length: repliesLength } = replies;\n    const repliesToLoadCount = Math.max(repliesTotalCount - repliesLength, 0);\n\n    const onHideRepliesHandler = () => {\n        if (repliesLength) {\n            onHideReplies(replies[repliesLength - 1]);\n        }\n    };\n\n    const handleFormFocusOrShow = () => {\n        onReplySelect(true);\n    };\n\n    const handleFormHide = () => {\n        onReplySelect(false);\n    };\n\n    const renderButton = () => {\n        if (isAlwaysExpanded || isRepliesLoading) {\n            return null;\n        }\n\n        if (repliesTotalCount > repliesLength) {\n            return (\n                <PlainButton\n                    className=\"bcs-ActivityThread-toggle\"\n                    onClick={onShowReplies}\n                    type=\"button\"\n                    data-testid=\"activity-thread-button\"\n                >\n                    <FormattedMessage values={{ repliesToLoadCount }} {...messages.showReplies} />\n                </PlainButton>\n            );\n        }\n        if (repliesTotalCount > 1 && repliesTotalCount === repliesLength) {\n            return (\n                <PlainButton\n                    className=\"bcs-ActivityThread-toggle\"\n                    onClick={onHideRepliesHandler}\n                    type=\"button\"\n                    data-testid=\"activity-thread-button\"\n                >\n                    <FormattedMessage {...messages.hideReplies} />\n                </PlainButton>\n            );\n        }\n\n        return null;\n    };\n\n    if (!hasReplies) {\n        return children;\n    }\n    return (\n        <div className=\"bcs-ActivityThread\" data-testid=\"activity-thread\">\n            <div className=\"bcs-ActivityThread-selectWrapper\">\n                <div className=\"bcs-ActivityThread-content\">\n                    {children}\n\n                    {renderButton()}\n\n                    {repliesTotalCount > 0 && repliesLength > 0 && (\n                        <ActivityThreadReplies\n                            currentUser={currentUser}\n                            getAvatarUrl={getAvatarUrl}\n                            getMentionWithQuery={getMentionWithQuery}\n                            getUserProfileUrl={getUserProfileUrl}\n                            hasNewThreadedReplies={hasNewThreadedReplies}\n                            isRepliesLoading={isRepliesLoading}\n                            mentionSelectorContacts={mentionSelectorContacts}\n                            onDelete={onReplyDelete}\n                            onEdit={onReplyEdit}\n                            onSelect={onReplySelect}\n                            replies={replies}\n                            translations={translations}\n                        />\n                    )}\n                </div>\n\n                {onReplyCreate && (\n                    <ActivityThreadReplyForm\n                        getMentionWithQuery={getMentionWithQuery}\n                        isDisabled={isPending}\n                        mentionSelectorContacts={mentionSelectorContacts}\n                        onFocus={handleFormFocusOrShow}\n                        onHide={handleFormHide}\n                        onShow={handleFormFocusOrShow}\n                        onReplyCreate={onReplyCreate}\n                    />\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default ActivityThread;\n"],"file":"ActivityThread.js"}