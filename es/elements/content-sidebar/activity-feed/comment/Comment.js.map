{"version":3,"sources":["../../../../../src/elements/content-sidebar/activity-feed/comment/Comment.js"],"names":["React","classNames","noop","FormattedMessage","TetherComponent","Checkmark16","Trash16","Pencil16","X16","Avatar","Media","MenuItem","ACTIVITY_TARGETS","DeleteConfirmation","ActivityTimestamp","UserLink","ActivityCard","ActivityError","ActivityMessage","ActivityStatus","CommentForm","COMMENT_STATUS_OPEN","COMMENT_STATUS_RESOLVED","PLACEHOLDER_USER","messages","Comment","isConfirmingDelete","isEditing","isInputOpen","isSelected","onSelect","props","id","onDelete","permissions","selectComment","setState","state","text","hasMention","onEdit","commentFormSubmitHandler","status","created_by","created_at","isPending","error","tagged_message","translatedTaggedMessage","translations","currentUser","isDisabled","getAvatarUrl","getUserProfileUrl","getMentionWithQuery","mentionSelectorContacts","modified_at","canDelete","can_delete","canEdit","can_edit","canResolve","can_resolve","createdAtTimestamp","Date","getTime","createdByUser","isEdited","undefined","isMenuVisible","isResolved","to","attachment","onMenuOpen","handleMenuOpen","onMenuClose","handleMenuClose","COMMENT_OPTIONS","COMMENT_OPTIONS_EDIT","handleStatusUpdate","commentUnresolveMenuItem","commentResolveMenuItem","handleEditClick","commentEditMenuItem","COMMENT_OPTIONS_DELETE","handleDeleteClick","commentDeleteMenuItem","commentDeletePrompt","handleDeleteCancel","handleDeleteConfirm","PROFILE","name","handleMessageUpdate","commentFormCancelHandler","commentFormFocusHandler","Component"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport noop from 'lodash/noop';\nimport { FormattedMessage } from 'react-intl';\nimport TetherComponent from 'react-tether';\nimport Checkmark16 from '../../../../icon/line/Checkmark16';\nimport Trash16 from '../../../../icon/line/Trash16';\nimport Pencil16 from '../../../../icon/line/Pencil16';\nimport X16 from '../../../../icon/fill/X16';\nimport Avatar from '../Avatar';\nimport Media from '../../../../components/media';\nimport { MenuItem } from '../../../../components/menu';\nimport { ACTIVITY_TARGETS } from '../../../common/interactionTargets';\nimport DeleteConfirmation from '../common/delete-confirmation';\nimport ActivityTimestamp from '../common/activity-timestamp';\nimport UserLink from '../common/user-link';\nimport ActivityCard from '../ActivityCard';\nimport ActivityError from '../common/activity-error';\nimport ActivityMessage from '../common/activity-message';\nimport ActivityStatus from '../common/activity-status';\nimport CommentForm from '../comment-form';\nimport { COMMENT_STATUS_OPEN, COMMENT_STATUS_RESOLVED, PLACEHOLDER_USER } from '../../../../constants';\nimport messages from './messages';\nimport type { GetAvatarUrlCallback, GetProfileUrlCallback } from '../../../common/flowTypes';\nimport type { Translations } from '../../flowTypes';\nimport type { SelectorItems, User } from '../../../../common/types/core';\nimport type { ActionItemError, BoxCommentPermission, FeedItemStatus } from '../../../../common/types/feed';\nimport './Comment.scss';\nimport { type OnCommentEdit } from './types';\n\ntype Props = {\n    created_at: string | number,\n    created_by: User,\n    currentUser?: User,\n    error?: ActionItemError,\n    getAvatarUrl: GetAvatarUrlCallback,\n    getMentionWithQuery?: Function,\n    getUserProfileUrl?: GetProfileUrlCallback,\n    id: string,\n    isDisabled?: boolean,\n    isPending?: boolean,\n    mentionSelectorContacts?: SelectorItems<>,\n    modified_at?: string | number,\n    onDelete: ({ id: string, permissions?: BoxCommentPermission }) => any,\n    onEdit: OnCommentEdit,\n    onSelect: (isSelected: boolean) => void,\n    permissions: BoxCommentPermission,\n    status?: FeedItemStatus,\n    tagged_message: string,\n    translatedTaggedMessage?: string,\n    translations?: Translations,\n};\n\ntype State = {\n    isConfirmingDelete: boolean,\n    isEditing: boolean,\n    isInputOpen: boolean,\n};\n\nclass Comment extends React.Component<Props, State> {\n    static defaultProps = {\n        onDelete: noop,\n        onEdit: noop,\n    };\n\n    state = {\n        isConfirmingDelete: false,\n        isEditing: false,\n        isInputOpen: false,\n    };\n\n    selectComment = (isSelected: boolean = true) => {\n        const { onSelect } = this.props;\n        onSelect(isSelected);\n    };\n\n    handleDeleteConfirm = (): void => {\n        const { id, onDelete, permissions } = this.props;\n        onDelete({ id, permissions });\n        this.selectComment(false);\n    };\n\n    handleDeleteCancel = (): void => {\n        this.setState({ isConfirmingDelete: false });\n        this.selectComment(false);\n    };\n\n    handleDeleteClick = () => {\n        this.setState({ isConfirmingDelete: true });\n        this.selectComment();\n    };\n\n    handleEditClick = (): void => {\n        this.setState({ isEditing: true, isInputOpen: true });\n        this.selectComment();\n    };\n\n    handleMenuClose = (): void => {\n        const { isConfirmingDelete, isEditing, isInputOpen } = this.state;\n\n        if (isConfirmingDelete || isEditing || isInputOpen) {\n            return;\n        }\n        this.selectComment(false);\n    };\n\n    handleMenuOpen = (): void => {\n        this.selectComment();\n    };\n\n    commentFormFocusHandler = (): void => {\n        this.setState({ isInputOpen: true });\n        this.selectComment();\n    };\n\n    commentFormCancelHandler = (): void => {\n        this.setState({ isInputOpen: false, isEditing: false });\n        this.selectComment(false);\n    };\n\n    commentFormSubmitHandler = (): void => {\n        this.setState({ isInputOpen: false, isEditing: false });\n        this.selectComment(false);\n    };\n\n    handleMessageUpdate = ({ id, text, hasMention }: { hasMention: boolean, id: string, text: string }): void => {\n        const { onEdit, permissions } = this.props;\n        onEdit({ id, text, hasMention, permissions });\n        this.commentFormSubmitHandler();\n    };\n\n    handleStatusUpdate = (status: FeedItemStatus): void => {\n        const { id, onEdit, permissions } = this.props;\n        onEdit({ id, status, hasMention: false, permissions });\n    };\n\n    render(): React.Node {\n        const {\n            created_by,\n            created_at,\n            permissions = {},\n            id,\n            isPending,\n            error,\n            tagged_message = '',\n            translatedTaggedMessage,\n            translations,\n            currentUser,\n            isDisabled,\n            getAvatarUrl,\n            getUserProfileUrl,\n            getMentionWithQuery,\n            mentionSelectorContacts,\n            modified_at,\n            onEdit,\n            status,\n        } = this.props;\n        const { isConfirmingDelete, isEditing, isInputOpen } = this.state;\n        const canDelete = permissions.can_delete;\n        const canEdit = onEdit !== noop && permissions.can_edit;\n        const canResolve = onEdit !== noop && permissions.can_resolve;\n        const createdAtTimestamp = new Date(created_at).getTime();\n        const createdByUser = created_by || PLACEHOLDER_USER;\n        const isEdited = modified_at !== undefined && modified_at !== created_at;\n        const isMenuVisible = (canDelete || canEdit || canResolve) && !isPending;\n        const isResolved = status === COMMENT_STATUS_RESOLVED;\n\n        return (\n            <ActivityCard className=\"bcs-Comment\">\n                <Media\n                    className={classNames('bcs-Comment-media', {\n                        'bcs-is-pending': isPending || error,\n                    })}\n                >\n                    <Media.Figure>\n                        <Avatar getAvatarUrl={getAvatarUrl} user={createdByUser} />\n                    </Media.Figure>\n                    <Media.Body>\n                        {isMenuVisible && (\n                            <TetherComponent\n                                attachment=\"top right\"\n                                className=\"bcs-Comment-deleteConfirmationModal\"\n                                constraints={[{ to: 'scrollParent', attachment: 'together' }]}\n                                targetAttachment=\"bottom right\"\n                            >\n                                <Media.Menu\n                                    isDisabled={isConfirmingDelete}\n                                    data-testid=\"comment-actions-menu\"\n                                    dropdownProps={{\n                                        onMenuOpen: this.handleMenuOpen,\n                                        onMenuClose: this.handleMenuClose,\n                                    }}\n                                    menuProps={{\n                                        'data-resin-component': ACTIVITY_TARGETS.COMMENT_OPTIONS,\n                                    }}\n                                >\n                                    {canResolve && isResolved && (\n                                        <MenuItem\n                                            className=\"bcs-Comment-unresolveComment\"\n                                            data-resin-target={ACTIVITY_TARGETS.COMMENT_OPTIONS_EDIT}\n                                            data-testid=\"unresolve-comment\"\n                                            onClick={() => this.handleStatusUpdate(COMMENT_STATUS_OPEN)}\n                                        >\n                                            <X16 />\n                                            <FormattedMessage {...messages.commentUnresolveMenuItem} />\n                                        </MenuItem>\n                                    )}\n                                    {canResolve && !isResolved && (\n                                        <MenuItem\n                                            data-resin-target={ACTIVITY_TARGETS.COMMENT_OPTIONS_EDIT}\n                                            data-testid=\"resolve-comment\"\n                                            onClick={() => this.handleStatusUpdate(COMMENT_STATUS_RESOLVED)}\n                                        >\n                                            <Checkmark16 />\n                                            <FormattedMessage {...messages.commentResolveMenuItem} />\n                                        </MenuItem>\n                                    )}\n                                    {canEdit && (\n                                        <MenuItem\n                                            data-resin-target={ACTIVITY_TARGETS.COMMENT_OPTIONS_EDIT}\n                                            data-testid=\"edit-comment\"\n                                            onClick={this.handleEditClick}\n                                        >\n                                            <Pencil16 />\n                                            <FormattedMessage {...messages.commentEditMenuItem} />\n                                        </MenuItem>\n                                    )}\n                                    {canDelete && (\n                                        <MenuItem\n                                            data-resin-target={ACTIVITY_TARGETS.COMMENT_OPTIONS_DELETE}\n                                            data-testid=\"delete-comment\"\n                                            onClick={this.handleDeleteClick}\n                                        >\n                                            <Trash16 />\n                                            <FormattedMessage {...messages.commentDeleteMenuItem} />\n                                        </MenuItem>\n                                    )}\n                                </Media.Menu>\n                                {isConfirmingDelete && (\n                                    <DeleteConfirmation\n                                        data-resin-component={ACTIVITY_TARGETS.COMMENT_OPTIONS}\n                                        isOpen={isConfirmingDelete}\n                                        message={messages.commentDeletePrompt}\n                                        onDeleteCancel={this.handleDeleteCancel}\n                                        onDeleteConfirm={this.handleDeleteConfirm}\n                                    />\n                                )}\n                            </TetherComponent>\n                        )}\n                        <div className=\"bcs-Comment-headline\">\n                            <UserLink\n                                data-resin-target={ACTIVITY_TARGETS.PROFILE}\n                                id={createdByUser.id}\n                                name={createdByUser.name}\n                                getUserProfileUrl={getUserProfileUrl}\n                            />\n                        </div>\n                        <div className=\"bcs-Comment-timestamp\">\n                            <ActivityTimestamp date={createdAtTimestamp} />\n                        </div>\n                        <ActivityStatus status={status} />\n                        {isEditing ? (\n                            <CommentForm\n                                isDisabled={isDisabled}\n                                className={classNames('bcs-Comment-editor', {\n                                    'bcs-is-disabled': isDisabled,\n                                })}\n                                updateComment={this.handleMessageUpdate}\n                                isOpen={isInputOpen}\n                                // $FlowFixMe\n                                user={currentUser}\n                                onCancel={this.commentFormCancelHandler}\n                                onFocus={this.commentFormFocusHandler}\n                                isEditing={isEditing}\n                                entityId={id}\n                                tagged_message={tagged_message}\n                                getAvatarUrl={getAvatarUrl}\n                                mentionSelectorContacts={mentionSelectorContacts}\n                                getMentionWithQuery={getMentionWithQuery}\n                            />\n                        ) : (\n                            <ActivityMessage\n                                id={id}\n                                isEdited={isEdited && !isResolved}\n                                tagged_message={tagged_message}\n                                translatedTaggedMessage={translatedTaggedMessage}\n                                {...translations}\n                                translationFailed={error ? true : null}\n                                getUserProfileUrl={getUserProfileUrl}\n                            />\n                        )}\n                    </Media.Body>\n                </Media>\n                {/* $FlowFixMe */}\n                {error ? <ActivityError {...error} /> : null}\n            </ActivityCard>\n        );\n    }\n}\n\nexport default Comment;\n"],"file":"Comment.js"}