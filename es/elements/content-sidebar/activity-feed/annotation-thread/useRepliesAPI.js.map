{"version":3,"sources":["../../../../../src/elements/content-sidebar/activity-feed/annotation-thread/useRepliesAPI.js"],"names":["APIFactory","useRepliesAPI","annotationId","api","errorCallback","fileId","filePermissions","createReply","message","requestId","successCallback","getAnnotationsAPI","createAnnotationReply","bind","deleteReply","id","permissions","getThreadedCommentsAPI","deleteComment","commentId","editReply","updateComment"],"mappings":"AACA,OAAOA,UAAP,MAAuB,iBAAvB;;AAcA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAA0E;AAAA,MAAvEC,YAAuE,QAAvEA,YAAuE;AAAA,MAAzDC,GAAyD,QAAzDA,GAAyD;AAAA,MAApDC,aAAoD,QAApDA,aAAoD;AAAA,MAArCC,MAAqC,QAArCA,MAAqC;AAAA,MAA7BC,eAA6B,QAA7BA,eAA6B;;AAC5F,MAAMC,WAAW,GAAG,SAAdA,WAAc,QAQd;AAAA,QAPFC,OAOE,SAPFA,OAOE;AAAA,QANFC,SAME,SANFA,SAME;AAAA,QALFC,eAKE,SALFA,eAKE;;AACF,QAAI,CAACR,YAAL,EAAmB;AACf;AACH;;AACDC,IAAAA,GAAG,CAACQ,iBAAJ,CAAsB,KAAtB,EAA6BC,qBAA7B,CACIP,MADJ,EAEIH,YAFJ,EAGII,eAHJ,EAIIE,OAJJ,EAKIE,eALJ,EAMIN,aAAa,CAACS,IAAd,CAAmB,IAAnB,EAAyBJ,SAAzB,CANJ;AAQH,GApBD;;AAsBA,MAAMK,WAAW,GAAG,SAAdA,WAAc,QAQd;AAAA,QAPFC,EAOE,SAPFA,EAOE;AAAA,QANFC,WAME,SANFA,WAME;AAAA,QALFN,eAKE,SALFA,eAKE;AACFP,IAAAA,GAAG,CAACc,sBAAJ,CAA2B,KAA3B,EAAkCC,aAAlC,CAAgD;AAC5Cb,MAAAA,MAAM,EAANA,MAD4C;AAE5Cc,MAAAA,SAAS,EAAEJ,EAFiC;AAG5CC,MAAAA,WAAW,EAAXA,WAH4C;AAI5CN,MAAAA,eAAe,EAAfA,eAJ4C;AAK5CN,MAAAA,aAAa,EAAEA,aAAa,CAACS,IAAd,CAAmB,IAAnB,EAAyBE,EAAzB;AAL6B,KAAhD;AAOH,GAhBD;;AAkBA,MAAMK,SAAS,GAAG,SAAZA,SAAY,QAUZ;AAAA,QATFL,EASE,SATFA,EASE;AAAA,QARFP,OAQE,SARFA,OAQE;AAAA,QAPFQ,WAOE,SAPFA,WAOE;AAAA,QANFN,eAME,SANFA,eAME;AACFP,IAAAA,GAAG,CAACc,sBAAJ,CAA2B,KAA3B,EAAkCI,aAAlC,CAAgD;AAC5ChB,MAAAA,MAAM,EAANA,MAD4C;AAE5Cc,MAAAA,SAAS,EAAEJ,EAFiC;AAG5CP,MAAAA,OAAO,EAAPA,OAH4C;AAI5CQ,MAAAA,WAAW,EAAXA,WAJ4C;AAK5CN,MAAAA,eAAe,EAAfA,eAL4C;AAM5CN,MAAAA,aAAa,EAAEA,aAAa,CAACS,IAAd,CAAmB,IAAnB,EAAyBE,EAAzB;AAN6B,KAAhD;AAQH,GAnBD;;AAqBA,SAAO;AAAER,IAAAA,WAAW,EAAXA,WAAF;AAAeO,IAAAA,WAAW,EAAXA,WAAf;AAA4BM,IAAAA,SAAS,EAATA;AAA5B,GAAP;AACH,CA/DD;;AAiEA,eAAenB,aAAf","sourcesContent":["// @flow\nimport APIFactory from '../../../../api';\n\nimport type { BoxItemPermission } from '../../../../common/types/core';\nimport type { BoxCommentPermission, Comment } from '../../../../common/types/feed';\nimport type { ElementsXhrError } from '../../../../common/types/api';\n\ntype Props = {\n    annotationId?: string,\n    api: APIFactory,\n    errorCallback: (replyId: string, error: ElementsXhrError | Error, code: string) => void,\n    fileId: string,\n    filePermissions: BoxItemPermission,\n};\n\nconst useRepliesAPI = ({ annotationId, api, errorCallback, fileId, filePermissions }: Props) => {\n    const createReply = ({\n        message,\n        requestId,\n        successCallback,\n    }: {\n        message: string,\n        requestId: string,\n        successCallback: (comment: Comment) => void,\n    }) => {\n        if (!annotationId) {\n            return;\n        }\n        api.getAnnotationsAPI(false).createAnnotationReply(\n            fileId,\n            annotationId,\n            filePermissions,\n            message,\n            successCallback,\n            errorCallback.bind(null, requestId),\n        );\n    };\n\n    const deleteReply = ({\n        id,\n        permissions,\n        successCallback,\n    }: {\n        id: string,\n        permissions: BoxCommentPermission,\n        successCallback: () => void,\n    }) => {\n        api.getThreadedCommentsAPI(false).deleteComment({\n            fileId,\n            commentId: id,\n            permissions,\n            successCallback,\n            errorCallback: errorCallback.bind(null, id),\n        });\n    };\n\n    const editReply = ({\n        id,\n        message,\n        permissions,\n        successCallback,\n    }: {\n        id: string,\n        message: string,\n        permissions: BoxCommentPermission,\n        successCallback: (comment: Comment) => void,\n    }) => {\n        api.getThreadedCommentsAPI(false).updateComment({\n            fileId,\n            commentId: id,\n            message,\n            permissions,\n            successCallback,\n            errorCallback: errorCallback.bind(null, id),\n        });\n    };\n\n    return { createReply, deleteReply, editReply };\n};\n\nexport default useRepliesAPI;\n"],"file":"useRepliesAPI.js"}