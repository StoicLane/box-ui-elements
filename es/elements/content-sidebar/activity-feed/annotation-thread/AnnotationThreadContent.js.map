{"version":3,"sources":["../../../../../src/elements/content-sidebar/activity-feed/annotation-thread/AnnotationThreadContent.js"],"names":["React","ActivityError","ActivityThread","AnnotationActivity","LoadingIndicator","AnnotationThreadContent","annotation","currentUser","error","getAvatarUrl","getMentionWithQuery","getUserProfileUrl","isLoading","mentionSelectorContacts","onAnnotationDelete","onAnnotationEdit","onAnnotationStatusChange","onReplyCreate","onReplyDelete","onReplyEdit","replies","length"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,kBAAP,MAA+B,gBAA/B;AACA,OAAOC,gBAAP,MAA6B,2DAA7B;AAaA,OAAO,gCAAP;;AA8BA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,OAgBnB;AAAA,MAfTC,UAeS,QAfTA,UAeS;AAAA,MAdTC,WAcS,QAdTA,WAcS;AAAA,MAbTC,KAaS,QAbTA,KAaS;AAAA,MAZTC,YAYS,QAZTA,YAYS;AAAA,MAXTC,mBAWS,QAXTA,mBAWS;AAAA,MAVTC,iBAUS,QAVTA,iBAUS;AAAA,MATTC,SASS,QATTA,SASS;AAAA,MARTC,uBAQS,QARTA,uBAQS;AAAA,MAPTC,kBAOS,QAPTA,kBAOS;AAAA,MANTC,gBAMS,QANTA,gBAMS;AAAA,MALTC,wBAKS,QALTA,wBAKS;AAAA,MAJTC,aAIS,QAJTA,aAIS;AAAA,MAHTC,aAGS,QAHTA,aAGS;AAAA,MAFTC,WAES,QAFTA,WAES;AAAA,0BADTC,OACS;AAAA,MADTA,OACS,6BADC,EACD;AACT,SACI,0CACKZ,KAAK,IAAI,oBAAC,aAAD,EAAmBA,KAAnB,CADd,EAEKI,SAAS,IACN;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAiD,mBAAY;AAA7D,KACI,oBAAC,gBAAD,OADJ,CAHR,EAOKN,UAAU,IACP,oBAAC,cAAD;AACI,IAAA,YAAY,EAAEG,YADlB;AAEI,IAAA,mBAAmB,EAAEC,mBAFzB;AAGI,IAAA,iBAAiB,EAAEC,iBAHvB;AAII,IAAA,UAAU,MAJd;AAKI,IAAA,gBAAgB,MALpB;AAMI,IAAA,gBAAgB,EAAEC,SANtB;AAOI,IAAA,uBAAuB,EAAEC,uBAP7B;AAQI,IAAA,aAAa,EAAEI,aARnB;AASI,IAAA,aAAa,EAAEC,aATnB;AAUI,IAAA,WAAW,EAAEC,WAVjB;AAWI,IAAA,OAAO,EAAEC,OAXb;AAYI,IAAA,iBAAiB,EAAEA,OAAO,CAACC;AAZ/B,KAcI,oBAAC,kBAAD;AACI,IAAA,WAAW,EAAEd,WADjB;AAEI,IAAA,YAAY,EAAEE,YAFlB;AAGI,IAAA,mBAAmB,EAAEC,mBAHzB;AAII,IAAA,iBAAiB,EAAEC,iBAJvB;AAKI,IAAA,gBAAgB,MALpB;AAMI,IAAA,IAAI,EAAEL,UANV;AAOI,IAAA,uBAAuB,EAAEO,uBAP7B;AAQI,IAAA,QAAQ,EAAEC,kBARd;AASI,IAAA,MAAM,EAAEC,gBATZ;AAUI,IAAA,cAAc,EAAEC;AAVpB,IAdJ,CARR,CADJ;AAuCH,CAxDD;;AA0DA,eAAeX,uBAAf","sourcesContent":["// @flow\nimport React from 'react';\nimport ActivityError from '../common/activity-error';\nimport ActivityThread from '../activity-feed/ActivityThread';\nimport AnnotationActivity from '../annotations';\nimport LoadingIndicator from '../../../../components/loading-indicator/LoadingIndicator';\n\nimport type {\n    Annotation,\n    AnnotationPermission,\n    BoxCommentPermission,\n    Comment,\n    FeedItemStatus,\n} from '../../../../common/types/feed';\nimport type { SelectorItems, User } from '../../../../common/types/core';\nimport type { GetProfileUrlCallback } from '../../../common/flowTypes';\nimport type { AnnotationThreadError } from './types';\n\nimport './AnnotationThreadContent.scss';\n\nimport type { OnAnnotationEdit } from '../comment/types';\n\ntype Props = {\n    annotation?: Annotation,\n    currentUser: User,\n    error?: AnnotationThreadError,\n    getAvatarUrl: string => Promise<?string>,\n    getMentionWithQuery: (searchStr: string) => void,\n    getUserProfileUrl?: GetProfileUrlCallback,\n    isLoading: boolean,\n    mentionSelectorContacts: SelectorItems<>,\n    onAnnotationDelete?: ({ id: string, permissions: AnnotationPermission }) => any,\n    onAnnotationEdit?: OnAnnotationEdit,\n    onAnnotationStatusChange?: (id: string, status: FeedItemStatus, permissions: AnnotationPermission) => void,\n    onReplyCreate?: (text: string) => void,\n    onReplyDelete?: ({ id: string, permissions: BoxCommentPermission }) => void,\n    onReplyEdit?: (\n        id: string,\n        text: string,\n        status?: FeedItemStatus,\n        hasMention?: boolean,\n        permissions: BoxCommentPermission,\n        onSuccess: ?Function,\n        onError: ?Function,\n    ) => void,\n    replies?: Array<Comment>,\n};\n\nconst AnnotationThreadContent = ({\n    annotation,\n    currentUser,\n    error,\n    getAvatarUrl,\n    getMentionWithQuery,\n    getUserProfileUrl,\n    isLoading,\n    mentionSelectorContacts,\n    onAnnotationDelete,\n    onAnnotationEdit,\n    onAnnotationStatusChange,\n    onReplyCreate,\n    onReplyDelete,\n    onReplyEdit,\n    replies = [],\n}: Props) => {\n    return (\n        <>\n            {error && <ActivityError {...error} />}\n            {isLoading && (\n                <div className=\"AnnotationThreadContent-loading\" data-testid=\"annotation-loading\">\n                    <LoadingIndicator />\n                </div>\n            )}\n            {annotation && (\n                <ActivityThread\n                    getAvatarUrl={getAvatarUrl}\n                    getMentionWithQuery={getMentionWithQuery}\n                    getUserProfileUrl={getUserProfileUrl}\n                    hasReplies\n                    isAlwaysExpanded\n                    isRepliesLoading={isLoading}\n                    mentionSelectorContacts={mentionSelectorContacts}\n                    onReplyCreate={onReplyCreate}\n                    onReplyDelete={onReplyDelete}\n                    onReplyEdit={onReplyEdit}\n                    replies={replies}\n                    repliesTotalCount={replies.length}\n                >\n                    <AnnotationActivity\n                        currentUser={currentUser}\n                        getAvatarUrl={getAvatarUrl}\n                        getMentionWithQuery={getMentionWithQuery}\n                        getUserProfileUrl={getUserProfileUrl}\n                        isCurrentVersion\n                        item={annotation}\n                        mentionSelectorContacts={mentionSelectorContacts}\n                        onDelete={onAnnotationDelete}\n                        onEdit={onAnnotationEdit}\n                        onStatusChange={onAnnotationStatusChange}\n                    />\n                </ActivityThread>\n            )}\n        </>\n    );\n};\n\nexport default AnnotationThreadContent;\n"],"file":"AnnotationThreadContent.js"}