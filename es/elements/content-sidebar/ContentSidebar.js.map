{"version":3,"sources":["../../../src/elements/content-sidebar/ContentSidebar.js"],"names":["React","noop","flow","API","APIContext","Internationalize","Sidebar","NavRouter","SidebarUtils","DEFAULT_HOSTNAME_API","CLIENT_NAME_CONTENT_SIDEBAR","ORIGIN_CONTENT_SIDEBAR","EVENT_JS_READY","mark","SIDEBAR_FIELDS_TO_FETCH","withErrorBoundary","withFeatureProvider","withLogger","MARK_NAME_JS_READY","ContentSidebar","props","isLoading","error","code","console","onError","editors","setState","metadataEditors","file","onFetchFileSuccess","fetchMetadata","apiHost","cache","clientName","language","requestInterceptor","responseInterceptor","sharedLink","sharedLinkPassword","token","api","logger","onReadyMetric","endMarkName","destroy","fetchFile","prevProps","fileId","prevFileId","state","metadataSidebarProps","isFeatureEnabled","canHaveMetadataSidebar","getMetadataAPI","getMetadata","fetchMetadataSuccessCallback","fetchOptions","canHaveSidebar","getFileAPI","getFile","fetchFileSuccessCallback","errorCallback","fields","sidebarRef","refresh","activitySidebarProps","additionalTabs","className","currentUser","defaultView","detailsSidebarProps","getPreview","getViewer","hasAdditionalTabs","hasActivityFeed","hasMetadata","hasNav","hasSkills","hasVersions","history","isDefaultOpen","messages","onAnnotationSelect","onVersionChange","onVersionHistoryClick","versionsSidebarProps","initialPath","charAt","shouldRenderSidebar","ref","Component","ContentSidebarComponent"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Content Sidebar Container\n * @author Box\n */\n\nimport 'regenerator-runtime/runtime';\nimport * as React from 'react';\nimport noop from 'lodash/noop';\nimport flow from 'lodash/flow';\nimport type { RouterHistory } from 'react-router-dom';\nimport API from '../../api';\nimport APIContext from '../common/api-context';\nimport Internationalize from '../common/Internationalize';\nimport Sidebar from './Sidebar';\nimport NavRouter from '../common/nav-router';\nimport SidebarUtils from './SidebarUtils';\nimport { DEFAULT_HOSTNAME_API, CLIENT_NAME_CONTENT_SIDEBAR, ORIGIN_CONTENT_SIDEBAR } from '../../constants';\nimport { EVENT_JS_READY } from '../common/logger/constants';\nimport { mark } from '../../utils/performance';\nimport { SIDEBAR_FIELDS_TO_FETCH } from '../../utils/fields';\nimport { withErrorBoundary } from '../common/error-boundary';\nimport { withFeatureProvider } from '../common/feature-checking';\nimport { withLogger } from '../common/logger';\n\nimport type { DetailsSidebarProps } from './DetailsSidebar';\nimport type { ActivitySidebarProps } from './ActivitySidebar';\nimport type { MetadataSidebarProps } from './MetadataSidebar';\nimport type { VersionsSidebarProps } from './versions';\nimport type { WithLoggerProps } from '../../common/types/logging';\nimport type { ElementsXhrError, RequestOptions, ErrorContextProps } from '../../common/types/api';\nimport type { MetadataEditor } from '../../common/types/metadata';\nimport type { StringMap, Token, User, BoxItem } from '../../common/types/core';\nimport type { AdditionalSidebarTab } from './flowTypes';\nimport type { FeatureConfig } from '../common/feature-checking';\nimport type APICache from '../../utils/Cache';\n\nimport '../common/fonts.scss';\nimport '../common/base.scss';\nimport '../common/modal.scss';\nimport './ContentSidebar.scss';\n\ntype Props = {\n    activitySidebarProps: ActivitySidebarProps,\n    additionalTabs?: Array<AdditionalSidebarTab>,\n    apiHost: string,\n    cache?: APICache,\n    className: string,\n    clientName: string,\n    currentUser?: User,\n    defaultView: string,\n    detailsSidebarProps: DetailsSidebarProps,\n    features: FeatureConfig,\n    fileId?: string,\n    getPreview: Function,\n    getViewer: Function,\n    hasActivityFeed: boolean,\n    hasAdditionalTabs: boolean,\n    hasMetadata: boolean,\n    hasNav: boolean,\n    hasSkills: boolean,\n    hasVersions: boolean,\n    history?: RouterHistory,\n    isDefaultOpen?: boolean,\n    language?: string,\n    messages?: StringMap,\n    metadataSidebarProps: MetadataSidebarProps,\n    onAnnotationSelect?: Function,\n    onFetchFileSuccess?: () => void,\n    onVersionChange?: Function,\n    onVersionHistoryClick?: Function,\n    requestInterceptor?: Function,\n    responseInterceptor?: Function,\n    sharedLink?: string,\n    sharedLinkPassword?: string,\n    token: Token,\n    versionsSidebarProps: VersionsSidebarProps,\n} & ErrorContextProps &\n    WithLoggerProps;\n\ntype State = {\n    file?: BoxItem,\n    isLoading: boolean,\n    metadataEditors?: Array<MetadataEditor>,\n};\n\nconst MARK_NAME_JS_READY = `${ORIGIN_CONTENT_SIDEBAR}_${EVENT_JS_READY}`;\n\nmark(MARK_NAME_JS_READY);\n\nclass ContentSidebar extends React.Component<Props, State> {\n    props: Props;\n\n    state: State = { isLoading: true };\n\n    api: API;\n\n    sidebarRef: Sidebar;\n\n    static defaultProps = {\n        activitySidebarProps: {},\n        apiHost: DEFAULT_HOSTNAME_API,\n        className: '',\n        clientName: CLIENT_NAME_CONTENT_SIDEBAR,\n        defaultView: '',\n        detailsSidebarProps: {},\n        getPreview: noop,\n        getViewer: noop,\n        hasActivityFeed: false,\n        hasAdditionalTabs: false,\n        hasMetadata: false,\n        hasNav: true,\n        hasSkills: false,\n        isDefaultOpen: true,\n        metadataSidebarProps: {},\n    };\n\n    /**\n     * [constructor]\n     *\n     * @private\n     * @return {ContentSidebar}\n     */\n    constructor(props: Props) {\n        super(props);\n        const {\n            apiHost,\n            cache,\n            clientName,\n            language,\n            requestInterceptor,\n            responseInterceptor,\n            sharedLink,\n            sharedLinkPassword,\n            token,\n        } = props;\n\n        this.api = new API({\n            apiHost,\n            cache,\n            clientName,\n            language,\n            requestInterceptor,\n            responseInterceptor,\n            sharedLink,\n            sharedLinkPassword,\n            token,\n        });\n\n        /* eslint-disable react/prop-types */\n        const { logger } = props;\n        logger.onReadyMetric({\n            endMarkName: MARK_NAME_JS_READY,\n        });\n        /* eslint-enable react/prop-types */\n    }\n\n    /**\n     * Destroys api instances with caches\n     *\n     * @private\n     * @return {void}\n     */\n    clearCache(): void {\n        this.api.destroy(true);\n    }\n\n    /**\n     * Cleanup\n     *\n     * @private\n     * @inheritdoc\n     * @return {void}\n     */\n    componentWillUnmount() {\n        // Don't destroy the cache while unmounting\n        this.api.destroy(false);\n    }\n\n    /**\n     * Fetches the file data on load\n     *\n     * @private\n     * @inheritdoc\n     * @return {void}\n     */\n    componentDidMount() {\n        this.fetchFile();\n    }\n\n    /**\n     * Fetches new file data on update\n     *\n     * @private\n     * @inheritdoc\n     * @return {void}\n     */\n    componentDidUpdate(prevProps: Props): void {\n        const { fileId }: Props = this.props;\n        const { fileId: prevFileId }: Props = prevProps;\n\n        if (fileId !== prevFileId) {\n            this.fetchFile();\n        }\n    }\n\n    /**\n     * Network error callback\n     *\n     * @private\n     * @param {Error} error - Error object\n     * @param {string} code - error code\n     * @return {void}\n     */\n    errorCallback = (error: ElementsXhrError, code: string): void => {\n        /* eslint-disable no-console */\n        console.error(error);\n        /* eslint-enable no-console */\n\n        /* eslint-disable react/prop-types */\n        this.props.onError(error, code, {\n            error,\n        });\n        /* eslint-enable react/prop-types */\n    };\n\n    /**\n     * File fetch success callback that sets the file and view\n     * Only set file if there is data to show in the sidebar.\n     * Skills sidebar doesn't show when there is no data.\n     *\n     * @private\n     * @param {Object} file - Box file\n     * @return {void}\n     */\n    fetchMetadataSuccessCallback = ({ editors }: { editors: Array<MetadataEditor> }): void => {\n        this.setState({ metadataEditors: editors });\n    };\n\n    /**\n     * Fetches file metadata editors if required\n     *\n     * @private\n     * @return {void}\n     */\n    fetchMetadata(): void {\n        const { file }: State = this.state;\n        const { metadataSidebarProps }: Props = this.props;\n        const { isFeatureEnabled = true }: MetadataSidebarProps = metadataSidebarProps;\n\n        // Only fetch metadata if we think that the file may have metadata on it\n        // but currently the metadata feature is turned off. Use case of this would be a free\n        // user who doesn't have the metadata feature but is collabed on a file from a user\n        // who added metadata on the file. If the feature is enabled we always end up showing\n        // the metadata sidebar irrespective of there being any existing metadata or not.\n        const canHaveMetadataSidebar = !isFeatureEnabled && SidebarUtils.canHaveMetadataSidebar(this.props);\n\n        if (canHaveMetadataSidebar) {\n            this.api\n                .getMetadataAPI(false)\n                .getMetadata(((file: any): BoxItem), this.fetchMetadataSuccessCallback, noop, isFeatureEnabled);\n        }\n    }\n\n    /**\n     * File fetch success callback that sets the file and sidebar visibility.\n     * Also makes an optional request to fetch metadata editors\n     *\n     * @private\n     * @param {Object} file - Box file\n     * @return {void}\n     */\n    fetchFileSuccessCallback = (file: BoxItem): void => {\n        const { onFetchFileSuccess }: Props = this.props;\n        !!onFetchFileSuccess && onFetchFileSuccess();\n        this.setState(\n            {\n                file,\n                isLoading: false,\n            },\n            this.fetchMetadata,\n        );\n    };\n\n    /**\n     * Fetches a file\n     *\n     * @private\n     * @param {Object|void} [fetchOptions] - Fetch options\n     * @return {void}\n     */\n    fetchFile(fetchOptions: RequestOptions = {}): void {\n        const { fileId }: Props = this.props;\n        this.setState({ isLoading: true });\n        if (fileId && SidebarUtils.canHaveSidebar(this.props)) {\n            this.api.getFileAPI().getFile(fileId, this.fetchFileSuccessCallback, this.errorCallback, {\n                ...fetchOptions,\n                fields: SIDEBAR_FIELDS_TO_FETCH,\n            });\n        }\n    }\n\n    /**\n     * Refreshes the sidebar panel\n     * @returns {void}\n     */\n    refresh(): void {\n        if (this.sidebarRef) {\n            this.sidebarRef.refresh();\n        }\n    }\n\n    /**\n     * Renders the sidebar\n     *\n     * @private\n     * @inheritdoc\n     * @return {Element}\n     */\n    render() {\n        const {\n            activitySidebarProps,\n            additionalTabs,\n            className,\n            currentUser,\n            defaultView,\n            detailsSidebarProps,\n            fileId,\n            getPreview,\n            getViewer,\n            hasAdditionalTabs,\n            hasActivityFeed,\n            hasMetadata,\n            hasNav,\n            hasSkills,\n            hasVersions,\n            history,\n            isDefaultOpen,\n            language,\n            messages,\n            metadataSidebarProps,\n            onAnnotationSelect,\n            onVersionChange,\n            onVersionHistoryClick,\n            versionsSidebarProps,\n        }: Props = this.props;\n        const { file, isLoading, metadataEditors }: State = this.state;\n        const initialPath = defaultView.charAt(0) === '/' ? defaultView : `/${defaultView}`;\n\n        if (!file || !fileId || !SidebarUtils.shouldRenderSidebar(this.props, file, metadataEditors)) {\n            return null;\n        }\n\n        return (\n            <Internationalize language={language} messages={messages}>\n                <APIContext.Provider value={(this.api: any)}>\n                    <NavRouter history={history} initialEntries={[initialPath]}>\n                        <Sidebar\n                            activitySidebarProps={activitySidebarProps}\n                            additionalTabs={additionalTabs}\n                            className={className}\n                            currentUser={currentUser}\n                            detailsSidebarProps={detailsSidebarProps}\n                            file={file}\n                            fileId={fileId}\n                            getPreview={getPreview}\n                            getViewer={getViewer}\n                            hasActivityFeed={hasActivityFeed}\n                            hasAdditionalTabs={hasAdditionalTabs}\n                            hasNav={hasNav}\n                            hasMetadata={hasMetadata}\n                            hasSkills={hasSkills}\n                            hasVersions={hasVersions}\n                            isDefaultOpen={isDefaultOpen}\n                            isLoading={isLoading}\n                            metadataEditors={metadataEditors}\n                            metadataSidebarProps={metadataSidebarProps}\n                            onAnnotationSelect={onAnnotationSelect}\n                            onVersionChange={onVersionChange}\n                            onVersionHistoryClick={onVersionHistoryClick}\n                            versionsSidebarProps={versionsSidebarProps}\n                            wrappedComponentRef={ref => {\n                                this.sidebarRef = ref;\n                            }}\n                        />\n                    </NavRouter>\n                </APIContext.Provider>\n            </Internationalize>\n        );\n    }\n}\n\nexport type ContentSidebarProps = Props;\nexport { ContentSidebar as ContentSidebarComponent };\nexport default flow([\n    withFeatureProvider,\n    withLogger(ORIGIN_CONTENT_SIDEBAR),\n    withErrorBoundary(ORIGIN_CONTENT_SIDEBAR),\n])(ContentSidebar);\n"],"file":"ContentSidebar.js"}