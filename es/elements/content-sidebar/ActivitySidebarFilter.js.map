{"version":3,"sources":["../../../src/elements/content-sidebar/ActivitySidebarFilter.js"],"names":["React","FormattedMessage","DropdownMenu","MenuToggle","PlainButton","messages","ACTIVITY_FILTER_OPTION_ALL","ACTIVITY_FILTER_OPTION_RESOLVED","ACTIVITY_FILTER_OPTION_TASKS","ACTIVITY_FILTER_OPTION_UNRESOLVED","COMMENT_STATUS_OPEN","COMMENT_STATUS_RESOLVED","FEED_ITEM_TYPE_TASK","Menu","SelectMenuItem","filterOptionToStatus","ActivitySidebarFilter","activityFilterOptions","feedItemType","onFeedItemTypeClick","hasOnlyCommentActivity","options","commentActivityFilterOptions","every","option","includes","allFilterMessage","activitySidebarFilterOptionAllComments","activitySidebarFilterOptionAllActivity","statusMap","msg","val","activitySidebarFilterOptionOpen","activitySidebarFilterOptionResolved","activitySidebarFilterOptionTasks","map","filterOption","status"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Activity feed sidebar filter component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport DropdownMenu, { MenuToggle } from '../../components/dropdown-menu';\nimport PlainButton from '../../components/plain-button';\nimport messages from './messages';\nimport {\n    ACTIVITY_FILTER_OPTION_ALL,\n    ACTIVITY_FILTER_OPTION_RESOLVED,\n    ACTIVITY_FILTER_OPTION_TASKS,\n    ACTIVITY_FILTER_OPTION_UNRESOLVED,\n    COMMENT_STATUS_OPEN,\n    COMMENT_STATUS_RESOLVED,\n    FEED_ITEM_TYPE_TASK,\n} from '../../constants';\nimport { Menu, SelectMenuItem } from '../../components/menu';\nimport type { ActivityFilterItemType, ActivityFilterOption } from '../../common/types/feed';\nimport './ActivitySidebarFilter.scss';\n\ntype ActivitySidebarFilterProps = {\n    activityFilterOptions: ActivityFilterOption[],\n    feedItemType?: ActivityFilterItemType,\n    onFeedItemTypeClick: (status?: ActivityFilterItemType) => void,\n};\n\nconst filterOptionToStatus = {\n    [ACTIVITY_FILTER_OPTION_ALL]: ACTIVITY_FILTER_OPTION_ALL,\n    [ACTIVITY_FILTER_OPTION_UNRESOLVED]: COMMENT_STATUS_OPEN,\n    [ACTIVITY_FILTER_OPTION_RESOLVED]: COMMENT_STATUS_RESOLVED,\n    [ACTIVITY_FILTER_OPTION_TASKS]: FEED_ITEM_TYPE_TASK,\n};\n\nfunction ActivitySidebarFilter({\n    activityFilterOptions,\n    feedItemType = ACTIVITY_FILTER_OPTION_ALL,\n    onFeedItemTypeClick,\n}: ActivitySidebarFilterProps) {\n    const hasOnlyCommentActivity = (options: ActivityFilterOption[]): boolean => {\n        const commentActivityFilterOptions = [\n            ACTIVITY_FILTER_OPTION_ALL,\n            ACTIVITY_FILTER_OPTION_RESOLVED,\n            ACTIVITY_FILTER_OPTION_UNRESOLVED,\n        ];\n        return options.every(option => commentActivityFilterOptions.includes(option));\n    };\n\n    // The message for all activty is based on whether only comments are in the activityFilterOptions prop\n    const allFilterMessage = hasOnlyCommentActivity(activityFilterOptions)\n        ? messages.activitySidebarFilterOptionAllComments\n        : messages.activitySidebarFilterOptionAllActivity;\n\n    const statusMap = {\n        [ACTIVITY_FILTER_OPTION_ALL]: {\n            msg: allFilterMessage,\n            val: ACTIVITY_FILTER_OPTION_ALL,\n        },\n        [COMMENT_STATUS_OPEN]: { msg: messages.activitySidebarFilterOptionOpen, val: COMMENT_STATUS_OPEN },\n        [COMMENT_STATUS_RESOLVED]: {\n            msg: messages.activitySidebarFilterOptionResolved,\n            val: COMMENT_STATUS_RESOLVED,\n        },\n        [FEED_ITEM_TYPE_TASK]: {\n            msg: messages.activitySidebarFilterOptionTasks,\n            val: FEED_ITEM_TYPE_TASK,\n        },\n    };\n\n    return (\n        <div className=\"bcs-ActivitySidebarFilter\">\n            <DropdownMenu className=\"bcs-ActivitySidebarFilter-dropdownMenu\" constrainToWindow>\n                <PlainButton type=\"button\">\n                    <MenuToggle>\n                        <FormattedMessage {...statusMap[feedItemType].msg} />\n                    </MenuToggle>\n                </PlainButton>\n                <Menu>\n                    {activityFilterOptions.map(filterOption => {\n                        const status = filterOptionToStatus[filterOption];\n                        return (\n                            <SelectMenuItem\n                                key={status}\n                                isSelected={status === feedItemType}\n                                onClick={() => onFeedItemTypeClick(statusMap[status].val)}\n                            >\n                                <FormattedMessage {...statusMap[status].msg} />\n                            </SelectMenuItem>\n                        );\n                    })}\n                </Menu>\n            </DropdownMenu>\n        </div>\n    );\n}\n\nexport default ActivitySidebarFilter;\n"],"file":"ActivitySidebarFilter.js"}