{"version":3,"sources":["../../../src/elements/content-sidebar/SidebarNavSign.tsx"],"names":["React","FormattedMessage","useFeatureConfig","SIDEBAR_NAV_TARGETS","DropdownMenu","SidebarNavSignButton","SignMe32","SignMeOthers32","Menu","MenuItem","messages","SidebarNavSign","boxSignBlockedReason","blockedReason","onBoxClickRequestSignature","onClick","onBoxClickSignMyself","onClickSignMyself","boxSignStatus","status","boxSignTargetingApi","targetingApi","isSignRemoveInterstitialEnabled","SIGN","boxSignRequestSignature","boxSignSignMyself"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,YAAjC,C,CAEA;;AACA,SAASC,gBAAT,QAAiC,4BAAjC,C,CACA;;AACA,SAASC,mBAAT,QAAoC,8BAApC,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,uBAA/B,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAO,uBAAP;AAEA,OAAO,SAASC,cAAT,GAA0B;AAAA,0BAQzBT,gBAAgB,CAAC,SAAD,CARS;AAAA,MAEVU,oBAFU,qBAEzBC,aAFyB;AAAA,MAGhBC,0BAHgB,qBAGzBC,OAHyB;AAAA,MAINC,oBAJM,qBAIzBC,iBAJyB;AAAA,MAKjBC,aALiB,qBAKzBC,MALyB;AAAA,MAMXC,mBANW,qBAMzBC,YANyB;AAAA,MAOzBC,+BAPyB,qBAOzBA,+BAPyB;;AAU7B,SACI,0CACKA,+BAA+B,GAC5B,oBAAC,YAAD;AAAc,IAAA,YAAY,MAA1B;AAA2B,IAAA,iBAAiB,MAA5C;AAA6C,IAAA,cAAc;AAA3D,KACI,oBAAC,oBAAD;AACI,IAAA,aAAa,EAAEV,oBADnB;AAEI,IAAA,MAAM,EAAEM,aAFZ;AAGI,IAAA,YAAY,EAAEE,mBAHlB;AAII,yBAAmBjB,mBAAmB,CAACoB;AAJ3C,IADJ,EAOI,oBAAC,IAAD,QACI,oBAAC,QAAD;AAAU,mBAAY,+BAAtB;AAAsD,IAAA,OAAO,EAAET;AAA/D,KACI,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAE,EAAvB;AAA2B,IAAA,MAAM,EAAE,EAAnC;AAAuC,IAAA,SAAS,EAAC;AAAjD,IADJ,EAEI,oBAAC,gBAAD,EAAsBJ,QAAQ,CAACc,uBAA/B,CAFJ,CADJ,EAKI,oBAAC,QAAD;AAAU,mBAAY,yBAAtB;AAAgD,IAAA,OAAO,EAAER;AAAzD,KACI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,EAAjB;AAAqB,IAAA,MAAM,EAAE,EAA7B;AAAiC,IAAA,SAAS,EAAC;AAA3C,IADJ,EAEI,oBAAC,gBAAD,EAAsBN,QAAQ,CAACe,iBAA/B,CAFJ,CALJ,CAPJ,CAD4B,GAoB5B,oBAAC,oBAAD;AACI,IAAA,aAAa,EAAEb,oBADnB;AAEI,yBAAmBT,mBAAmB,CAACoB,IAF3C;AAGI,IAAA,OAAO,EAAET,0BAHb;AAII,IAAA,MAAM,EAAEI,aAJZ;AAKI,IAAA,YAAY,EAAEE;AALlB,IArBR,CADJ;AAgCH;AAED,eAAeT,cAAf","sourcesContent":["import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\n// @ts-ignore Module is written in Flow\nimport { useFeatureConfig } from '../common/feature-checking';\n// @ts-ignore Module is written in Flow\nimport { SIDEBAR_NAV_TARGETS } from '../common/interactionTargets';\n\n// @ts-ignore Module is written in Flow\nimport DropdownMenu from '../../components/dropdown-menu';\nimport SidebarNavSignButton from './SidebarNavSignButton';\nimport SignMe32 from '../../icon/fill/SignMe32';\nimport SignMeOthers32 from '../../icon/fill/SignMeOthers32';\nimport { Menu, MenuItem } from '../../components/menu';\n\n// @ts-ignore Module is written in Flow\nimport messages from './messages';\n\nimport './SidebarNavSign.scss';\n\nexport function SidebarNavSign() {\n    const {\n        blockedReason: boxSignBlockedReason,\n        onClick: onBoxClickRequestSignature,\n        onClickSignMyself: onBoxClickSignMyself,\n        status: boxSignStatus,\n        targetingApi: boxSignTargetingApi,\n        isSignRemoveInterstitialEnabled,\n    } = useFeatureConfig('boxSign');\n\n    return (\n        <>\n            {isSignRemoveInterstitialEnabled ? (\n                <DropdownMenu isResponsive constrainToWindow isRightAligned>\n                    <SidebarNavSignButton\n                        blockedReason={boxSignBlockedReason}\n                        status={boxSignStatus}\n                        targetingApi={boxSignTargetingApi}\n                        data-resin-target={SIDEBAR_NAV_TARGETS.SIGN}\n                    />\n                    <Menu>\n                        <MenuItem data-testid=\"sign-request-signature-button\" onClick={onBoxClickRequestSignature}>\n                            <SignMeOthers32 width={16} height={16} className=\"bcs-SidebarNavSign-icon\" />\n                            <FormattedMessage {...messages.boxSignRequestSignature} />\n                        </MenuItem>\n                        <MenuItem data-testid=\"sign-sign-myself-button\" onClick={onBoxClickSignMyself}>\n                            <SignMe32 width={16} height={16} className=\"bcs-SidebarNavSign-icon\" />\n                            <FormattedMessage {...messages.boxSignSignMyself} />\n                        </MenuItem>\n                    </Menu>\n                </DropdownMenu>\n            ) : (\n                <SidebarNavSignButton\n                    blockedReason={boxSignBlockedReason}\n                    data-resin-target={SIDEBAR_NAV_TARGETS.SIGN}\n                    onClick={onBoxClickRequestSignature}\n                    status={boxSignStatus}\n                    targetingApi={boxSignTargetingApi}\n                />\n            )}\n        </>\n    );\n}\n\nexport default SidebarNavSign;\n"],"file":"SidebarNavSign.js"}