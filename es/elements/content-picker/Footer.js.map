{"version":3,"sources":["../../../src/elements/content-picker/Footer.js"],"names":["React","injectIntl","FormattedMessage","Button","ButtonGroup","IconCheck","IconClose","messages","PrimaryButton","Tooltip","Footer","currentCollection","selectedCount","selectedItems","onSelectedClick","hasHitSelectionLimit","intl","isSingleSelect","onCancel","onChoose","chooseButtonLabel","cancelButtonLabel","children","renderCustomActionButtons","showSelectedButton","cancelMessage","formatMessage","cancel","chooseMessage","choose","isChooseButtonDisabled","selected","count","max","currentFolderId","id","currentFolderName","name"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Footer list component\n * @author Box\n */\n\nimport React from 'react';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport type { Node } from 'react';\n\nimport type { Collection, BoxItem } from '../../common/types/core';\nimport Button from '../../components/button';\nimport ButtonGroup from '../../components/button-group';\nimport IconCheck from '../../icons/general/IconCheck';\nimport IconClose from '../../icons/general/IconClose';\nimport messages from '../common/messages';\n\nimport PrimaryButton from '../../components/primary-button';\nimport Tooltip from '../common/Tooltip';\nimport './Footer.scss';\n\ntype Props = {\n    cancelButtonLabel?: string,\n    children?: any,\n    chooseButtonLabel?: string,\n    currentCollection: Collection,\n    hasHitSelectionLimit: boolean,\n    intl: any,\n    isSingleSelect: boolean,\n    onCancel: Function,\n    onChoose: Function,\n    onSelectedClick: Function,\n    renderCustomActionButtons?: ({\n        onCancel: Function,\n        onChoose: Function,\n        selectedCount: number,\n        selectedItems: BoxItem[],\n    }) => Node,\n    selectedCount: number,\n    selectedItems: BoxItem[],\n    showSelectedButton: boolean,\n};\n\nconst Footer = ({\n    currentCollection,\n    selectedCount,\n    selectedItems,\n    onSelectedClick,\n    hasHitSelectionLimit,\n    intl,\n    isSingleSelect,\n    onCancel,\n    onChoose,\n    chooseButtonLabel,\n    cancelButtonLabel,\n    children,\n    renderCustomActionButtons,\n    showSelectedButton,\n}: Props) => {\n    const cancelMessage = intl.formatMessage(messages.cancel);\n    const chooseMessage = intl.formatMessage(messages.choose);\n    const isChooseButtonDisabled = !selectedCount;\n    return (\n        <footer className=\"bcp-footer\">\n            <div className=\"bcp-footer-left\">\n                {showSelectedButton && !isSingleSelect && (\n                    <Button className=\"bcp-selected\" onClick={onSelectedClick} type=\"button\">\n                        <FormattedMessage\n                            className=\"bcp-selected-count\"\n                            {...messages.selected}\n                            values={{ count: selectedCount }}\n                        />\n                        {hasHitSelectionLimit && (\n                            <span className=\"bcp-selected-max\">\n                                (<FormattedMessage {...messages.max} />)\n                            </span>\n                        )}\n                    </Button>\n                )}\n            </div>\n            <div className=\"bcp-footer-right\">\n                {children}\n\n                {renderCustomActionButtons ? (\n                    renderCustomActionButtons({\n                        currentFolderId: currentCollection.id,\n                        currentFolderName: currentCollection.name,\n                        onCancel,\n                        onChoose,\n                        selectedCount,\n                        selectedItems,\n                    })\n                ) : (\n                    <ButtonGroup className=\"bcp-footer-actions\">\n                        <Tooltip text={cancelButtonLabel || cancelMessage}>\n                            <Button aria-label={cancelMessage} onClick={onCancel} type=\"button\">\n                                <IconClose height={16} width={16} />\n                            </Button>\n                        </Tooltip>\n                        <Tooltip isDisabled={isChooseButtonDisabled} text={chooseButtonLabel || chooseMessage}>\n                            <PrimaryButton\n                                aria-label={chooseMessage}\n                                disabled={isChooseButtonDisabled} // sets disabled attribute\n                                isDisabled={isChooseButtonDisabled} // used in Button component\n                                onClick={onChoose}\n                                type=\"button\"\n                            >\n                                <IconCheck color=\"#fff\" height={16} width={16} />\n                            </PrimaryButton>\n                        </Tooltip>\n                    </ButtonGroup>\n                )}\n            </div>\n        </footer>\n    );\n};\n\nexport default injectIntl(Footer);\n"],"file":"Footer.js"}