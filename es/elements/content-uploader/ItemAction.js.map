{"version":3,"sources":["../../../src/elements/content-uploader/ItemAction.js"],"names":["React","FormattedMessage","injectIntl","IconCheck","IconClose","IconInProgress","IconRetry","LoadingIndicator","PlainButton","PrimaryButton","Tooltip","messages","ERROR_CODE_UPLOAD_FILE_SIZE_LIMIT_EXCEEDED","STATUS_PENDING","STATUS_IN_PROGRESS","STATUS_STAGED","STATUS_COMPLETE","STATUS_ERROR","ICON_CHECK_COLOR","ItemAction","error","intl","isFolder","isResumableUploadsEnabled","onClick","onUpgradeCTAClick","status","icon","tooltip","code","formatMessage","remove","resume","retry","uploadsCancelButtonTooltip","uploadsFileSizeLimitExceededUpgradeMessageForUpgradeCta","isDisabled","tooltipText","ItemActionForTesting"],"mappings":"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","sourcesContent":["/**\n * @flow\n * @file Item action component displayed on the upload toast, e.g. cancel/resume\n */\n\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport type { InjectIntlProvidedProps } from 'react-intl';\nimport IconCheck from '../../icons/general/IconCheck';\nimport IconClose from '../../icons/general/IconClose';\nimport IconInProgress from './IconInProgress';\nimport IconRetry from '../../icons/general/IconRetry';\nimport LoadingIndicator from '../../components/loading-indicator';\nimport PlainButton from '../../components/plain-button/PlainButton';\nimport PrimaryButton from '../../components/primary-button/PrimaryButton';\nimport Tooltip from '../../components/tooltip';\nimport messages from '../common/messages';\nimport {\n    ERROR_CODE_UPLOAD_FILE_SIZE_LIMIT_EXCEEDED,\n    STATUS_PENDING,\n    STATUS_IN_PROGRESS,\n    STATUS_STAGED,\n    STATUS_COMPLETE,\n    STATUS_ERROR,\n} from '../../constants';\nimport type { UploadStatus } from '../../common/types/upload';\n\nimport './ItemAction.scss';\n\nconst ICON_CHECK_COLOR = '#26C281';\n\ntype Props = {\n    error?: Object,\n    isFolder?: boolean,\n    isResumableUploadsEnabled: boolean,\n    onClick: Function,\n    onUpgradeCTAClick?: Function,\n    status: UploadStatus,\n} & InjectIntlProvidedProps;\n\nconst ItemAction = ({\n    error = {},\n    intl,\n    isFolder = false,\n    isResumableUploadsEnabled,\n    onClick,\n    onUpgradeCTAClick,\n    status,\n}: Props) => {\n    let icon = <IconClose />;\n    let tooltip;\n    const { code } = error;\n    const { formatMessage } = intl;\n\n    if (isFolder && status !== STATUS_PENDING) {\n        return null;\n    }\n\n    switch (status) {\n        case STATUS_COMPLETE:\n            icon = <IconCheck color={ICON_CHECK_COLOR} />;\n            if (!isResumableUploadsEnabled) {\n                tooltip = messages.remove;\n            }\n            break;\n        case STATUS_ERROR:\n            icon = <IconRetry height={24} width={24} />;\n            tooltip = isResumableUploadsEnabled ? messages.resume : messages.retry;\n            break;\n        case STATUS_IN_PROGRESS:\n        case STATUS_STAGED:\n            if (isResumableUploadsEnabled) {\n                icon = <LoadingIndicator />;\n            } else {\n                icon = <IconInProgress />;\n                tooltip = messages.uploadsCancelButtonTooltip;\n            }\n            break;\n        case STATUS_PENDING:\n        default:\n            if (isResumableUploadsEnabled) {\n                icon = <LoadingIndicator />;\n            } else {\n                tooltip = messages.uploadsCancelButtonTooltip;\n            }\n            break;\n    }\n\n    if (status === STATUS_ERROR && code === ERROR_CODE_UPLOAD_FILE_SIZE_LIMIT_EXCEEDED && !!onUpgradeCTAClick) {\n        return (\n            <PrimaryButton\n                onClick={onUpgradeCTAClick}\n                data-resin-target=\"large_version_error_inline_upgrade_cta\"\n                type=\"button\"\n            >\n                <FormattedMessage {...messages.uploadsFileSizeLimitExceededUpgradeMessageForUpgradeCta} />\n            </PrimaryButton>\n        );\n    }\n    const isDisabled = status === STATUS_STAGED;\n    const tooltipText = tooltip && formatMessage(tooltip);\n\n    return (\n        <div className=\"bcu-item-action\">\n            {tooltip ? (\n                <Tooltip position=\"top-left\" text={tooltipText}>\n                    <PlainButton aria-label={tooltipText} isDisabled={isDisabled} onClick={onClick} type=\"button\">\n                        {icon}\n                    </PlainButton>\n                </Tooltip>\n            ) : (\n                icon\n            )}\n        </div>\n    );\n};\n\nexport { ItemAction as ItemActionForTesting };\nexport default injectIntl(ItemAction);\n"],"file":"ItemAction.js"}