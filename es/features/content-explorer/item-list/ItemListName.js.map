{"version":3,"sources":["../../../../src/features/content-explorer/item-list/ItemListName.js"],"names":["PropTypes","React","PlainButton","IconChevron","ItemTypePropType","TYPE_FOLDER","ITEM_LIST_NAME_CLASS","ItemListName","itemId","type","name","label","isSelected","onClick","linkRenderer","isFolder","linkProps","className","children","renderLink","propTypes","string","isRequired","bool","func"],"mappings":";;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AAEA,SAASC,gBAAT,QAAiC,eAAjC;AAEA,SAASC,WAAT,QAA4B,oBAA5B;AAEA,IAAMC,oBAAoB,GAAG,gBAA7B;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAwF;AAAA,yBAArFC,MAAqF;AAAA,MAArFA,MAAqF,4BAA5E,EAA4E;AAAA,MAAxEC,IAAwE,QAAxEA,IAAwE;AAAA,MAAlEC,IAAkE,QAAlEA,IAAkE;AAAA,wBAA5DC,KAA4D;AAAA,MAA5DA,KAA4D,2BAApD,EAAoD;AAAA,6BAAhDC,UAAgD;AAAA,MAAhDA,UAAgD,gCAAnC,KAAmC;AAAA,MAA5BC,OAA4B,QAA5BA,OAA4B;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;AACzG,MAAMC,QAAQ,GAAGN,IAAI,KAAKJ,WAA1B;AAEA,MAAMW,SAAS,GAAG;AACdC,IAAAA,SAAS,gBAASX,oBAAT,CADK;AAEdO,IAAAA,OAAO,EAAPA,OAFc;AAGdK,IAAAA,QAAQ,EAAE,CACN;AAAM,MAAA,GAAG,EAAC;AAAV,OAAkBR,IAAlB,CADM,EAEN,oBAAC,WAAD;AACI,MAAA,GAAG,EAAC,MADR;AAEI,MAAA,KAAK,EAAEE,UAAU,GAAG,SAAH,GAAe,MAFpC;AAGI,MAAA,SAAS,EAAC,OAHd;AAII,MAAA,IAAI,EAAC,KAJT;AAKI,MAAA,SAAS,EAAC;AALd,MAFM;AAHI,GAAlB;;AAcA,MAAMO,UAAU,GAAG,SAAbA,UAAa;AAAA,WAAOL,YAAY,GAAGA,YAAY,mBAAME,SAAN;AAAiBR,MAAAA,MAAM,EAANA;AAAjB,OAAf,GAA4C,oBAAC,WAAD,EAAiBQ,SAAjB,CAA/D;AAAA,GAAnB;;AAEA,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACKD,QAAQ,GAAGI,UAAU,EAAb,GAAkB;AAAM,IAAA,SAAS,EAAEb;AAAjB,KAAwCI,IAAxC,CAD/B,EAEK,CAAC,CAACC,KAAF,IAAW;AAAM,IAAA,SAAS,EAAC;AAAhB,KAAwCA,KAAxC,CAFhB,CADJ;AAMH,CAzBD;;AA2BAJ,YAAY,CAACa,SAAb,GAAyB;AACrBZ,EAAAA,MAAM,EAAER,SAAS,CAACqB,MADG;AAErBZ,EAAAA,IAAI,EAAEL,gBAFe;AAGrBM,EAAAA,IAAI,EAAEV,SAAS,CAACqB,MAAV,CAAiBC,UAHF;AAIrBX,EAAAA,KAAK,EAAEX,SAAS,CAACqB,MAJI;AAKrBT,EAAAA,UAAU,EAAEZ,SAAS,CAACuB,IALD;AAMrBV,EAAAA,OAAO,EAAEb,SAAS,CAACwB,IANE;AAOrBV,EAAAA,YAAY,EAAEd,SAAS,CAACwB;AAPH,CAAzB;AAUA,eAAejB,YAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport PlainButton from '../../../components/plain-button';\nimport IconChevron from '../../../icons/general/IconChevron';\n\nimport { ItemTypePropType } from '../prop-types';\n\nimport { TYPE_FOLDER } from '../../../constants';\n\nconst ITEM_LIST_NAME_CLASS = 'item-list-name';\n\nconst ItemListName = ({ itemId = '', type, name, label = '', isSelected = false, onClick, linkRenderer }) => {\n    const isFolder = type === TYPE_FOLDER;\n\n    const linkProps = {\n        className: `lnk ${ITEM_LIST_NAME_CLASS}`,\n        onClick,\n        children: [\n            <span key=\"name\">{name}</span>,\n            <IconChevron\n                key=\"icon\"\n                color={isSelected ? '#447991' : '#333'}\n                direction=\"right\"\n                size=\"4px\"\n                thickness=\"1px\"\n            />,\n        ],\n    };\n    const renderLink = () => (linkRenderer ? linkRenderer({ ...linkProps, itemId }) : <PlainButton {...linkProps} />);\n\n    return (\n        <div className=\"item-list-name-container\">\n            {isFolder ? renderLink() : <span className={ITEM_LIST_NAME_CLASS}>{name}</span>}\n            {!!label && <span className=\"item-list-name-label\">{label}</span>}\n        </div>\n    );\n};\n\nItemListName.propTypes = {\n    itemId: PropTypes.string,\n    type: ItemTypePropType,\n    name: PropTypes.string.isRequired,\n    label: PropTypes.string,\n    isSelected: PropTypes.bool,\n    onClick: PropTypes.func,\n    linkRenderer: PropTypes.func,\n};\n\nexport default ItemListName;\n"],"file":"ItemListName.js"}