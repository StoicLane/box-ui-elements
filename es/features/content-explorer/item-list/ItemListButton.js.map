{"version":3,"sources":["../../../../src/features/content-explorer/item-list/ItemListButton.js"],"names":["PropTypes","React","FormattedMessage","Checkbox","RadioButton","ContentExplorerModePropType","ContentExplorerModes","messages","ItemListButton","contentExplorerMode","id","isChecked","isDisabled","isSelected","name","MULTI_SELECT","selectItem","propTypes","isRequired","string","bool"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,OAAOC,QAAP,MAAqB,uCAArB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,2BAAT,QAA4C,eAA5C;AACA,OAAOC,oBAAP,MAAiC,UAAjC;AAEA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAOjB;AAAA,MANFC,mBAME,QANFA,mBAME;AAAA,qBALFC,EAKE;AAAA,MALFA,EAKE,wBALG,EAKH;AAAA,4BAJFC,SAIE;AAAA,MAJFA,SAIE,+BAJU,KAIV;AAAA,6BAHFC,UAGE;AAAA,MAHFA,UAGE,gCAHW,KAGX;AAAA,6BAFFC,UAEE;AAAA,MAFFA,UAEE,gCAFW,KAEX;AAAA,MADFC,IACE,QADFA,IACE;;AACF,MAAIL,mBAAmB,KAAKH,oBAAoB,CAACS,YAAjD,EAA+D;AAC3D,WACI,oBAAC,QAAD;AACI,MAAA,SAAS,MADb;AAEI,MAAA,SAAS,EAAEJ,SAAS,IAAK,CAACC,UAAD,IAAeC,UAF5C;AAGI,MAAA,UAAU,EAAED,UAHhB;AAII,MAAA,KAAK,EAAE,oBAAC,gBAAD,eAAsBL,QAAQ,CAACS,UAA/B;AAA2C,QAAA,MAAM,EAAE;AAAEF,UAAAA,IAAI,EAAJA;AAAF;AAAnD,SAJX;AAKI,MAAA,IAAI,EAAC,MALT;AAMI,MAAA,QAAQ,MANZ;AAOI,MAAA,KAAK,EAAEJ;AAPX,MADJ;AAWH;;AACD,SACI,oBAAC,WAAD;AACI,IAAA,SAAS,MADb;AAEI,IAAA,UAAU,EAAEE,UAFhB;AAGI,IAAA,UAAU,EAAE,CAACA,UAAD,IAAeC,UAH/B;AAII,IAAA,KAAK,EAAE,oBAAC,gBAAD,eAAsBN,QAAQ,CAACS,UAA/B;AAA2C,MAAA,MAAM,EAAE;AAAEF,QAAAA,IAAI,EAAJA;AAAF;AAAnD,OAJX;AAKI,IAAA,IAAI,EAAC,MALT;AAMI,IAAA,KAAK,EAAEJ;AANX,IADJ;AAUH,CA/BD;;AAiCAF,cAAc,CAACS,SAAf,GAA2B;AACvBR,EAAAA,mBAAmB,EAAEJ,2BAA2B,CAACa,UAD1B;AAEvBR,EAAAA,EAAE,EAAEV,SAAS,CAACmB,MAFS;AAGvBR,EAAAA,SAAS,EAAEX,SAAS,CAACoB,IAHE;AAIvBR,EAAAA,UAAU,EAAEZ,SAAS,CAACoB,IAJC;AAKvBP,EAAAA,UAAU,EAAEb,SAAS,CAACoB,IALC;AAMvBN,EAAAA,IAAI,EAAEd,SAAS,CAACmB,MAAV,CAAiBD;AANA,CAA3B;AASA,eAAeV,cAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Checkbox from '../../../components/checkbox/Checkbox';\nimport { RadioButton } from '../../../components/radio';\nimport { ContentExplorerModePropType } from '../prop-types';\nimport ContentExplorerModes from '../modes';\n\nimport messages from '../messages';\n\nconst ItemListButton = ({\n    contentExplorerMode,\n    id = '',\n    isChecked = false,\n    isDisabled = false,\n    isSelected = false,\n    name,\n}) => {\n    if (contentExplorerMode === ContentExplorerModes.MULTI_SELECT) {\n        return (\n            <Checkbox\n                hideLabel\n                isChecked={isChecked || (!isDisabled && isSelected)}\n                isDisabled={isDisabled}\n                label={<FormattedMessage {...messages.selectItem} values={{ name }} />}\n                name=\"item\"\n                readOnly\n                value={id}\n            />\n        );\n    }\n    return (\n        <RadioButton\n            hideLabel\n            isDisabled={isDisabled}\n            isSelected={!isDisabled && isSelected}\n            label={<FormattedMessage {...messages.selectItem} values={{ name }} />}\n            name=\"item\"\n            value={id}\n        />\n    );\n};\n\nItemListButton.propTypes = {\n    contentExplorerMode: ContentExplorerModePropType.isRequired,\n    id: PropTypes.string,\n    isChecked: PropTypes.bool,\n    isDisabled: PropTypes.bool,\n    isSelected: PropTypes.bool,\n    name: PropTypes.string.isRequired,\n};\n\nexport default ItemListButton;\n"],"file":"ItemListButton.js"}