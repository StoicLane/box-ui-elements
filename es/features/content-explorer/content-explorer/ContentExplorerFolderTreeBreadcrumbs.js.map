{"version":3,"sources":["../../../../src/features/content-explorer/content-explorer/ContentExplorerFolderTreeBreadcrumbs.js"],"names":["React","PropTypes","injectIntl","FormattedMessage","Arrow16","Button","DropdownMenu","IconFolderTree","Menu","MenuItem","FoldersPathPropType","messages","FOLDER_TREE_ICON_HEIGHT","FOLDER_TREE_ICON_WIDTH","BREADCRUMB_ARROW_ICON_HEIGHT","BREADCRUMB_ARROW_ICON_WIDTH","BREADCRUMB_ARROW_ICON_VIEWBOX","ContentExplorerFolderTreeBreadcrumbs","foldersPath","intl","formatMessage","formatNumber","isFolderTreeButtonHidden","numTotalItems","onBreadcrumbClick","currentFolderName","length","name","foldersPathWithoutLast","slice","clickToViewPath","filePath","map","folder","i","id","event","folderTreeBreadcrumbsText","folderName","totalItems","propTypes","isRequired","any","bool","number","func","ContentExplorerFolderTreeBreadcrumbsBase"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, FormattedMessage } from 'react-intl';\n\nimport Arrow16 from '../../../icon/fill/Arrow16';\nimport Button from '../../../components/button';\nimport DropdownMenu from '../../../components/dropdown-menu/DropdownMenu';\nimport IconFolderTree from '../../../icons/general/IconFolderTree';\nimport { Menu, MenuItem } from '../../../components/menu';\n\nimport { FoldersPathPropType } from '../prop-types';\nimport messages from '../messages';\nimport {\n    FOLDER_TREE_ICON_HEIGHT,\n    FOLDER_TREE_ICON_WIDTH,\n    BREADCRUMB_ARROW_ICON_HEIGHT,\n    BREADCRUMB_ARROW_ICON_WIDTH,\n    BREADCRUMB_ARROW_ICON_VIEWBOX,\n} from './constants';\n\nconst ContentExplorerFolderTreeBreadcrumbs = ({\n    foldersPath,\n    intl: { formatMessage, formatNumber },\n    isFolderTreeButtonHidden,\n    numTotalItems,\n    onBreadcrumbClick,\n}) => {\n    const currentFolderName = foldersPath[foldersPath.length - 1].name;\n    const foldersPathWithoutLast = foldersPath.slice(0, -1);\n    return (\n        <div className=\"bdl-ContentExplorerFolderTreeBreadcrumbs\">\n            {!isFolderTreeButtonHidden && (\n                <DropdownMenu>\n                    <Button\n                        aria-label={formatMessage(messages.clickToViewPath)}\n                        className=\"bdl-ContentExplorerFolderTreeBreadcrumbs-button\"\n                        title={formatMessage(messages.filePath)}\n                        type=\"button\"\n                    >\n                        <IconFolderTree height={FOLDER_TREE_ICON_HEIGHT} width={FOLDER_TREE_ICON_WIDTH} />\n                    </Button>\n                    <Menu>\n                        {foldersPathWithoutLast.map((folder, i) => (\n                            <MenuItem\n                                data-testid=\"folder-tree-item\"\n                                key={folder.id}\n                                onClick={event => onBreadcrumbClick(i, event)}\n                            >\n                                {folder.name}\n                            </MenuItem>\n                        ))}\n                    </Menu>\n                </DropdownMenu>\n            )}\n            {!isFolderTreeButtonHidden && (\n                <Arrow16\n                    className=\"bdl-ContentExplorerFolderTreeBreadcrumbs-icon\"\n                    height={BREADCRUMB_ARROW_ICON_HEIGHT}\n                    width={BREADCRUMB_ARROW_ICON_WIDTH}\n                    viewBox={BREADCRUMB_ARROW_ICON_VIEWBOX}\n                />\n            )}\n            <span className=\"bdl-ContentExplorerFolderTreeBreadcrumbs-text\" title={currentFolderName}>\n                <FormattedMessage\n                    {...messages.folderTreeBreadcrumbsText}\n                    values={{ folderName: currentFolderName, totalItems: formatNumber(numTotalItems) }}\n                />\n            </span>\n        </div>\n    );\n};\n\nContentExplorerFolderTreeBreadcrumbs.propTypes = {\n    foldersPath: FoldersPathPropType.isRequired,\n    intl: PropTypes.any,\n    isFolderTreeButtonHidden: PropTypes.bool,\n    numTotalItems: PropTypes.number.isRequired,\n    onBreadcrumbClick: PropTypes.func,\n};\n\nexport { ContentExplorerFolderTreeBreadcrumbs as ContentExplorerFolderTreeBreadcrumbsBase };\nexport default injectIntl(ContentExplorerFolderTreeBreadcrumbs);\n"],"file":"ContentExplorerFolderTreeBreadcrumbs.js"}