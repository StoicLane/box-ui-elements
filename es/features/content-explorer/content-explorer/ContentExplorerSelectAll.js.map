{"version":3,"sources":["../../../../src/features/content-explorer/content-explorer/ContentExplorerSelectAll.js"],"names":["PropTypes","React","injectIntl","FormattedMessage","Checkbox","Tooltip","messages","ContentExplorerSelectAll","handleSelectAllClick","intl","isLabelHidden","isSelectAllChecked","numTotalItems","result","itemsCount","formatNumber","results","selectAll","undefined","propTypes","func","any","bool","number","ContentExplorerSelectAllBase"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,YAA7C;AACA,OAAOC,QAAP,MAAqB,uCAArB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B;AAAA,MAC7BC,oBAD6B,QAC7BA,oBAD6B;AAAA,MAE7BC,IAF6B,QAE7BA,IAF6B;AAAA,MAG7BC,aAH6B,QAG7BA,aAH6B;AAAA,MAI7BC,kBAJ6B,QAI7BA,kBAJ6B;AAAA,gCAK7BC,aAL6B;AAAA,MAK7BA,aAL6B,mCAKb,CALa;AAAA,SAO7B;AAAK,IAAA,SAAS,EAAC;AAAf,KACK,CAACF,aAAD,IACG;AAAO,IAAA,SAAS,EAAC;AAAjB,KACKE,aAAa,KAAK,CAAlB,GACG,oBAAC,gBAAD,eAAsBN,QAAQ,CAACO,MAA/B;AAAuC,IAAA,MAAM,EAAE;AAAEC,MAAAA,UAAU,EAAEL,IAAI,CAACM,YAAL,CAAkBH,aAAlB;AAAd;AAA/C,KADH,GAGG,oBAAC,gBAAD,eAAsBN,QAAQ,CAACU,OAA/B;AAAwC,IAAA,MAAM,EAAE;AAAEF,MAAAA,UAAU,EAAEL,IAAI,CAACM,YAAL,CAAkBH,aAAlB;AAAd;AAAhD,KAJR,CAFR,EAUK,CAACF,aAAD,IACG;AAAO,IAAA,SAAS,EAAC;AAAjB,KACI,oBAAC,gBAAD,EAAsBJ,QAAQ,CAACW,SAA/B,CADJ,CAXR,EAeI,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEP,aAAa,GAAGQ,SAAH,GAAe,KAA9C;AAAqD,IAAA,IAAI,EAAE,oBAAC,gBAAD,EAAsBZ,QAAQ,CAACW,SAA/B;AAA3D,KACI,oBAAC,QAAD;AACI,IAAA,SAAS,MADb;AAEI,IAAA,SAAS,EAAC,sCAFd;AAGI,IAAA,QAAQ,EAAET,oBAHd;AAII,IAAA,SAAS,EAAEG;AAJf,IADJ,CAfJ,CAP6B;AAAA,CAAjC;;AAiCAJ,wBAAwB,CAACY,SAAzB,GAAqC;AACjCX,EAAAA,oBAAoB,EAAER,SAAS,CAACoB,IADC;AAEjCX,EAAAA,IAAI,EAAET,SAAS,CAACqB,GAFiB;AAGjCV,EAAAA,kBAAkB,EAAEX,SAAS,CAACsB,IAHG;AAIjCZ,EAAAA,aAAa,EAAEV,SAAS,CAACsB,IAJQ;AAKjCV,EAAAA,aAAa,EAAEZ,SAAS,CAACuB;AALQ,CAArC;AAQA,SAAShB,wBAAwB,IAAIiB,4BAArC;AACA,eAAetB,UAAU,CAACK,wBAAD,CAAzB","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport Checkbox from '../../../components/checkbox/Checkbox';\nimport Tooltip from '../../../components/tooltip';\nimport messages from '../messages';\n\nconst ContentExplorerSelectAll = ({\n    handleSelectAllClick,\n    intl,\n    isLabelHidden,\n    isSelectAllChecked,\n    numTotalItems = 0,\n}) => (\n    <div className=\"content-explorer-select-all-container\">\n        {!isLabelHidden && (\n            <label className=\"content-explorer-select-all-items-counter\">\n                {numTotalItems === 1 ? (\n                    <FormattedMessage {...messages.result} values={{ itemsCount: intl.formatNumber(numTotalItems) }} />\n                ) : (\n                    <FormattedMessage {...messages.results} values={{ itemsCount: intl.formatNumber(numTotalItems) }} />\n                )}\n            </label>\n        )}\n        {!isLabelHidden && (\n            <label className=\"content-explorer-select-all-checkbox-label\">\n                <FormattedMessage {...messages.selectAll} />\n            </label>\n        )}\n        <Tooltip isShown={isLabelHidden ? undefined : false} text={<FormattedMessage {...messages.selectAll} />}>\n            <Checkbox\n                hideLabel\n                className=\"content-explorer-select-all-checkbox\"\n                onChange={handleSelectAllClick}\n                isChecked={isSelectAllChecked}\n            />\n        </Tooltip>\n    </div>\n);\n\nContentExplorerSelectAll.propTypes = {\n    handleSelectAllClick: PropTypes.func,\n    intl: PropTypes.any,\n    isSelectAllChecked: PropTypes.bool,\n    isLabelHidden: PropTypes.bool,\n    numTotalItems: PropTypes.number,\n};\n\nexport { ContentExplorerSelectAll as ContentExplorerSelectAllBase };\nexport default injectIntl(ContentExplorerSelectAll);\n"],"file":"ContentExplorerSelectAll.js"}