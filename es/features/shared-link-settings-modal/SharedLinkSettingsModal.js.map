{"version":3,"sources":["../../../src/features/shared-link-settings-modal/SharedLinkSettingsModal.js"],"names":["React","Component","PropTypes","FormattedMessage","Button","PrimaryButton","Modal","ModalActions","InlineNotice","Link","commonMessages","Classification","getClassificationLabelColor","VanityNameSection","PasswordSection","ExpirationSection","AllowDownloadSection","messages","PEOPLE_WITH_LINK","PEOPLE_IN_COMPANY","PEOPLE_IN_ITEM","getAccessNoticeMessageId","accessLevel","canDownload","message","withLinkViewDownload","withLinkView","inCompanyViewDownload","inCompanyView","inItem","SharedLinkSettingsModal","props","event","preventDefault","state","expirationFormattedDate","isDownloadEnabled","isExpirationEnabled","isPasswordEnabled","password","vanityName","onSubmit","expirationTimestamp","undefined","setState","target","value","vanityNameError","passwordError","checked","date","formattedDate","expirationDate","expirationError","isVanityEnabled","Date","prevProps","canChangeVanityName","hideVanityNameSection","serverURL","vanityNameInputProps","warnOnPublic","onVanityNameChange","onVanityCheckboxChange","canChangePassword","isPasswordAvailable","passwordCheckboxProps","passwordInformationText","passwordInputProps","onPasswordCheckboxChange","onPasswordChange","canChangeExpiration","dateFormat","expirationCheckboxProps","expirationInputProps","onExpirationCheckboxChange","onExpirationDateChange","sharedLinkSettingWarningLinkText","canChangeDownload","directLink","directLinkInputProps","downloadCheckboxProps","isDirectLinkAvailable","isDirectLinkUnavailableDueToDownloadSettings","isDirectLinkUnavailableDueToAccessPolicy","isDirectLinkUnavailableDueToMaliciousContent","isDownloadAvailable","item","classification","onAllowDownloadChange","bannerPolicy","classificationColor","modalTitle","body","cancelButtonProps","isOpen","modalProps","onRequestClose","saveButtonProps","submitting","showInaccessibleSettingsNotice","disableSaveBtn","renderModalTitle","inaccessibleSettingsNotice","renderAccessLevelNotice","renderExpirationSection","renderPasswordSection","renderVanityNameSection","renderAllowDownloadSection","cancel","save","string","bool","func","isRequired","number","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport Button from '../../components/button';\nimport PrimaryButton from '../../components/primary-button';\nimport { Modal, ModalActions } from '../../components/modal';\nimport InlineNotice from '../../components/inline-notice';\nimport Link from '../../components/link/LinkBase';\nimport commonMessages from '../../common/messages';\nimport Classification, { getClassificationLabelColor } from '../classification';\n\nimport VanityNameSection from './VanityNameSection';\nimport PasswordSection from './PasswordSection';\nimport ExpirationSection from './ExpirationSection';\nimport AllowDownloadSection from './AllowDownloadSection';\nimport messages from './messages';\n\nimport { PEOPLE_WITH_LINK, PEOPLE_IN_COMPANY, PEOPLE_IN_ITEM } from '../shared-link-modal/constants';\n\nimport './SharedLinkSettingsModal.scss';\n\n/**\n * Return the translation message based on the access level and whether the user can download or not\n * @param {string} accessLevel one of 'peopleWithTheLink', 'peopleInYourCompany', or 'peopleInThisItem'\n * @param {boolean} canDownload prop value for whether the user can currently download\n *\n * @return {object|undefined} message for the proper translation (or undefined if nothing matches)\n */\nfunction getAccessNoticeMessageId(accessLevel, canDownload) {\n    let message;\n\n    switch (accessLevel) {\n        case PEOPLE_WITH_LINK:\n            message = canDownload ? messages.withLinkViewDownload : messages.withLinkView;\n            break;\n        case PEOPLE_IN_COMPANY:\n            message = canDownload ? messages.inCompanyViewDownload : messages.inCompanyView;\n            break;\n        case PEOPLE_IN_ITEM:\n            message = messages.inItem;\n            break;\n        default:\n            break;\n    }\n\n    return message;\n}\n\nclass SharedLinkSettingsModal extends Component {\n    static propTypes = {\n        /** The format of the expiration date value for form submit */\n        dateFormat: PropTypes.string,\n        hideVanityNameSection: PropTypes.bool,\n        isOpen: PropTypes.bool,\n        onRequestClose: PropTypes.func,\n        submitting: PropTypes.bool,\n        warnOnPublic: PropTypes.bool,\n        /** Function called on form submission. Format is:\n         * ({\n         *      expirationTimestamp: number (in milliseconds),\n         *      isDownloadEnabled: true,\n         *      isExpirationEnabled: true,\n         *      isPasswordEnabled: true,\n         *      password: string,\n         *      vanityName: string,\n         * }) => void\n         */\n        onSubmit: PropTypes.func.isRequired,\n\n        // access level props\n        /** the access level used for the item being shared */\n        accessLevel: PropTypes.string,\n\n        // Custom URL props\n        /** Whether or not user has permission to change/set vanity URL for this item */\n        canChangeVanityName: PropTypes.bool.isRequired,\n        /** Current vanity name for the item */\n        vanityName: PropTypes.string.isRequired,\n        /** Server URL prefix for vanity URL preview; should be something like http://company.box.com/v/ */\n        serverURL: PropTypes.string.isRequired,\n        vanityNameError: PropTypes.string,\n\n        // Password props\n        /** Whether or not user has permission to enable/disable/change password */\n        canChangePassword: PropTypes.bool.isRequired,\n        /** Whether or not the password section is visible to user */\n        isPasswordAvailable: PropTypes.bool.isRequired,\n        /** Whether or not password is currently enabled */\n        isPasswordEnabled: PropTypes.bool.isRequired,\n        passwordError: PropTypes.string,\n        /** Information shown below password input box * */\n        passwordInformationText: PropTypes.string,\n\n        // Expiration props\n        /** Whether or not user has permission to enable/disable/change expiration */\n        canChangeExpiration: PropTypes.bool.isRequired,\n        /** Current expiration timestamp, in milliseconds */\n        expirationTimestamp: PropTypes.number,\n        expirationError: PropTypes.string,\n\n        // Allow download props\n        /** Whether or not the download section is visible to user */\n        isDownloadAvailable: PropTypes.bool.isRequired,\n        /** Whether or not user has permission to enable/disable download */\n        canChangeDownload: PropTypes.bool.isRequired,\n        /** Whether or not download is currently enabled */\n        isDownloadEnabled: PropTypes.bool.isRequired,\n\n        // Direct link props\n        /** URL for direct link */\n        directLink: PropTypes.string.isRequired,\n        /** Whether or not direct link is available */\n        isDirectLinkAvailable: PropTypes.bool.isRequired,\n        /** Whether or not direct link is unavailable only due to download setting */\n        isDirectLinkUnavailableDueToDownloadSettings: PropTypes.bool.isRequired,\n        /** Whether or not direct link is unavailable only due to access policy setting */\n        isDirectLinkUnavailableDueToAccessPolicy: PropTypes.bool.isRequired,\n        /** Whether or not direct link is unavailable only due to malicious content policy */\n        isDirectLinkUnavailableDueToMaliciousContent: PropTypes.bool.isRequired,\n\n        // Classification props\n        item: PropTypes.object,\n\n        // Hooks for resin\n        cancelButtonProps: PropTypes.object,\n        directLinkInputProps: PropTypes.object,\n        downloadCheckboxProps: PropTypes.object,\n        expirationCheckboxProps: PropTypes.object,\n        expirationInputProps: PropTypes.object,\n        modalProps: PropTypes.object,\n        passwordCheckboxProps: PropTypes.object,\n        passwordInputProps: PropTypes.object,\n        saveButtonProps: PropTypes.object,\n        vanityNameInputProps: PropTypes.object,\n    };\n\n    static defaultProps = {\n        cancelButtonProps: {},\n        modalProps: {},\n        saveButtonProps: {},\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            expirationDate: props.expirationTimestamp ? new Date(props.expirationTimestamp) : null,\n            expirationError: props.expirationError,\n            expirationFormattedDate: props.expirationTimestamp ? new Date(props.expirationTimestamp) : null,\n            isVanityEnabled: !!props.vanityName,\n            isDownloadEnabled: props.isDownloadEnabled,\n            isExpirationEnabled: !!props.expirationTimestamp,\n            isPasswordEnabled: props.isPasswordEnabled,\n            password: '',\n            passwordError: props.passwordError,\n            vanityName: props.vanityName,\n            vanityNameError: props.vanityNameError,\n        };\n    }\n\n    componentDidUpdate(prevProps) {\n        const { expirationError, passwordError, vanityNameError } = this.props;\n\n        if (\n            prevProps.expirationError !== expirationError ||\n            prevProps.passwordError !== passwordError ||\n            prevProps.vanityNameError !== vanityNameError\n        ) {\n            this.setState({\n                expirationError,\n                passwordError,\n                vanityNameError,\n            });\n        }\n    }\n\n    onSubmit = event => {\n        event.preventDefault();\n\n        const {\n            expirationFormattedDate,\n            isDownloadEnabled,\n            isExpirationEnabled,\n            isPasswordEnabled,\n            password,\n            vanityName,\n        } = this.state;\n\n        this.props.onSubmit({\n            expirationTimestamp: expirationFormattedDate || undefined,\n            isDownloadEnabled,\n            isExpirationEnabled,\n            isPasswordEnabled,\n            password,\n            vanityName,\n        });\n    };\n\n    onVanityNameChange = event => {\n        this.setState({\n            vanityName: event.target.value,\n            vanityNameError: undefined,\n        });\n    };\n\n    onPasswordChange = event => {\n        this.setState({\n            password: event.target.value,\n            passwordError: undefined,\n        });\n    };\n\n    onPasswordCheckboxChange = event => {\n        this.setState({ isPasswordEnabled: event.target.checked });\n    };\n\n    onExpirationDateChange = (date, formattedDate) => {\n        this.setState({ expirationDate: date, expirationFormattedDate: formattedDate, expirationError: undefined });\n    };\n\n    onExpirationCheckboxChange = event => {\n        this.setState({ isExpirationEnabled: event.target.checked });\n    };\n\n    onAllowDownloadChange = event => {\n        this.setState({ isDownloadEnabled: event.target.checked });\n    };\n\n    onVanityCheckboxChange = event => {\n        this.setState({\n            isVanityEnabled: event.target.checked,\n            vanityName: !event.target.checked ? '' : this.props.vanityName,\n        });\n    };\n\n    renderVanityNameSection() {\n        const {\n            canChangeVanityName,\n            hideVanityNameSection,\n            serverURL,\n            vanityNameInputProps,\n            warnOnPublic = false,\n        } = this.props;\n        const { vanityNameError, isVanityEnabled } = this.state;\n\n        if (hideVanityNameSection) {\n            return null;\n        }\n\n        return (\n            <VanityNameSection\n                canChangeVanityName={canChangeVanityName}\n                isVanityEnabled={isVanityEnabled}\n                error={vanityNameError}\n                onChange={this.onVanityNameChange}\n                onCheckboxChange={this.onVanityCheckboxChange}\n                serverURL={serverURL}\n                vanityName={this.state.vanityName}\n                vanityNameInputProps={vanityNameInputProps}\n                warnOnPublic={warnOnPublic}\n            />\n        );\n    }\n\n    renderPasswordSection() {\n        const {\n            canChangePassword,\n            isPasswordAvailable,\n            passwordCheckboxProps,\n            passwordInformationText,\n            passwordInputProps,\n        } = this.props;\n        const { isPasswordEnabled, password, passwordError } = this.state;\n\n        return (\n            <PasswordSection\n                canChangePassword={canChangePassword}\n                error={passwordError}\n                isPasswordAvailable={isPasswordAvailable}\n                isPasswordEnabled={isPasswordEnabled}\n                isPasswordInitiallyEnabled={this.props.isPasswordEnabled}\n                onCheckboxChange={this.onPasswordCheckboxChange}\n                onPasswordChange={this.onPasswordChange}\n                password={password}\n                passwordCheckboxProps={passwordCheckboxProps}\n                passwordInformationText={passwordInformationText}\n                passwordInputProps={passwordInputProps}\n            />\n        );\n    }\n\n    renderExpirationSection() {\n        const { canChangeExpiration, dateFormat, expirationCheckboxProps, expirationInputProps } = this.props;\n        const { expirationDate, isExpirationEnabled, expirationError } = this.state;\n\n        return (\n            <ExpirationSection\n                canChangeExpiration={canChangeExpiration}\n                dateFormat={dateFormat}\n                error={expirationError}\n                expirationCheckboxProps={expirationCheckboxProps}\n                expirationDate={expirationDate}\n                expirationInputProps={expirationInputProps}\n                isExpirationEnabled={isExpirationEnabled}\n                onCheckboxChange={this.onExpirationCheckboxChange}\n                onExpirationDateChange={this.onExpirationDateChange}\n            />\n        );\n    }\n\n    renderAccessLevelNotice() {\n        const { accessLevel } = this.props;\n        const { isDownloadEnabled } = this.state;\n        const message = getAccessNoticeMessageId(accessLevel, isDownloadEnabled);\n\n        return (\n            message && (\n                <div className=\"link-settings-modal-notice\">\n                    <FormattedMessage {...message} />{' '}\n                    <Link\n                        href=\"https://support.box.com/hc/en-us/articles/360043697554-Configuring-Individual-Shared-Link-Settings\"\n                        target=\"_blank\"\n                    >\n                        <FormattedMessage {...messages.sharedLinkSettingWarningLinkText} />\n                    </Link>\n                </div>\n            )\n        );\n    }\n\n    renderAllowDownloadSection() {\n        const {\n            canChangeDownload,\n            directLink,\n            directLinkInputProps,\n            downloadCheckboxProps,\n            isDirectLinkAvailable,\n            isDirectLinkUnavailableDueToDownloadSettings,\n            isDirectLinkUnavailableDueToAccessPolicy,\n            isDirectLinkUnavailableDueToMaliciousContent,\n            isDownloadAvailable,\n            item,\n        } = this.props;\n\n        const { isDownloadEnabled } = this.state;\n        const { classification } = item;\n\n        return (\n            <AllowDownloadSection\n                canChangeDownload={canChangeDownload}\n                classification={classification}\n                directLink={directLink}\n                directLinkInputProps={directLinkInputProps}\n                downloadCheckboxProps={downloadCheckboxProps}\n                isDirectLinkAvailable={isDirectLinkAvailable}\n                isDirectLinkUnavailableDueToDownloadSettings={isDirectLinkUnavailableDueToDownloadSettings}\n                isDirectLinkUnavailableDueToAccessPolicy={isDirectLinkUnavailableDueToAccessPolicy}\n                isDirectLinkUnavailableDueToMaliciousContent={isDirectLinkUnavailableDueToMaliciousContent}\n                isDownloadAvailable={isDownloadAvailable}\n                isDownloadEnabled={isDownloadEnabled}\n                onChange={this.onAllowDownloadChange}\n            />\n        );\n    }\n\n    renderModalTitle() {\n        const { item } = this.props;\n        const { bannerPolicy, classification } = item;\n        const classificationColor = getClassificationLabelColor(bannerPolicy);\n\n        return (\n            <span className=\"bdl-SharedLinkSettingsModal-title\">\n                <FormattedMessage {...messages.modalTitle} />\n                <Classification\n                    className=\"bdl-SharedLinkSettingsModal-classification\"\n                    color={classificationColor}\n                    definition={bannerPolicy ? bannerPolicy.body : undefined}\n                    messageStyle=\"tooltip\"\n                    name={classification}\n                />\n            </span>\n        );\n    }\n\n    render() {\n        const {\n            canChangeDownload,\n            canChangeExpiration,\n            canChangePassword,\n            canChangeVanityName,\n            cancelButtonProps,\n            isOpen,\n            modalProps,\n            onRequestClose,\n            saveButtonProps,\n            submitting,\n        } = this.props;\n\n        const showInaccessibleSettingsNotice = !(\n            canChangeDownload &&\n            canChangeExpiration &&\n            canChangePassword &&\n            canChangeVanityName\n        );\n\n        const disableSaveBtn = !(canChangeDownload || canChangeExpiration || canChangePassword || canChangeVanityName);\n        return (\n            <Modal\n                className=\"be-modal shared-link-settings-modal\"\n                isOpen={isOpen}\n                onRequestClose={submitting ? undefined : onRequestClose}\n                title={this.renderModalTitle()}\n                {...modalProps}\n            >\n                <form onSubmit={this.onSubmit}>\n                    {showInaccessibleSettingsNotice && (\n                        <InlineNotice type=\"warning\">\n                            <FormattedMessage {...messages.inaccessibleSettingsNotice} />\n                        </InlineNotice>\n                    )}\n                    {this.renderAccessLevelNotice()}\n                    {this.renderExpirationSection()}\n                    {this.renderPasswordSection()}\n                    {this.renderVanityNameSection()}\n                    {this.renderAllowDownloadSection()}\n                    <ModalActions>\n                        <Button isDisabled={submitting} onClick={onRequestClose} type=\"button\" {...cancelButtonProps}>\n                            <FormattedMessage {...commonMessages.cancel} />\n                        </Button>\n                        <PrimaryButton\n                            isDisabled={submitting || disableSaveBtn}\n                            isLoading={submitting}\n                            {...saveButtonProps}\n                        >\n                            <FormattedMessage {...commonMessages.save} />\n                        </PrimaryButton>\n                    </ModalActions>\n                </form>\n            </Modal>\n        );\n    }\n}\n\nexport default SharedLinkSettingsModal;\n"],"file":"SharedLinkSettingsModal.js"}