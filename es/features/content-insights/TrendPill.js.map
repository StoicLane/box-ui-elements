{"version":3,"sources":["../../../src/features/content-insights/TrendPill.tsx"],"names":["React","classNames","FormattedMessage","injectIntl","LabelPill","messages","getTrendStatus","trend","getTrendByPeriod","period","trendMonth","trendThreeMonths","trendYear","trendWeek","TrendPill","intl","getTrendLabel","value","formatMessage","trendUp","trendDown","trendStatus","trendLabel","formatNumber","style"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,gBAAT,EAA2BC,UAA3B,QAAwD,YAAxD;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAIA,OAAO,kBAAP;;AAUA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAA0B;AAC7C,MAAIA,KAAK,KAAK,CAAd,EAAiB;AACb,WAAO,SAAP;AACH;;AAED,SAAOA,KAAK,GAAG,CAAR,GAAY,IAAZ,GAAmB,MAA1B;AACH,CAND;;AAQA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,MAAD,EAAoB;AACzC,UAAQA,MAAR;AACI,SAAK,OAAL;AACI,aAAOJ,QAAQ,CAACK,UAAhB;;AACJ,SAAK,aAAL;AACI,aAAOL,QAAQ,CAACM,gBAAhB;;AACJ,SAAK,MAAL;AACI,aAAON,QAAQ,CAACO,SAAhB;;AACJ,SAAK,MAAL;AACA;AACI,aAAOP,QAAQ,CAACQ,SAAhB;AATR;AAWH,CAZD;;AAcA,SAASC,SAAT,OAAmD;AAAA,MAA9BC,IAA8B,QAA9BA,IAA8B;AAAA,MAAxBN,MAAwB,QAAxBA,MAAwB;AAAA,MAAhBF,KAAgB,QAAhBA,KAAgB;;AAC/C,MAAMS,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAA2B;AAC7C,WAAOF,IAAI,CAACG,aAAL,CAAmBD,KAAK,GAAG,CAAR,GAAYZ,QAAQ,CAACc,OAArB,GAA+Bd,QAAQ,CAACe,SAA3D,CAAP;AACH,GAFD;;AAIA,MAAMC,WAAW,GAAGf,cAAc,CAACC,KAAD,CAAlC;AACA,MAAMe,UAAU,GAAGN,aAAa,CAACT,KAAD,CAAhC;AAEA,SACI,oBAAC,SAAD,CAAW,IAAX;AACI,IAAA,SAAS,EAAEN,UAAU,CAAC,WAAD,EAAc;AAC/B,uBAAiBoB,WAAW,KAAK,IADF;AAE/B,yBAAmBA,WAAW,KAAK;AAFJ,KAAd;AADzB,KAMI,0CACKA,WAAW,KAAK,SAAhB,IAA6B;AAAM,kBAAYC,UAAlB;AAA8B,IAAA,SAAS,EAAC,iBAAxC;AAA0D,IAAA,IAAI,EAAC;AAA/D,IADlC,EAEI,oBAAC,SAAD,CAAW,IAAX,QACI,0CACI;AAAM,IAAA,SAAS,EAAC;AAAhB,KAAwCP,IAAI,CAACQ,YAAL,CAAkBhB,KAAlB,EAAyB;AAAEiB,IAAAA,KAAK,EAAE;AAAT,GAAzB,CAAxC,CADJ,EAEI,oBAAC,gBAAD,EAAsBhB,gBAAgB,CAACC,MAAD,CAAtC,CAFJ,CADJ,CAFJ,CANJ,CADJ;AAkBH;;AAED,eAAeN,UAAU,CAACW,SAAD,CAAzB","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { FormattedMessage, injectIntl, IntlShape } from 'react-intl';\n\nimport LabelPill from '../../components/label-pill';\nimport messages from './messages';\n\nimport { Period } from './types';\n\nimport './TrendPill.scss';\n\ninterface Props {\n    intl: IntlShape;\n    period: Period;\n    trend: number;\n}\n\ntype Trend = 'up' | 'down' | 'neutral';\n\nconst getTrendStatus = (trend: number): Trend => {\n    if (trend === 0) {\n        return 'neutral';\n    }\n\n    return trend > 0 ? 'up' : 'down';\n};\n\nconst getTrendByPeriod = (period: Period) => {\n    switch (period) {\n        case 'month':\n            return messages.trendMonth;\n        case 'threemonths':\n            return messages.trendThreeMonths;\n        case 'year':\n            return messages.trendYear;\n        case 'week':\n        default:\n            return messages.trendWeek;\n    }\n};\n\nfunction TrendPill({ intl, period, trend }: Props) {\n    const getTrendLabel = (value: number): string => {\n        return intl.formatMessage(value > 0 ? messages.trendUp : messages.trendDown);\n    };\n\n    const trendStatus = getTrendStatus(trend);\n    const trendLabel = getTrendLabel(trend);\n\n    return (\n        <LabelPill.Pill\n            className={classNames('TrendPill', {\n                'TrendPill--up': trendStatus === 'up',\n                'TrendPill--down': trendStatus === 'down',\n            })}\n        >\n            <>\n                {trendStatus !== 'neutral' && <span aria-label={trendLabel} className=\"TrendPill-trend\" role=\"img\" />}\n                <LabelPill.Text>\n                    <>\n                        <span className=\"TrendPill-percentage\">{intl.formatNumber(trend, { style: 'percent' })}</span>\n                        <FormattedMessage {...getTrendByPeriod(period)} />\n                    </>\n                </LabelPill.Text>\n            </>\n        </LabelPill.Pill>\n    );\n}\n\nexport default injectIntl(TrendPill);\n"],"file":"TrendPill.js"}