{"version":3,"sources":["../../../../../src/features/content-insights/charts/bar/BarChart.tsx"],"names":["React","classNames","noop","Bar","isFunction","valueAccessor","BarChart","className","data","direction","hasAxisLabel","label","labelAccessor","onBarMouseEnter","onBarMouseLeave","isHorizontal","isInteractive","max","map","datum","reduce","previousValue","currentValue","Math","getSize","handleBarMouseEnter","handleBarMouseLeave","position"],"mappings":"AAAA;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAGA,OAAO,iBAAP;;AAoBA,SAASC,UAAT,CAAoBC,aAApB,EAAqF;AACjF,SAAO,OAAOA,aAAP,KAAyB,UAAhC;AACH;;AAED,SAASC,QAAT,OAUU;AAAA,MATNC,SASM,QATNA,SASM;AAAA,uBARNC,IAQM;AAAA,MARNA,IAQM,0BARC,EAQD;AAAA,4BAPNC,SAOM;AAAA,MAPNA,SAOM,+BAPM,UAON;AAAA,+BANNC,YAMM;AAAA,MANNA,YAMM,kCANS,KAMT;AAAA,MALNC,KAKM,QALNA,KAKM;AAAA,MAJNC,aAIM,QAJNA,aAIM;AAAA,MAHNC,eAGM,QAHNA,eAGM;AAAA,MAFNC,eAEM,QAFNA,eAEM;AAAA,MADNT,aACM,QADNA,aACM;AACN,MAAMU,YAAY,GAAGN,SAAS,KAAK,YAAnC;AACA,MAAMO,aAAa,GAAG,CAAC,CAACH,eAAF,IAAqB,CAAC,CAACC,eAA7C;AACA,MAAMG,GAAG,GAAGT,IAAI,CACXU,GADO,CACH,UAAAC,KAAK;AAAA,WAAKf,UAAU,CAACC,aAAD,CAAV,GAA4BA,aAAa,CAACc,KAAD,CAAzC,GAAmDA,KAAK,CAACd,aAAD,CAA7D;AAAA,GADF,EAEPe,MAFO,CAEA,UAACC,aAAD,EAAgBC,YAAhB;AAAA,WAAiCC,IAAI,CAACN,GAAL,CAASI,aAAT,EAAwBC,YAAxB,CAAjC;AAAA,GAFA,EAEwE,CAFxE,CAAZ;;AAIA,MAAME,OAAO,GAAG,SAAVA,OAAU,CAACL,KAAD,EAAgB;AAC5B;AACA;AACA,QAAIF,GAAG,KAAK,CAAZ,EAAe;AACX,aAAO,CAAP;AACH;;AAED,WAAQ,CAACb,UAAU,CAACC,aAAD,CAAV,GAA4BA,aAAa,CAACc,KAAD,CAAzC,GAAmDA,KAAK,CAACd,aAAD,CAAzD,IAA4EY,GAA7E,GAAoF,GAA3F;AACH,GARD;;AAUA,MAAMQ,mBAAmB,GAAGZ,eAAe,IAAIX,IAA/C;AACA,MAAMwB,mBAAmB,GAAGZ,eAAe,IAAIZ,IAA/C;AAEA,SACI;AACI,kBAAYS,KADhB;AAEI,IAAA,SAAS,EAAEV,UAAU,CAAC,aAAD,EAAgBM,SAAhB,EAA2B;AAC5C,uBAAiBQ,YAD2B;AAE5C,wBAAkBC;AAF0B,KAA3B,CAFzB;AAMI,IAAA,IAAI,EAAC;AANT,KAQKR,IAAI,CAACU,GAAL,CAAS,UAAAC,KAAK;AAAA,WACX,oBAAC,GAAD;AACI,MAAA,GAAG,EAAEA,KAAK,CAACP,aAAD,CADd;AAEI,MAAA,SAAS,EAAEH,SAFf;AAGI,MAAA,KAAK,EAAEC,YAAY,GAAGS,KAAK,CAACP,aAAD,CAAR,GAA0B,EAHjD;AAII,MAAA,YAAY,EAAE,sBAACe,QAAD;AAAA,eAA8BF,mBAAmB,CAAC;AAAEN,UAAAA,KAAK,EAALA;AAAF,SAAD,EAAYQ,QAAZ,CAAjD;AAAA,OAJlB;AAKI,MAAA,YAAY,EAAE;AAAA,eAAMD,mBAAmB,CAAC;AAAEP,UAAAA,KAAK,EAALA;AAAF,SAAD,CAAzB;AAAA,OALlB;AAMI,MAAA,IAAI,EAAEK,OAAO,CAACL,KAAD;AANjB,MADW;AAAA,GAAd,CARL,CADJ;AAqBH;;AAED,eAAeb,QAAf","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport noop from 'lodash/noop';\nimport Bar from './Bar';\nimport { AccessorFunction, Direction } from '../types';\n\nimport './BarChart.scss';\n\ntype ValueAccessor = string | AccessorFunction;\n\ninterface OffsetPosition {\n    left: number;\n    top: number;\n}\ninterface Props {\n    className?: string;\n    data: Array<any>;\n    direction?: Direction;\n    hasAxisLabel?: boolean;\n    label: string;\n    labelAccessor: string;\n    onBarMouseEnter?: (arg1: { datum: any }, arg2: OffsetPosition) => void;\n    onBarMouseLeave?: (arg1: { datum: any }) => void;\n    valueAccessor: ValueAccessor;\n}\n\nfunction isFunction(valueAccessor: ValueAccessor): valueAccessor is AccessorFunction {\n    return typeof valueAccessor === 'function';\n}\n\nfunction BarChart({\n    className,\n    data = [],\n    direction = 'vertical',\n    hasAxisLabel = false,\n    label,\n    labelAccessor,\n    onBarMouseEnter,\n    onBarMouseLeave,\n    valueAccessor,\n}: Props) {\n    const isHorizontal = direction === 'horizontal';\n    const isInteractive = !!onBarMouseEnter || !!onBarMouseLeave;\n    const max = data\n        .map(datum => (isFunction(valueAccessor) ? valueAccessor(datum) : datum[valueAccessor]))\n        .reduce((previousValue, currentValue) => Math.max(previousValue, currentValue), 0);\n\n    const getSize = (datum: any) => {\n        // If max is 0 then all other values in the data array are 0 so return 0\n        // instead of allowing the following calculation to return Infinity\n        if (max === 0) {\n            return 0;\n        }\n\n        return ((isFunction(valueAccessor) ? valueAccessor(datum) : datum[valueAccessor]) / max) * 100;\n    };\n\n    const handleBarMouseEnter = onBarMouseEnter || noop;\n    const handleBarMouseLeave = onBarMouseLeave || noop;\n\n    return (\n        <div\n            aria-label={label}\n            className={classNames('ca-BarChart', className, {\n                'is-horizontal': isHorizontal,\n                'is-interactive': isInteractive,\n            })}\n            role=\"img\"\n        >\n            {data.map(datum => (\n                <Bar\n                    key={datum[labelAccessor]}\n                    direction={direction}\n                    label={hasAxisLabel ? datum[labelAccessor] : ''}\n                    onMouseEnter={(position: OffsetPosition) => handleBarMouseEnter({ datum }, position)}\n                    onMouseLeave={() => handleBarMouseLeave({ datum })}\n                    size={getSize(datum)}\n                />\n            ))}\n        </div>\n    );\n}\n\nexport default BarChart;\n"],"file":"BarChart.js"}