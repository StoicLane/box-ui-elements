{"version":3,"sources":["../../../src/features/content-insights/ContentInsightsSummary.tsx"],"names":["React","ContentAnalyticsErrorState","ContentInsightsSummaryGhostState","GraphCardPreviewsSummary","OpenContentInsightsButton","ContentInsightsSummary","error","graphData","isLoading","previousPeriodCount","onClick","totalCount","renderContentAnalyticsSummary"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,0BAAP,MAAuC,8BAAvC;AACA,OAAOC,gCAAP,MAA6C,oCAA7C;AACA,OAAOC,wBAAP,MAAqC,4BAArC;AACA,OAAOC,yBAAP,MAAsC,6BAAtC;AAGA,OAAO,+BAAP;;AAWA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,OAAsF;AAAA,MAAnFC,KAAmF,QAAnFA,KAAmF;AAAA,MAA5EC,SAA4E,QAA5EA,SAA4E;AAAA,MAAjEC,SAAiE,QAAjEA,SAAiE;AAAA,MAAtDC,mBAAsD,QAAtDA,mBAAsD;AAAA,MAAjCC,OAAiC,QAAjCA,OAAiC;AAAA,MAAxBC,UAAwB,QAAxBA,UAAwB;;AACjH,MAAMC,6BAA6B,GAAG,SAAhCA,6BAAgC,GAAM;AACxC,QAAIN,KAAJ,EAAW;AACP,aAAO,oBAAC,0BAAD;AAA4B,QAAA,KAAK,EAAEA;AAAnC,QAAP;AACH;;AAED,QAAIE,SAAJ,EAAe;AACX,aAAO,oBAAC,gCAAD,OAAP;AACH;;AAED,WACI,0CACI,oBAAC,wBAAD;AACI,MAAA,SAAS,EAAED,SADf;AAEI,MAAA,mBAAmB,EAAEE,mBAFzB;AAGI,MAAA,UAAU,EAAEE;AAHhB,MADJ,EAMI,oBAAC,yBAAD;AAA2B,MAAA,OAAO,EAAED;AAApC,MANJ,CADJ;AAUH,GAnBD;;AAqBA,SAAO;AAAK,IAAA,SAAS,EAAC;AAAf,KAAyCE,6BAA6B,EAAtE,CAAP;AACH,CAvBD;;AAyBA,eAAeP,sBAAf","sourcesContent":["import * as React from 'react';\n\nimport ContentAnalyticsErrorState from './ContentAnalyticsErrorState';\nimport ContentInsightsSummaryGhostState from './ContentInsightsSummaryGhostState';\nimport GraphCardPreviewsSummary from './GraphCardPreviewsSummary';\nimport OpenContentInsightsButton from './OpenContentInsightsButton';\nimport { GraphData, ResponseError } from './types';\n\nimport './ContentInsightsSummary.scss';\n\ninterface Props {\n    graphData: GraphData;\n    error?: ResponseError;\n    isLoading: boolean;\n    onClick: () => void;\n    previousPeriodCount: number;\n    totalCount: number;\n}\n\nconst ContentInsightsSummary = ({ error, graphData, isLoading, previousPeriodCount, onClick, totalCount }: Props) => {\n    const renderContentAnalyticsSummary = () => {\n        if (error) {\n            return <ContentAnalyticsErrorState error={error} />;\n        }\n\n        if (isLoading) {\n            return <ContentInsightsSummaryGhostState />;\n        }\n\n        return (\n            <>\n                <GraphCardPreviewsSummary\n                    graphData={graphData}\n                    previousPeriodCount={previousPeriodCount}\n                    totalCount={totalCount}\n                />\n                <OpenContentInsightsButton onClick={onClick} />\n            </>\n        );\n    };\n\n    return <div className=\"ContentInsightsSummary\">{renderContentAnalyticsSummary()}</div>;\n};\n\nexport default ContentInsightsSummary;\n"],"file":"ContentInsightsSummary.js"}