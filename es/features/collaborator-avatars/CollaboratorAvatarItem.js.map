{"version":3,"sources":["../../../src/features/collaborator-avatars/CollaboratorAvatarItem.js"],"names":["React","injectIntl","Badgeable","Tooltip","Avatar","IconExpirationBadge","messages","CollaboratorAvatarItem","props","allowBadging","expiration","intl","isExternalCollab","hasCustomAvatar","avatarUrl","name","rest","avatarInstance","expirationTooltipMessage","formatMessage","expirationTooltipText","date","executeAt","expirationBadge","CollaboratorAvatarItemBase"],"mappings":";;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,YAA3B;AAGA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,mBAAP,MAAgC,yCAAhC;AAEA,OAAOC,QAAP,MAAqB,YAArB;;AAcA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,KAAD,EAAkB;AAAA,4BAUzCA,KAVyC,CAEzCC,YAFyC;AAAA,MAEzCA,YAFyC,oCAE1B,KAF0B;AAAA,MAGzCC,UAHyC,GAUzCF,KAVyC,CAGzCE,UAHyC;AAAA,MAIzCC,IAJyC,GAUzCH,KAVyC,CAIzCG,IAJyC;AAAA,8BAUzCH,KAVyC,CAKzCI,gBALyC;AAAA,MAKzCA,gBALyC,sCAKtB,KALsB;AAAA,MAMzCC,eANyC,GAUzCL,KAVyC,CAMzCK,eANyC;AAAA,MAOzCC,SAPyC,GAUzCN,KAVyC,CAOzCM,SAPyC;AAAA,MAQzCC,IARyC,GAUzCP,KAVyC,CAQzCO,IARyC;AAAA,MAStCC,IATsC,4BAUzCR,KAVyC;;AAY7C,MAAMS,cAAc,GAChBJ,eAAe,IAAIC,SAAnB,GACI,oBAAC,MAAD;AACI,IAAA,SAAS,EAAEA,SADf;AAEI,IAAA,IAAI,EAAEC;AAFV,KAGQC,IAHR;AAII,IAAA,UAAU,EAAEJ,gBAJhB;AAKI,IAAA,kBAAkB,EAAEH;AALxB,KADJ,GASI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEM,IAAI,IAAI;AAAtB,KAA+BC,IAA/B;AAAqC,IAAA,UAAU,EAAEJ,gBAAjD;AAAmE,IAAA,kBAAkB,EAAEH;AAAvF,KAVR;AAaA,MAAMS,wBAAwB,GAAGP,IAAI,CAACQ,aAAL,CAAmBb,QAAQ,CAACc,qBAA5B,EAAmD;AAChFC,IAAAA,IAAI,EAAEX,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEY;AAD8D,GAAnD,CAAjC;AAGA,MAAMC,eAAe,GACjBd,YAAY,IAAIC,UAAhB,IAA8BA,UAAU,CAACY,SAAzC,GACI,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAC,cAAlB;AAAiC,IAAA,IAAI,EAAEJ;AAAvC,KACI;AAAK,kBAAYA,wBAAjB;AAA2C,IAAA,IAAI,EAAC;AAAhD,KACI,oBAAC,mBAAD;AAAqB,IAAA,SAAS,EAAC,QAA/B;AAAwC,IAAA,MAAM,EAAE,EAAhD;AAAoD,IAAA,KAAK,EAAE;AAA3D,IADJ,CADJ,CADJ,GAMI,IAPR;AASA,SAAO,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAEK;AAApB,KAAsCN,cAAtC,CAAP;AACH,CAtCD;;AAwCA,SAASV,sBAAsB,IAAIiB,0BAAnC;AACA,eAAevB,UAAU,CAACM,sBAAD,CAAzB","sourcesContent":["/* @flow */\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport type { InjectIntlProvidedProps } from 'react-intl';\n\nimport Badgeable from '../../components/badgeable/Badgeable';\nimport Tooltip from '../../components/tooltip/Tooltip';\nimport Avatar from '../../components/avatar';\nimport IconExpirationBadge from '../../icons/general/IconExpirationBadge';\n\nimport messages from './messages';\n\ntype Props = {\n    allowBadging?: boolean,\n    avatarUrl: ?string,\n    expiration?: {\n        executeAt: string,\n    },\n    hasCustomAvatar: ?boolean,\n    id: number,\n    isExternalCollab?: boolean,\n    name: string,\n} & InjectIntlProvidedProps;\n\nconst CollaboratorAvatarItem = (props: Props) => {\n    const {\n        allowBadging = false,\n        expiration,\n        intl,\n        isExternalCollab = false,\n        hasCustomAvatar,\n        avatarUrl,\n        name,\n        ...rest\n    } = props;\n\n    const avatarInstance =\n        hasCustomAvatar && avatarUrl ? (\n            <Avatar\n                avatarUrl={avatarUrl}\n                name={name}\n                {...rest}\n                isExternal={isExternalCollab}\n                shouldShowExternal={allowBadging}\n            />\n        ) : (\n            <Avatar name={name || '-'} {...rest} isExternal={isExternalCollab} shouldShowExternal={allowBadging} />\n        );\n\n    const expirationTooltipMessage = intl.formatMessage(messages.expirationTooltipText, {\n        date: expiration?.executeAt,\n    });\n    const expirationBadge =\n        allowBadging && expiration && expiration.executeAt ? (\n            <Tooltip position=\"middle-right\" text={expirationTooltipMessage}>\n                <div aria-label={expirationTooltipMessage} role=\"img\">\n                    <IconExpirationBadge className=\"themed\" height={14} width={14} />\n                </div>\n            </Tooltip>\n        ) : null;\n\n    return <Badgeable topLeft={expirationBadge}>{avatarInstance}</Badgeable>;\n};\n\nexport { CollaboratorAvatarItem as CollaboratorAvatarItemBase };\nexport default injectIntl(CollaboratorAvatarItem);\n"],"file":"CollaboratorAvatarItem.js"}