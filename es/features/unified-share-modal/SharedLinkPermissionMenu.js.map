{"version":3,"sources":["../../../src/features/unified-share-modal/SharedLinkPermissionMenu.js"],"names":["React","Component","classNames","FormattedMessage","DropdownMenu","MenuToggle","LabelPill","PlainButton","Menu","SelectMenuItem","VIEW_SIZE_TYPE","withMediaQuery","CAN_EDIT","CAN_VIEW_DOWNLOAD","CAN_VIEW_ONLY","messages","SharedLinkPermissionMenu","newPermissionLevel","props","changePermissionLevel","permissionLevel","trackingProps","onChangeSharedLinkPermissionLevel","allowedPermissionLevels","isSharedLinkEditTooltipShown","sharedLinkEditTagTargetingApi","sharedLinkEditTooltipTargetingApi","size","submitting","sharedLinkPermissionsMenuButtonProps","canShowTag","canShow","canShowTooltip","permissionLevels","label","sharedLinkPermissionsEdit","sharedLinkPermissionsViewDownload","sharedLinkPermissionsViewOnly","isRightAligned","small","medium","includes","onComplete","onShow","map","level","onChangePermissionLevel","ftuxSharedLinkPermissionsEditTag","sharedLinkPermissionMenu","displayName","SharedLinkPermissionMenuBase"],"mappings":"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","sourcesContent":["// @flow\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\n\nimport DropdownMenu, { MenuToggle } from '../../components/dropdown-menu';\nimport LabelPill from '../../components/label-pill';\nimport PlainButton from '../../components/plain-button';\nimport { Menu, SelectMenuItem } from '../../components/menu';\nimport { VIEW_SIZE_TYPE } from '../../components/media-query/constants';\nimport withMediaQuery from '../../components/media-query/withMediaQuery';\nimport type { TargetingApi } from '../targeting/types';\n\nimport type { permissionLevelType } from './flowTypes';\nimport { CAN_EDIT, CAN_VIEW_DOWNLOAD, CAN_VIEW_ONLY } from './constants';\nimport messages from './messages';\n\nimport './SharedLinkPermissionMenu.scss';\n\ntype Props = {\n    allowedPermissionLevels: Array<permissionLevelType>,\n    canChangePermissionLevel: boolean,\n    changePermissionLevel: (\n        newPermissionLevel: permissionLevelType,\n    ) => Promise<{ permissionLevel: permissionLevelType }>,\n    isSharedLinkEditTooltipShown: boolean,\n    permissionLevel?: permissionLevelType,\n    sharedLinkEditTagTargetingApi?: TargetingApi,\n    sharedLinkEditTooltipTargetingApi?: TargetingApi,\n    size: string,\n    submitting: boolean,\n    trackingProps: {\n        onChangeSharedLinkPermissionLevel?: Function,\n        sharedLinkPermissionsMenuButtonProps?: Object,\n    },\n};\n\nclass SharedLinkPermissionMenu extends Component<Props> {\n    static defaultProps = {\n        trackingProps: {},\n    };\n\n    onChangePermissionLevel = (newPermissionLevel: permissionLevelType) => {\n        const { changePermissionLevel, permissionLevel, trackingProps } = this.props;\n        const { onChangeSharedLinkPermissionLevel } = trackingProps;\n\n        if (permissionLevel !== newPermissionLevel) {\n            changePermissionLevel(newPermissionLevel);\n\n            if (onChangeSharedLinkPermissionLevel) {\n                onChangeSharedLinkPermissionLevel(newPermissionLevel);\n            }\n        }\n    };\n\n    render() {\n        const {\n            allowedPermissionLevels,\n            isSharedLinkEditTooltipShown,\n            permissionLevel,\n            sharedLinkEditTagTargetingApi,\n            sharedLinkEditTooltipTargetingApi,\n            size,\n            submitting,\n            trackingProps,\n        } = this.props;\n        const { sharedLinkPermissionsMenuButtonProps } = trackingProps;\n        const canShowTag = sharedLinkEditTagTargetingApi ? sharedLinkEditTagTargetingApi.canShow : false;\n        const canShowTooltip = sharedLinkEditTooltipTargetingApi ? sharedLinkEditTooltipTargetingApi.canShow : false;\n\n        if (!permissionLevel) {\n            return null;\n        }\n\n        const permissionLevels = {\n            [CAN_EDIT]: {\n                label: <FormattedMessage {...messages.sharedLinkPermissionsEdit} />,\n            },\n            [CAN_VIEW_DOWNLOAD]: {\n                label: <FormattedMessage {...messages.sharedLinkPermissionsViewDownload} />,\n            },\n            [CAN_VIEW_ONLY]: {\n                label: <FormattedMessage {...messages.sharedLinkPermissionsViewOnly} />,\n            },\n        };\n\n        const isRightAligned = size === VIEW_SIZE_TYPE.small || size === VIEW_SIZE_TYPE.medium;\n\n        return (\n            <DropdownMenu\n                constrainToWindow\n                isRightAligned={isRightAligned}\n                onMenuClose={() => {\n                    if (allowedPermissionLevels.includes(CAN_EDIT) && canShowTag && sharedLinkEditTagTargetingApi) {\n                        sharedLinkEditTagTargetingApi.onComplete();\n                    }\n                }}\n                onMenuOpen={() => {\n                    if (allowedPermissionLevels.includes(CAN_EDIT) && canShowTag && sharedLinkEditTagTargetingApi) {\n                        sharedLinkEditTagTargetingApi.onShow();\n                    }\n\n                    // complete tooltip FTUX on opening of dropdown menu\n                    if (isSharedLinkEditTooltipShown && canShowTooltip && sharedLinkEditTooltipTargetingApi) {\n                        sharedLinkEditTooltipTargetingApi.onComplete();\n                    }\n                }}\n            >\n                <PlainButton\n                    className={classNames('lnk', {\n                        'is-disabled': submitting,\n                        'bdl-is-disabled': submitting,\n                    })}\n                    data-testid=\"usm-share-permissions-toggle\"\n                    disabled={submitting}\n                    type=\"button\"\n                    {...sharedLinkPermissionsMenuButtonProps}\n                >\n                    <MenuToggle>{permissionLevels[permissionLevel].label}</MenuToggle>\n                </PlainButton>\n                <Menu className=\"ums-share-permissions-menu\" data-testid=\"usm-share-permissions-menu\">\n                    {allowedPermissionLevels.map(level => (\n                        <SelectMenuItem\n                            key={level}\n                            isSelected={level === permissionLevel}\n                            onClick={() => this.onChangePermissionLevel(level)}\n                        >\n                            <div className=\"ums-share-permissions-menu-item\">\n                                <span>{permissionLevels[level].label}</span>\n                                {level === CAN_EDIT && canShowTag && (\n                                    <LabelPill.Pill className=\"ftux-editable-shared-link\" type=\"ftux\">\n                                        <LabelPill.Text>\n                                            <FormattedMessage {...messages.ftuxSharedLinkPermissionsEditTag} />\n                                        </LabelPill.Text>\n                                    </LabelPill.Pill>\n                                )}\n                            </div>\n                        </SelectMenuItem>\n                    ))}\n                </Menu>\n            </DropdownMenu>\n        );\n    }\n}\n\nconst sharedLinkPermissionMenu = withMediaQuery(SharedLinkPermissionMenu);\nsharedLinkPermissionMenu.displayName = 'SharedLinkPermissionMenu';\n\nexport { SharedLinkPermissionMenu as SharedLinkPermissionMenuBase };\nexport default sharedLinkPermissionMenu;\n"],"file":"SharedLinkPermissionMenu.js"}