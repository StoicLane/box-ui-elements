{"version":3,"sources":["../../../src/features/unified-share-modal/UnifiedShareForm.js"],"names":["React","isEmpty","isEqual","FormattedMessage","injectIntl","LoadingIndicatorWrapper","Link","Button","UpgradeBadge","InlineNotice","PlainButton","ITEM_TYPE_FILE","ITEM_TYPE_WEBLINK","Tooltip","CollaboratorAvatars","CollaboratorList","AdvancedContentInsightsToggle","InviteePermissionsMenu","messages","SharedLinkSection","EmailForm","getDefaultPermissionLevel","hasRestrictedContacts","mergeContacts","JUSTIFICATION_CHECKPOINT_EXTERNAL_COLLAB","SHARED_LINKS_COMMUNITY_URL","INVITE_COLLABS_CONTACTS_TYPE","EMAIL_SHARED_LINK_CONTACTS_TYPE","UnifiedShareForm","props","item","checkpoint","justificationReasons","state","getJustificationReasons","hasJustificationReasons","length","Promise","resolve","setState","isFetchingJustificationReasons","typedID","then","classificationLabelId","options","map","id","title","displayText","value","finally","inviteCollabsContacts","isCollabRestrictionJustificationAllowed","restrictedCollabEmails","restrictedGroups","hasRestrictedCollabs","pills","onPillCreate","event","target","handleFtuxCloseClick","onAddLink","openConfirmModal","shouldRenderFTUXTooltip","trackingProps","sharedLinkTracking","onToggleLink","type","checked","showCollaboratorList","data","inviteePermissions","sendInvites","inviteCollabsEmailTracking","onSendClick","inviteePermissionLevel","defaultPermissionLevel","selectedPermissionLevel","emails","groupIDs","justificationReason","message","restrictedEmails","params","join","emailMessage","permission","numsOfInvitees","numOfInviteeGroups","hasJustificationReason","hasRestrictedInvitees","shouldSubmitJustificationReason","sendSharedLink","sharedLink","sharedLinkEmailTracking","permissionLevel","numsOfRecipients","numOfRecipientGroups","inviteCollabTracking","onInviteePermissionChange","selectOptionPills","filter","pill","getContactsByEmail","contacts","prevState","emailSharedLinkContacts","isInviteSectionExpanded","onEnterInviteCollabs","isEmailLinkSectionExpanded","some","contact","isExternalUser","currentInviteCollabsContacts","newInviteCollabsContacts","hasRestrictedCollabsAfterUpdate","onRemoveAllRestrictedCollabs","setUpdatedContacts","isRemovingAllRestrictedCollabs","focusSharedLinkOnLoad","sharedLinkLoaded","createSharedLinkOnLoad","isNewSharedLink","initiallySelectedContacts","prevProps","prevRestrictedGroups","prevRestrictedCollabEmails","prevIsCollabRestrictionJustificationAllowed","didCollabRestrictionsChange","shouldRequireCollabJustification","fetchJustificationReasons","canInvite","collabRestrictionType","collaborationRestrictionWarning","config","contactLimit","getCollaboratorContacts","getContactAvatarUrl","recommendedSharingTooltipCalloutName","sendInvitesError","showEnterEmailsCallout","showCalloutForUser","showUpgradeInlineNotice","showUpgradeOptions","submitting","suggestedCollaborators","modalTracking","contactsFieldDisabledTooltip","inviteDisabledWeblinkTooltip","inviteDisabledTooltip","inlineNotice","content","avatars","renderCollaboratorAvatars","ftuxConfirmButtonProps","ftuxTooltipText","ftuxNewUSMUserTitle","ftuxNewUSMUserBody","ftuxLinkText","ftuxConfirmLabel","ftuxTooltipProps","className","isShown","position","showCloseButton","text","theme","inviteFieldLabel","hasExternalContact","openInviteCollaborators","handleInviteCollabPillCreate","closeInviteCollaborators","handleSendInvites","openInviteCollaboratorsSection","updateInviteCollabsContacts","renderInviteePermissionsDropdown","renderUpgradeLinkDescription","collaboratorsList","currentUserID","avatarsContent","collaborators","hideCollaborators","canShowCollaboratorAvatars","collaborator","String","userID","collaboratorAvatarsProps","resinTarget","openUpgradePlanModal","collaboratorAccess","collabAccess","upgradeLink","setLevelOfCollabAccess","upgradeLinkProps","upgradeGetMoreAccessControlsLink","upgradeGetMoreAccessControlsDescription","upgradeInlineNoticeTitle","renderCollaboratorMessage","inviteePermissionsButtonProps","handleInviteePermissionChange","name","collaboratorListTracking","listContent","closeCollaboratorList","allShareRestrictionWarning","changeSharedLinkAccessLevel","changeSharedLinkPermissionLevel","displayInModal","getSharedLinkContacts","intl","isAdvancedContentInsightsChecked","isAllowEditSharedLinkForFileEnabled","isFetching","onAdvancedContentInsightsToggle","onCopyError","onCopyInit","onCopySuccess","onDismissTooltip","onSettingsClick","sendSharedLinkError","sharedLinkEditTagTargetingApi","sharedLinkEditTooltipTargetingApi","showSharedLinkSettingsCallout","tooltips","hasExpandedSections","showContentInsightsToggle","renderUpgradeInlineNotice","renderInviteSection","shouldAutoFocusSharedLink","openEmailSharedLinkForm","onToggleSharedLink","sendSharedLinkFieldLabel","handleEmailSharedLinkPillCreate","closeEmailSharedLinkForm","handleSendSharedLink","updateEmailSharedLinkContacts","renderCollaboratorList","Component","retrictedGroups","removeLinkConfirmModalTracking","UnifiedShareFormBase"],"mappings":"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","sourcesContent":["// @flow\n\nimport * as React from 'react';\nimport isEmpty from 'lodash/isEmpty';\nimport isEqual from 'lodash/isEqual';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport LoadingIndicatorWrapper from '../../components/loading-indicator/LoadingIndicatorWrapper';\nimport { Link } from '../../components/link';\nimport Button from '../../components/button';\nimport { UpgradeBadge } from '../../components/badge';\nimport InlineNotice from '../../components/inline-notice';\nimport PlainButton from '../../components/plain-button';\nimport { ITEM_TYPE_FILE, ITEM_TYPE_WEBLINK } from '../../common/constants';\nimport Tooltip from '../../components/tooltip';\nimport { CollaboratorAvatars, CollaboratorList } from '../collaborator-avatars';\n\nimport AdvancedContentInsightsToggle from '../advanced-content-insights/AdvancedContentInsightsToggle';\nimport InviteePermissionsMenu from './InviteePermissionsMenu';\nimport messages from './messages';\nimport SharedLinkSection from './SharedLinkSection';\nimport EmailForm from './EmailForm';\nimport getDefaultPermissionLevel from './utils/defaultPermissionLevel';\nimport hasRestrictedContacts from './utils/hasRestrictedContacts';\nimport mergeContacts from './utils/mergeContacts';\nimport { JUSTIFICATION_CHECKPOINT_EXTERNAL_COLLAB } from './constants';\n\nimport type {\n    contactType as Contact,\n    getJustificationReasonsResponseType as GetJustificationReasonsResponse,\n    item as Item,\n    justificationCheckpointType as JustificationCheckpoint,\n    USFProps,\n} from './flowTypes';\nimport type { SelectOptionProp } from '../../components/select-field/props';\n\nconst SHARED_LINKS_COMMUNITY_URL = 'https://community.box.com/t5/Using-Shared-Links/Creating-Shared-Links/ta-p/19523';\nconst INVITE_COLLABS_CONTACTS_TYPE = 'inviteCollabsContacts';\nconst EMAIL_SHARED_LINK_CONTACTS_TYPE = 'emailSharedLinkContacts';\n\ntype State = {\n    classificationLabelId: string,\n    emailSharedLinkContacts: Array<Contact>,\n    inviteCollabsContacts: Array<Contact>,\n    inviteePermissionLevel: string,\n    isEmailLinkSectionExpanded: boolean,\n    isFetchingJustificationReasons: boolean,\n    isInviteSectionExpanded: boolean,\n    justificationReasons: Array<SelectOptionProp>,\n    showCollaboratorList: boolean,\n};\n\nclass UnifiedShareForm extends React.Component<USFProps, State> {\n    static defaultProps = {\n        displayInModal: true,\n        initiallySelectedContacts: [],\n        createSharedLinkOnLoad: false,\n        focusSharedLinkOnLoad: false,\n        restrictedCollabEmails: [],\n        retrictedGroups: [],\n        trackingProps: {\n            collaboratorListTracking: {},\n            inviteCollabsEmailTracking: {},\n            inviteCollabTracking: {},\n            modalTracking: {},\n            removeLinkConfirmModalTracking: {},\n            sharedLinkEmailTracking: {},\n            sharedLinkTracking: {},\n        },\n    };\n\n    constructor(props: USFProps) {\n        super(props);\n\n        this.state = {\n            classificationLabelId: '',\n            emailSharedLinkContacts: [],\n            inviteCollabsContacts: props.initiallySelectedContacts,\n            inviteePermissionLevel: '',\n            isEmailLinkSectionExpanded: false,\n            isFetchingJustificationReasons: false,\n            isInviteSectionExpanded: !!props.initiallySelectedContacts.length,\n            justificationReasons: [],\n            showCollaboratorList: false,\n        };\n    }\n\n    componentDidUpdate(prevProps: USFProps) {\n        const { isCollabRestrictionJustificationAllowed, item, restrictedCollabEmails, restrictedGroups } = this.props;\n        const {\n            restrictedGroups: prevRestrictedGroups,\n            restrictedCollabEmails: prevRestrictedCollabEmails,\n            isCollabRestrictionJustificationAllowed: prevIsCollabRestrictionJustificationAllowed,\n        } = prevProps;\n\n        const didCollabRestrictionsChange =\n            !isEqual(restrictedGroups, prevRestrictedGroups) ||\n            !isEqual(restrictedCollabEmails, prevRestrictedCollabEmails) ||\n            isCollabRestrictionJustificationAllowed !== prevIsCollabRestrictionJustificationAllowed;\n\n        if (didCollabRestrictionsChange && this.shouldRequireCollabJustification()) {\n            this.fetchJustificationReasons(item, JUSTIFICATION_CHECKPOINT_EXTERNAL_COLLAB);\n        }\n    }\n\n    fetchJustificationReasons = (item: Item, checkpoint: JustificationCheckpoint) => {\n        const { justificationReasons } = this.state;\n        const { getJustificationReasons } = this.props;\n        const hasJustificationReasons = !!justificationReasons.length;\n\n        if (!getJustificationReasons || hasJustificationReasons) {\n            return Promise.resolve();\n        }\n        this.setState({ isFetchingJustificationReasons: true });\n\n        return getJustificationReasons(item.typedID, checkpoint)\n            .then(({ classificationLabelId, options = [] }: GetJustificationReasonsResponse) => {\n                this.setState({\n                    classificationLabelId,\n                    justificationReasons: options.map(({ id, title }) => ({\n                        displayText: title,\n                        value: id,\n                    })),\n                });\n            })\n            .finally(() => {\n                this.setState({ isFetchingJustificationReasons: false });\n            });\n    };\n\n    shouldRequireCollabJustification = () => {\n        const { inviteCollabsContacts } = this.state;\n        const { isCollabRestrictionJustificationAllowed, restrictedCollabEmails, restrictedGroups } = this.props;\n\n        const hasRestrictedCollabs = hasRestrictedContacts(\n            inviteCollabsContacts,\n            restrictedCollabEmails,\n            restrictedGroups,\n        );\n        return hasRestrictedCollabs && isCollabRestrictionJustificationAllowed;\n    };\n\n    handleInviteCollabPillCreate = (pills: Array<SelectOptionProp | Contact>) => {\n        return this.onPillCreate(INVITE_COLLABS_CONTACTS_TYPE, pills);\n    };\n\n    handleEmailSharedLinkPillCreate = (pills: Array<SelectOptionProp | Contact>) => {\n        return this.onPillCreate(EMAIL_SHARED_LINK_CONTACTS_TYPE, pills);\n    };\n\n    onToggleSharedLink = (event: SyntheticInputEvent<HTMLInputElement>) => {\n        const { target } = event;\n        const {\n            handleFtuxCloseClick,\n            onAddLink,\n            openConfirmModal,\n            shouldRenderFTUXTooltip,\n            trackingProps,\n        } = this.props;\n        const { sharedLinkTracking } = trackingProps;\n        const { onToggleLink } = sharedLinkTracking;\n\n        if (shouldRenderFTUXTooltip) {\n            handleFtuxCloseClick();\n        }\n\n        if (target.type === 'checkbox') {\n            if (target.checked === false) {\n                openConfirmModal();\n            } else {\n                onAddLink();\n            }\n\n            if (onToggleLink) {\n                onToggleLink(target.checked);\n            }\n        }\n    };\n\n    showCollaboratorList = () => {\n        this.setState({ showCollaboratorList: true });\n    };\n\n    closeCollaboratorList = () => {\n        this.setState({ showCollaboratorList: false });\n    };\n\n    handleSendInvites = (data: Object) => {\n        const { inviteePermissions, isCollabRestrictionJustificationAllowed, sendInvites, trackingProps } = this.props;\n        const { inviteCollabsEmailTracking } = trackingProps;\n        const { onSendClick } = inviteCollabsEmailTracking;\n        const { classificationLabelId, inviteePermissionLevel } = this.state;\n        const defaultPermissionLevel = getDefaultPermissionLevel(inviteePermissions);\n        const selectedPermissionLevel = inviteePermissionLevel || defaultPermissionLevel;\n        const { emails, groupIDs, justificationReason, message, restrictedEmails, restrictedGroups } = data;\n\n        let params = {\n            emails: emails.join(','),\n            groupIDs: groupIDs.join(','),\n            emailMessage: message,\n            permission: selectedPermissionLevel,\n            numsOfInvitees: emails.length,\n            numOfInviteeGroups: groupIDs.length,\n        };\n\n        const hasJustificationReason = !!justificationReason;\n        const hasRestrictedInvitees = !isEmpty(restrictedEmails) || !isEmpty(restrictedGroups);\n        const shouldSubmitJustificationReason =\n            hasJustificationReason && hasRestrictedInvitees && isCollabRestrictionJustificationAllowed;\n\n        if (shouldSubmitJustificationReason) {\n            params = {\n                ...params,\n                classificationLabelId,\n                justificationReason: {\n                    id: justificationReason.value,\n                    title: justificationReason.displayText,\n                },\n            };\n        }\n\n        if (onSendClick) {\n            onSendClick(params);\n        }\n\n        return sendInvites(params);\n    };\n\n    handleSendSharedLink = (data: Object) => {\n        const { sendSharedLink, sharedLink, trackingProps } = this.props;\n        const { sharedLinkEmailTracking } = trackingProps;\n        const { permissionLevel } = sharedLink;\n        const { onSendClick } = sharedLinkEmailTracking;\n\n        const { emails, groupIDs } = data;\n\n        if (onSendClick) {\n            const params = {\n                ...data,\n                numsOfRecipients: emails.length,\n                numOfRecipientGroups: groupIDs.length,\n                permissionLevel,\n            };\n            onSendClick(params);\n        }\n\n        return sendSharedLink(data);\n    };\n\n    // TODO-AH: Change permission level to use the appropriate flow type\n    handleInviteePermissionChange = (permissionLevel: string) => {\n        const { trackingProps } = this.props;\n        const { inviteCollabTracking } = trackingProps;\n        const { onInviteePermissionChange } = inviteCollabTracking;\n\n        this.setState({ inviteePermissionLevel: permissionLevel });\n\n        if (onInviteePermissionChange) {\n            onInviteePermissionChange(permissionLevel);\n        }\n    };\n\n    onPillCreate = (type: string, pills: Array<SelectOptionProp | Contact>) => {\n        // If this is a dropdown select event, we ignore it\n        // $FlowFixMe\n        const selectOptionPills = pills.filter(pill => !pill.id);\n        if (selectOptionPills.length === 0) {\n            return;\n        }\n\n        const { getContactsByEmail } = this.props;\n\n        if (getContactsByEmail) {\n            const emails = pills.map(pill => pill.value);\n            // $FlowFixMe\n            getContactsByEmail({ emails }).then((contacts: Object) => {\n                if (type === INVITE_COLLABS_CONTACTS_TYPE) {\n                    this.setState(prevState => ({\n                        inviteCollabsContacts: mergeContacts(prevState.inviteCollabsContacts, contacts),\n                    }));\n                } else if (type === EMAIL_SHARED_LINK_CONTACTS_TYPE) {\n                    this.setState(prevState => ({\n                        emailSharedLinkContacts: mergeContacts(prevState.emailSharedLinkContacts, contacts),\n                    }));\n                }\n            });\n        }\n    };\n\n    openInviteCollaborators = (value: string) => {\n        const { handleFtuxCloseClick } = this.props;\n        if (this.state.isInviteSectionExpanded) {\n            return;\n        }\n\n        // checking the value because IE seems to trigger onInput immediately\n        // on focus of the contacts field\n        if (value !== '') {\n            handleFtuxCloseClick();\n            this.setState(\n                {\n                    isInviteSectionExpanded: true,\n                },\n                () => {\n                    const {\n                        trackingProps: {\n                            inviteCollabTracking: { onEnterInviteCollabs },\n                        },\n                    } = this.props;\n\n                    if (onEnterInviteCollabs) {\n                        onEnterInviteCollabs();\n                    }\n                },\n            );\n        }\n    };\n\n    openInviteCollaboratorsSection = () => {\n        this.setState({\n            isInviteSectionExpanded: true,\n        });\n    };\n\n    closeInviteCollaborators = () => {\n        this.setState({\n            isInviteSectionExpanded: false,\n        });\n    };\n\n    openEmailSharedLinkForm = () => {\n        const { handleFtuxCloseClick } = this.props;\n        handleFtuxCloseClick();\n        this.setState({\n            isEmailLinkSectionExpanded: true,\n        });\n    };\n\n    closeEmailSharedLinkForm = () => {\n        this.setState({ isEmailLinkSectionExpanded: false });\n    };\n\n    hasExternalContact = (type: string): boolean => {\n        const { inviteCollabsContacts, emailSharedLinkContacts } = this.state;\n        if (type === INVITE_COLLABS_CONTACTS_TYPE) {\n            return inviteCollabsContacts.some(contact => contact.isExternalUser);\n        }\n        if (type === EMAIL_SHARED_LINK_CONTACTS_TYPE) {\n            return emailSharedLinkContacts.some(contact => contact.isExternalUser);\n        }\n        return false;\n    };\n\n    isRemovingAllRestrictedCollabs = (\n        currentInviteCollabsContacts: Array<Contact>,\n        newInviteCollabsContacts: Array<Contact>,\n    ) => {\n        const { restrictedCollabEmails, restrictedGroups } = this.props;\n\n        const hasRestrictedCollabs = hasRestrictedContacts(\n            currentInviteCollabsContacts,\n            restrictedCollabEmails,\n            restrictedGroups,\n        );\n        const hasRestrictedCollabsAfterUpdate = hasRestrictedContacts(\n            newInviteCollabsContacts,\n            restrictedCollabEmails,\n            restrictedGroups,\n        );\n\n        return hasRestrictedCollabs && !hasRestrictedCollabsAfterUpdate;\n    };\n\n    updateInviteCollabsContacts = (inviteCollabsContacts: Array<Contact>) => {\n        const { inviteCollabsContacts: currentInviteCollabsContacts } = this.state;\n        const { onRemoveAllRestrictedCollabs, setUpdatedContacts } = this.props;\n\n        const isRemovingAllRestrictedCollabs = this.isRemovingAllRestrictedCollabs(\n            currentInviteCollabsContacts,\n            inviteCollabsContacts,\n        );\n\n        this.setState({\n            inviteCollabsContacts,\n        });\n\n        if (setUpdatedContacts) {\n            setUpdatedContacts(inviteCollabsContacts);\n        }\n        if (onRemoveAllRestrictedCollabs && isRemovingAllRestrictedCollabs) {\n            onRemoveAllRestrictedCollabs();\n        }\n    };\n\n    updateEmailSharedLinkContacts = (emailSharedLinkContacts: Array<Contact>) => {\n        this.setState({\n            emailSharedLinkContacts,\n        });\n    };\n\n    shouldAutoFocusSharedLink = () => {\n        const { focusSharedLinkOnLoad, sharedLink, sharedLinkLoaded, createSharedLinkOnLoad } = this.props;\n\n        if (!createSharedLinkOnLoad && !focusSharedLinkOnLoad) {\n            return false;\n        }\n        // if not forcing focus or not a newly added shared link, return false\n        if (!(focusSharedLinkOnLoad || sharedLink.isNewSharedLink)) {\n            return false;\n        }\n        // otherwise wait until the link data is loaded before focusing\n        if (!sharedLinkLoaded) {\n            return false;\n        }\n        return true;\n    };\n\n    renderInviteSection() {\n        const {\n            canInvite,\n            collabRestrictionType,\n            collaborationRestrictionWarning,\n            config,\n            contactLimit,\n            getCollaboratorContacts,\n            getContactAvatarUrl,\n            handleFtuxCloseClick,\n            item,\n            recommendedSharingTooltipCalloutName = null,\n            restrictedCollabEmails,\n            restrictedGroups,\n            sendInvitesError,\n            shouldRenderFTUXTooltip,\n            showEnterEmailsCallout = false,\n            showCalloutForUser = false,\n            showUpgradeInlineNotice = false,\n            showUpgradeOptions,\n            submitting,\n            suggestedCollaborators,\n            trackingProps,\n        } = this.props;\n        const { type } = item;\n        const { isFetchingJustificationReasons, isInviteSectionExpanded, justificationReasons } = this.state;\n        const { inviteCollabsEmailTracking, modalTracking } = trackingProps;\n        const contactsFieldDisabledTooltip =\n            type === ITEM_TYPE_WEBLINK ? (\n                <FormattedMessage {...messages.inviteDisabledWeblinkTooltip} />\n            ) : (\n                <FormattedMessage {...messages.inviteDisabledTooltip} />\n            );\n        const inlineNotice = sendInvitesError\n            ? {\n                  type: 'error',\n                  content: sendInvitesError,\n              }\n            : {\n                  type: 'warning',\n                  content: collaborationRestrictionWarning,\n              };\n        const avatars = this.renderCollaboratorAvatars();\n        const { ftuxConfirmButtonProps } = modalTracking;\n        const ftuxTooltipText = (\n            <div>\n                <h4 className=\"ftux-tooltip-title\">\n                    <FormattedMessage {...messages.ftuxNewUSMUserTitle} />\n                </h4>\n                <p className=\"ftux-tooltip-body\">\n                    <FormattedMessage {...messages.ftuxNewUSMUserBody} />{' '}\n                    <Link className=\"ftux-tooltip-link\" href={SHARED_LINKS_COMMUNITY_URL} target=\"_blank\">\n                        <FormattedMessage {...messages.ftuxLinkText} />\n                    </Link>\n                </p>\n                <div className=\"ftux-tooltip-controls\">\n                    <Button className=\"ftux-tooltip-button\" onClick={handleFtuxCloseClick} {...ftuxConfirmButtonProps}>\n                        <FormattedMessage {...messages.ftuxConfirmLabel} />\n                    </Button>\n                </div>\n            </div>\n        );\n        const ftuxTooltipProps = {\n            className: 'usm-ftux-tooltip',\n            // don't want ftux tooltip to show if the recommended sharing tooltip callout is showing\n            isShown: !recommendedSharingTooltipCalloutName && shouldRenderFTUXTooltip && showCalloutForUser,\n            position: 'middle-left',\n            showCloseButton: true,\n            text: ftuxTooltipText,\n            theme: 'callout',\n        };\n\n        return (\n            <>\n                <Tooltip {...ftuxTooltipProps}>\n                    <div className=\"invite-collaborator-container\" data-testid=\"invite-collaborator-container\">\n                        <EmailForm\n                            config={config}\n                            contactLimit={contactLimit}\n                            collabRestrictionType={collabRestrictionType}\n                            contactsFieldAvatars={avatars}\n                            contactsFieldDisabledTooltip={contactsFieldDisabledTooltip}\n                            contactsFieldLabel={<FormattedMessage {...messages.inviteFieldLabel} />}\n                            getContacts={getCollaboratorContacts}\n                            getContactAvatarUrl={getContactAvatarUrl}\n                            inlineNotice={inlineNotice}\n                            isContactsFieldEnabled={canInvite}\n                            isExpanded={isInviteSectionExpanded}\n                            isFetchingJustificationReasons={isFetchingJustificationReasons}\n                            isExternalUserSelected={this.hasExternalContact(INVITE_COLLABS_CONTACTS_TYPE)}\n                            isRestrictionJustificationEnabled={this.shouldRequireCollabJustification()}\n                            justificationReasons={justificationReasons}\n                            onContactInput={this.openInviteCollaborators}\n                            onPillCreate={this.handleInviteCollabPillCreate}\n                            onRequestClose={this.closeInviteCollaborators}\n                            onSubmit={this.handleSendInvites}\n                            openInviteCollaboratorsSection={this.openInviteCollaboratorsSection}\n                            recommendedSharingTooltipCalloutName={recommendedSharingTooltipCalloutName}\n                            restrictedEmails={restrictedCollabEmails}\n                            restrictedGroups={restrictedGroups}\n                            showEnterEmailsCallout={showEnterEmailsCallout}\n                            submitting={submitting}\n                            selectedContacts={this.state.inviteCollabsContacts}\n                            suggestedCollaborators={suggestedCollaborators}\n                            updateSelectedContacts={this.updateInviteCollabsContacts}\n                            {...inviteCollabsEmailTracking}\n                        >\n                            {this.renderInviteePermissionsDropdown()}\n                            {showUpgradeOptions && !showUpgradeInlineNotice && this.renderUpgradeLinkDescription()}\n                        </EmailForm>\n                    </div>\n                </Tooltip>\n            </>\n        );\n    }\n\n    renderCollaboratorAvatars() {\n        const { collaboratorsList, canInvite, currentUserID, item, trackingProps } = this.props;\n        const { modalTracking } = trackingProps;\n        let avatarsContent = null;\n\n        if (collaboratorsList) {\n            const { collaborators } = collaboratorsList;\n            const { hideCollaborators = true } = item;\n            const canShowCollaboratorAvatars = hideCollaborators ? canInvite : true;\n\n            // filter out the current user by comparing to the ItemCollabRecord ID field\n            avatarsContent = canShowCollaboratorAvatars && (\n                <CollaboratorAvatars\n                    collaborators={collaborators.filter(collaborator => String(collaborator.userID) !== currentUserID)}\n                    onClick={this.showCollaboratorList}\n                    containerAttributes={modalTracking.collaboratorAvatarsProps}\n                />\n            );\n        }\n\n        return avatarsContent;\n    }\n\n    renderCollaboratorMessage(resinTarget: string) {\n        const { openUpgradePlanModal = () => {} } = this.props;\n        return (\n            <>\n                <FormattedMessage\n                    values={{\n                        collaboratorAccess: (\n                            <Link\n                                className=\"upgrade-link\"\n                                href=\"https://support.box.com/hc/en-us/articles/360044196413-Understanding-Collaborator-Permission-Levels\"\n                                target=\"_blank\"\n                            >\n                                <FormattedMessage {...messages.collabAccess} />\n                            </Link>\n                        ),\n                        upgradeLink: (\n                            <PlainButton\n                                className=\"upgrade-link\"\n                                data-resin-target={resinTarget}\n                                onClick={openUpgradePlanModal}\n                                type=\"button\"\n                            >\n                                <FormattedMessage {...messages.upgradeLink} />\n                            </PlainButton>\n                        ),\n                    }}\n                    {...messages.setLevelOfCollabAccess}\n                />\n            </>\n        );\n    }\n\n    renderUpgradeLinkDescription() {\n        const { openUpgradePlanModal = () => {}, trackingProps = {} } = this.props;\n        const { inviteCollabsEmailTracking = {} } = trackingProps;\n        const { upgradeLinkProps = {} } = inviteCollabsEmailTracking;\n\n        return (\n            <div className=\"upgrade-description\">\n                <UpgradeBadge />\n                <FormattedMessage\n                    values={{\n                        upgradeGetMoreAccessControlsLink: (\n                            <PlainButton\n                                className=\"upgrade-link\"\n                                onClick={openUpgradePlanModal}\n                                type=\"button\"\n                                {...upgradeLinkProps}\n                            >\n                                <FormattedMessage {...messages.upgradeGetMoreAccessControlsLink} />\n                            </PlainButton>\n                        ),\n                    }}\n                    {...messages.upgradeGetMoreAccessControlsDescription}\n                />\n            </div>\n        );\n    }\n\n    renderUpgradeInlineNotice() {\n        return (\n            <InlineNotice title={<FormattedMessage {...messages.upgradeInlineNoticeTitle} />} type=\"info\">\n                {this.renderCollaboratorMessage('external_collab_top_message_upgrade_cta')}\n            </InlineNotice>\n        );\n    }\n\n    renderInviteePermissionsDropdown() {\n        const { inviteePermissions, item, submitting, canInvite, trackingProps } = this.props;\n        const { type } = item;\n        const { inviteCollabTracking } = trackingProps;\n\n        return (\n            inviteePermissions && (\n                <InviteePermissionsMenu\n                    disabled={!canInvite || submitting}\n                    inviteePermissionsButtonProps={inviteCollabTracking.inviteePermissionsButtonProps}\n                    inviteePermissionLevel={this.state.inviteePermissionLevel}\n                    inviteePermissions={inviteePermissions}\n                    changeInviteePermissionLevel={this.handleInviteePermissionChange}\n                    itemType={type}\n                />\n            )\n        );\n    }\n\n    renderCollaboratorList() {\n        const { item, collaboratorsList, trackingProps } = this.props;\n        const { name, type } = item;\n        const { collaboratorListTracking } = trackingProps;\n        let listContent = null;\n\n        if (collaboratorsList) {\n            const { collaborators } = collaboratorsList;\n\n            listContent = (\n                <CollaboratorList\n                    itemName={name}\n                    itemType={type}\n                    onDoneClick={this.closeCollaboratorList}\n                    item={item}\n                    collaborators={collaborators}\n                    trackingProps={collaboratorListTracking}\n                />\n            );\n        }\n\n        return listContent;\n    }\n\n    render() {\n        // Shared link section props\n        const {\n            allShareRestrictionWarning,\n            changeSharedLinkAccessLevel,\n            changeSharedLinkPermissionLevel,\n            config,\n            createSharedLinkOnLoad,\n            displayInModal,\n            focusSharedLinkOnLoad,\n            getSharedLinkContacts,\n            getContactAvatarUrl,\n            intl,\n            isAdvancedContentInsightsChecked,\n            isAllowEditSharedLinkForFileEnabled,\n            isFetching,\n            item,\n            onAddLink,\n            onAdvancedContentInsightsToggle,\n            onCopyError,\n            onCopyInit,\n            onCopySuccess,\n            onDismissTooltip = () => {},\n            onSettingsClick,\n            sendSharedLinkError,\n            sharedLink,\n            sharedLinkEditTagTargetingApi,\n            sharedLinkEditTooltipTargetingApi,\n            showEnterEmailsCallout = false,\n            showSharedLinkSettingsCallout = false,\n            showUpgradeInlineNotice = false,\n            showUpgradeOptions,\n            submitting,\n            tooltips = {},\n            trackingProps,\n        } = this.props;\n        const { sharedLinkTracking, sharedLinkEmailTracking } = trackingProps;\n        const { isEmailLinkSectionExpanded, isInviteSectionExpanded, showCollaboratorList } = this.state;\n\n        const hasExpandedSections = isEmailLinkSectionExpanded || isInviteSectionExpanded || showCollaboratorList;\n\n        const showContentInsightsToggle =\n            onAdvancedContentInsightsToggle && !hasExpandedSections && item?.type === ITEM_TYPE_FILE;\n\n        return (\n            <div className={displayInModal ? '' : 'be bdl-UnifiedShareForm'}>\n                <LoadingIndicatorWrapper isLoading={isFetching} hideContent>\n                    {!hasExpandedSections && allShareRestrictionWarning}\n                    {showUpgradeOptions && showUpgradeInlineNotice && this.renderUpgradeInlineNotice()}\n\n                    {!isEmailLinkSectionExpanded && !showCollaboratorList && this.renderInviteSection()}\n\n                    {!hasExpandedSections && (\n                        <SharedLinkSection\n                            addSharedLink={onAddLink}\n                            autofocusSharedLink={this.shouldAutoFocusSharedLink()}\n                            autoCreateSharedLink={createSharedLinkOnLoad}\n                            config={config}\n                            triggerCopyOnLoad={createSharedLinkOnLoad && focusSharedLinkOnLoad}\n                            changeSharedLinkAccessLevel={changeSharedLinkAccessLevel}\n                            changeSharedLinkPermissionLevel={changeSharedLinkPermissionLevel}\n                            intl={intl}\n                            isAllowEditSharedLinkForFileEnabled={isAllowEditSharedLinkForFileEnabled}\n                            item={item}\n                            itemType={item.type}\n                            onDismissTooltip={onDismissTooltip}\n                            onEmailSharedLinkClick={this.openEmailSharedLinkForm}\n                            onSettingsClick={onSettingsClick}\n                            onToggleSharedLink={this.onToggleSharedLink}\n                            onCopyInit={onCopyInit}\n                            onCopySuccess={onCopySuccess}\n                            onCopyError={onCopyError}\n                            sharedLink={sharedLink}\n                            sharedLinkEditTagTargetingApi={sharedLinkEditTagTargetingApi}\n                            sharedLinkEditTooltipTargetingApi={sharedLinkEditTooltipTargetingApi}\n                            showSharedLinkSettingsCallout={showSharedLinkSettingsCallout}\n                            submitting={submitting || isFetching}\n                            trackingProps={sharedLinkTracking}\n                            tooltips={tooltips}\n                        />\n                    )}\n\n                    {showContentInsightsToggle && (\n                        <>\n                            <hr className=\"bdl-UnifiedShareForm-separator\" />\n                            <div className=\"bdl-UnifiedShareForm-row\">\n                                <AdvancedContentInsightsToggle\n                                    isChecked={isAdvancedContentInsightsChecked}\n                                    isDisabled={submitting || isFetching}\n                                    onChange={onAdvancedContentInsightsToggle}\n                                />\n                            </div>\n                        </>\n                    )}\n\n                    {isEmailLinkSectionExpanded && !showCollaboratorList && (\n                        <EmailForm\n                            contactsFieldLabel={<FormattedMessage {...messages.sendSharedLinkFieldLabel} />}\n                            getContactAvatarUrl={getContactAvatarUrl}\n                            getContacts={getSharedLinkContacts}\n                            inlineNotice={{\n                                type: 'error',\n                                content: sendSharedLinkError,\n                            }}\n                            isContactsFieldEnabled\n                            isExpanded\n                            isExternalUserSelected={this.hasExternalContact(EMAIL_SHARED_LINK_CONTACTS_TYPE)}\n                            onPillCreate={this.handleEmailSharedLinkPillCreate}\n                            onRequestClose={this.closeEmailSharedLinkForm}\n                            onSubmit={this.handleSendSharedLink}\n                            showEnterEmailsCallout={showEnterEmailsCallout}\n                            submitting={submitting}\n                            selectedContacts={this.state.emailSharedLinkContacts}\n                            updateSelectedContacts={this.updateEmailSharedLinkContacts}\n                            {...sharedLinkEmailTracking}\n                        />\n                    )}\n                    {showCollaboratorList && this.renderCollaboratorList()}\n                </LoadingIndicatorWrapper>\n            </div>\n        );\n    }\n}\n\nexport { UnifiedShareForm as UnifiedShareFormBase };\nexport default injectIntl(UnifiedShareForm);\n"],"file":"UnifiedShareForm.js"}