{"version":3,"sources":["../../../src/features/presence/PresenceCollaborator.js"],"names":["React","isEmpty","PropTypes","FormattedMessage","injectIntl","Avatar","Link","messages","PresenceAvatar","determineInteractionMessage","renderTimestampMessage","interactedAt","interactionType","intl","lastActionMessage","timeAgo","formatRelativeTime","Date","now","formatRelative","PresenceCollaborator","collaborator","isAnonymous","props","avatarUrl","id","isActive","name","profileUrl","activeNowText","propTypes","shape","string","oneOfType","number","bool","isRequired","any","PresenceCollaboratorComponent"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport isEmpty from 'lodash/isEmpty';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport Avatar from '../../components/avatar';\nimport Link from '../../components/link/LinkBase';\nimport messages from './messages';\nimport PresenceAvatar from './PresenceAvatar';\nimport { determineInteractionMessage } from './utils/presenceUtils';\n\nimport './PresenceCollaborator.scss';\n\nexport const renderTimestampMessage = (interactedAt, interactionType, intl) => {\n    const lastActionMessage = determineInteractionMessage(interactionType, interactedAt);\n    const timeAgo = intl.formatRelativeTime\n        ? intl.formatRelativeTime(interactedAt - Date.now())\n        : intl.formatRelative(interactedAt);\n\n    if (lastActionMessage) {\n        return (\n            <FormattedMessage\n                {...lastActionMessage}\n                values={{\n                    timeAgo,\n                }}\n            />\n        );\n    }\n    return null;\n};\n\nconst PresenceCollaborator = ({ collaborator, isAnonymous = false, intl, ...props }) => {\n    const { avatarUrl, id, interactedAt, interactionType, isActive, name, profileUrl } = collaborator;\n\n    return (\n        <div className=\"bdl-PresenceCollaborator\" {...props}>\n            {isAnonymous ? (\n                <Avatar />\n            ) : (\n                <PresenceAvatar avatarUrl={avatarUrl} id={id} isActive={isActive} isDropDownAvatar name={name} />\n            )}\n            <div className=\"bdl-PresenceCollaborator-info-container\">\n                <div className=\"bdl-PresenceCollaborator-info-name\" title={name}>\n                    {isEmpty(profileUrl) ? (\n                        <span>{name}</span>\n                    ) : (\n                        <Link href={profileUrl} target=\"_blank\">\n                            {name}\n                        </Link>\n                    )}\n                </div>\n                <div className=\"bdl-PresenceCollaborator-info-time\">\n                    {isActive ? (\n                        <FormattedMessage {...messages.activeNowText} />\n                    ) : (\n                        renderTimestampMessage(interactedAt, interactionType, intl)\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nPresenceCollaborator.propTypes = {\n    collaborator: PropTypes.shape({\n        /** Url to avatar image. If passed in, component will render the avatar image instead of the initials */\n        avatarUrl: PropTypes.string,\n        /** Users id */\n        id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        isActive: PropTypes.bool,\n        /** Unix timestamp of when the user last interacted with the document */\n        interactedAt: PropTypes.number,\n        /** The type of interaction by the user */\n        interactionType: PropTypes.string,\n        /** User's full name */\n        name: PropTypes.string.isRequired,\n        /** Custom Profile URL */\n        profileUrl: PropTypes.string,\n    }).isRequired,\n    isAnonymous: PropTypes.bool,\n    /* Intl object */\n    intl: PropTypes.any,\n};\n\nexport { PresenceCollaborator as PresenceCollaboratorComponent };\nexport default injectIntl(PresenceCollaborator);\n"],"file":"PresenceCollaborator.js"}