{"version":3,"sources":["../../src/api/utils.js"],"names":["formatComment","comment","formattedComment","tagged_message","message","replies","length","map"],"mappings":";;;;;;AAAA;;;;;;AAQA;;;;;;AAMA,OAAO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,OAAD,EAA+B;AACxD,MAAMC,gBAAgB,qBACfD,OADe;AAElBE,IAAAA,cAAc,EAAEF,OAAO,CAACG;AAFN,IAAtB;;AAKA,MAAIH,OAAO,CAACI,OAAR,IAAmBJ,OAAO,CAACI,OAAR,CAAgBC,MAAvC,EAA+C;AAC3CJ,IAAAA,gBAAgB,CAACG,OAAjB,GAA2BJ,OAAO,CAACI,OAAR,CAAgBE,GAAhB,CAAoBP,aAApB,CAA3B;AACH;;AAED,SAAOE,gBAAP;AACH,CAXM;AAaP,eAAe;AACXF,EAAAA,aAAa,EAAbA;AADW,CAAf","sourcesContent":["/**\n * @flow\n * @file Utils for the box APIs\n * @author Box\n */\n\nimport type { Comment } from '../common/types/feed';\n\n/**\n * Formats comment data (including replies) for use in components.\n *\n * @param {Comment} comment - An individual comment entry from the API\n * @return {Comment} Updated comment\n */\nexport const formatComment = (comment: Comment): Comment => {\n    const formattedComment = {\n        ...comment,\n        tagged_message: comment.message,\n    };\n\n    if (comment.replies && comment.replies.length) {\n        formattedComment.replies = comment.replies.map(formatComment);\n    }\n\n    return formattedComment;\n};\n\nexport default {\n    formatComment,\n};\n"],"file":"utils.js"}