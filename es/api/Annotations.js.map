{"version":3,"sources":["../../src/api/Annotations.js"],"names":["merge","ERROR_CODE_CREATE_ANNOTATION","ERROR_CODE_CREATE_REPLY","ERROR_CODE_DELETE_ANNOTATION","ERROR_CODE_EDIT_ANNOTATION","ERROR_CODE_FETCH_ANNOTATION","ERROR_CODE_FETCH_ANNOTATIONS","ERROR_CODE_FETCH_REPLIES","PERMISSION_CAN_CREATE_ANNOTATIONS","PERMISSION_CAN_DELETE","PERMISSION_CAN_EDIT","PERMISSION_CAN_VIEW_ANNOTATIONS","PERMISSION_CAN_RESOLVE","MarkerBasedApi","formatComment","Annotations","data","isDestroyed","successCallback","entries","type","formatReplies","length","replies","map","annotations","annotation","getBaseApiUrl","annotationId","getUrl","getUrlForId","fileId","fileVersionId","payload","permissions","errorCallback","errorCode","checkApiCallValidity","e","defaults","description","file_version","id","post","url","message","status","put","undefined","delete","shouldFetchReplies","requestData","params","fields","get","limit","shouldFetchAll","file_id","file_version_id","markerGet","getUrlWithRepliesForId"],"mappings":"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","sourcesContent":["// @flow\nimport merge from 'lodash/merge';\nimport {\n    ERROR_CODE_CREATE_ANNOTATION,\n    ERROR_CODE_CREATE_REPLY,\n    ERROR_CODE_DELETE_ANNOTATION,\n    ERROR_CODE_EDIT_ANNOTATION,\n    ERROR_CODE_FETCH_ANNOTATION,\n    ERROR_CODE_FETCH_ANNOTATIONS,\n    ERROR_CODE_FETCH_REPLIES,\n    PERMISSION_CAN_CREATE_ANNOTATIONS,\n    PERMISSION_CAN_DELETE,\n    PERMISSION_CAN_EDIT,\n    PERMISSION_CAN_VIEW_ANNOTATIONS,\n    PERMISSION_CAN_RESOLVE,\n} from '../constants';\nimport MarkerBasedApi from './MarkerBasedAPI';\nimport { formatComment } from './utils';\n\nimport type {\n    Annotation,\n    AnnotationPermission,\n    Annotations as AnnotationsType,\n    NewAnnotation,\n} from '../common/types/annotations';\nimport type { BoxItemPermission } from '../common/types/core';\nimport type { ElementsXhrError } from '../common/types/api';\nimport type { Comment, FeedItemStatus, ThreadedComments } from '../common/types/feed';\n\nexport default class Annotations extends MarkerBasedApi {\n    /**\n     * Formats annotation replies' comment data for use in components.\n     *\n     * @param {Annotation} annotation - An individual annotation entry from the API\n     * @return {Annotation} Updated annotation\n     */\n    formatReplies(annotation: Annotation): Annotation {\n        if (!annotation.replies || !annotation.replies.length) {\n            return annotation;\n        }\n\n        return {\n            ...annotation,\n            replies: annotation.replies.map(formatComment),\n        };\n    }\n\n    /**\n     * Formats the annotations api response to usable data\n     * @param {Object} data the api response data\n     */\n    successHandler = (data: Object): void => {\n        if (this.isDestroyed() || typeof this.successCallback !== 'function') {\n            return;\n        }\n\n        // There is no response data when deleting an annotation\n        if (!data) {\n            this.successCallback();\n            return;\n        }\n\n        // We don't have entries when updating/creating an annotation\n        if (!data.entries) {\n            // Check if the response is a comment (result of createAnnotationReply)\n            if (data.type && data.type === 'comment') {\n                this.successCallback(formatComment(data));\n                return;\n            }\n\n            this.successCallback(this.formatReplies(data));\n            return;\n        }\n\n        // Check if the response is the replies of an annotation (result of getAnnotationReplies)\n        if (data.entries.length && data.entries[0].type === 'comment') {\n            const replies = data.entries.map(formatComment);\n            this.successCallback({ ...data, entries: replies });\n            return;\n        }\n\n        const annotations = data.entries.map(this.formatReplies);\n        this.successCallback({ ...data, entries: annotations });\n    };\n\n    getUrl() {\n        return `${this.getBaseApiUrl()}/undoc/annotations`;\n    }\n\n    getUrlForId(annotationId: string) {\n        return `${this.getUrl()}/${annotationId}`;\n    }\n\n    getUrlWithRepliesForId(annotationId: string) {\n        return `${this.getUrlForId(annotationId)}/replies`;\n    }\n\n    createAnnotation(\n        fileId: string,\n        fileVersionId: string,\n        payload: NewAnnotation,\n        permissions: BoxItemPermission,\n        successCallback: (annotation: Annotation) => void,\n        errorCallback: (e: ElementsXhrError, code: string) => void,\n    ): void {\n        this.errorCode = ERROR_CODE_CREATE_ANNOTATION;\n\n        try {\n            this.checkApiCallValidity(PERMISSION_CAN_CREATE_ANNOTATIONS, permissions, fileId);\n        } catch (e) {\n            errorCallback(e, this.errorCode);\n            return;\n        }\n\n        const defaults = {\n            description: {\n                type: 'reply',\n            },\n            file_version: {\n                id: fileVersionId,\n                type: 'file_version',\n            },\n        };\n\n        this.post({\n            id: fileId,\n            data: {\n                data: merge(defaults, payload),\n            },\n            errorCallback,\n            successCallback,\n            url: this.getUrl(),\n        });\n    }\n\n    updateAnnotation(\n        fileId: string,\n        annotationId: string,\n        permissions: AnnotationPermission,\n        payload: { message?: string, status?: FeedItemStatus },\n        successCallback: (annotation: Annotation) => void,\n        errorCallback: (e: ElementsXhrError, code: string) => void,\n    ): void {\n        this.errorCode = ERROR_CODE_EDIT_ANNOTATION;\n        const { message, status } = payload;\n\n        if (message) {\n            try {\n                this.checkApiCallValidity(PERMISSION_CAN_EDIT, permissions, fileId);\n            } catch (e) {\n                errorCallback(e, this.errorCode);\n                return;\n            }\n        }\n\n        if (status) {\n            try {\n                this.checkApiCallValidity(PERMISSION_CAN_RESOLVE, permissions, fileId);\n            } catch (e) {\n                errorCallback(e, this.errorCode);\n                return;\n            }\n        }\n\n        this.put({\n            id: fileId,\n            data: {\n                data: {\n                    description: message ? { message } : undefined,\n                    status,\n                },\n            },\n            errorCallback,\n            successCallback,\n            url: this.getUrlForId(annotationId),\n        });\n    }\n\n    deleteAnnotation(\n        fileId: string,\n        annotationId: string,\n        permissions: AnnotationPermission,\n        successCallback: () => void,\n        errorCallback: (e: ElementsXhrError, code: string) => void,\n    ): void {\n        this.errorCode = ERROR_CODE_DELETE_ANNOTATION;\n\n        try {\n            this.checkApiCallValidity(PERMISSION_CAN_DELETE, permissions, fileId);\n        } catch (e) {\n            errorCallback(e, this.errorCode);\n            return;\n        }\n\n        this.delete({\n            id: fileId,\n            errorCallback,\n            successCallback,\n            url: this.getUrlForId(annotationId),\n        });\n    }\n\n    getAnnotation(\n        fileId: string,\n        annotationId: string,\n        permissions: BoxItemPermission,\n        successCallback: (annotation: Annotation) => void,\n        errorCallback: (e: ElementsXhrError, code: string) => void,\n        shouldFetchReplies?: boolean,\n    ): void {\n        this.errorCode = ERROR_CODE_FETCH_ANNOTATION;\n\n        try {\n            this.checkApiCallValidity(PERMISSION_CAN_VIEW_ANNOTATIONS, permissions, fileId);\n        } catch (e) {\n            errorCallback(e, this.errorCode);\n            return;\n        }\n\n        const requestData = shouldFetchReplies ? { params: { fields: 'replies' } } : undefined;\n\n        this.get({\n            id: fileId,\n            errorCallback,\n            successCallback,\n            url: this.getUrlForId(annotationId),\n            requestData,\n        });\n    }\n\n    getAnnotations(\n        fileId: string,\n        fileVersionId?: string,\n        permissions: BoxItemPermission,\n        successCallback: (annotations: AnnotationsType) => void,\n        errorCallback: (e: ElementsXhrError, code: string) => void,\n        limit?: number,\n        shouldFetchAll?: boolean,\n        shouldFetchReplies?: boolean,\n    ): void {\n        this.errorCode = ERROR_CODE_FETCH_ANNOTATIONS;\n\n        try {\n            this.checkApiCallValidity(PERMISSION_CAN_VIEW_ANNOTATIONS, permissions, fileId);\n        } catch (e) {\n            errorCallback(e, this.errorCode);\n            return;\n        }\n\n        const requestData = {\n            file_id: fileId,\n            file_version_id: fileVersionId,\n            ...(shouldFetchReplies ? { fields: 'replies' } : null),\n        };\n\n        this.markerGet({\n            id: fileId,\n            errorCallback,\n            limit,\n            requestData,\n            shouldFetchAll,\n            successCallback,\n        });\n    }\n\n    getAnnotationReplies(\n        fileId: string,\n        annotationId: string,\n        permissions: BoxItemPermission,\n        successCallback: (comments: ThreadedComments) => void,\n        errorCallback: (e: ElementsXhrError, code: string) => void,\n    ): void {\n        this.errorCode = ERROR_CODE_FETCH_REPLIES;\n\n        try {\n            this.checkApiCallValidity(PERMISSION_CAN_VIEW_ANNOTATIONS, permissions, fileId);\n        } catch (e) {\n            errorCallback(e, this.errorCode);\n            return;\n        }\n\n        this.get({\n            id: fileId,\n            errorCallback,\n            successCallback,\n            url: this.getUrlWithRepliesForId(annotationId),\n        });\n    }\n\n    createAnnotationReply(\n        fileId: string,\n        annotationId: string,\n        permissions: BoxItemPermission,\n        message: string,\n        successCallback: (comment: Comment) => void,\n        errorCallback: (e: ElementsXhrError, code: string) => void,\n    ): void {\n        this.errorCode = ERROR_CODE_CREATE_REPLY;\n\n        try {\n            this.checkApiCallValidity(PERMISSION_CAN_CREATE_ANNOTATIONS, permissions, fileId);\n        } catch (e) {\n            errorCallback(e, this.errorCode);\n            return;\n        }\n\n        this.post({\n            id: fileId,\n            data: { data: { message } },\n            errorCallback,\n            successCallback,\n            url: `${this.getUrlWithRepliesForId(annotationId)}?file_id=${fileId}`,\n        });\n    }\n}\n"],"file":"Annotations.js"}