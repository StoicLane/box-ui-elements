{"version":3,"sources":["../../../src/components/select-button/SelectButton.js"],"names":["React","classNames","Tooltip","SelectButton","forwardRef","ref","children","className","error","errorTooltipPosition","isDisabled","tooltipTetherClassName","rest"],"mappings":";;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,OAAP,MAAoB,YAApB;AAEA,OAAO,qBAAP;AAYA,IAAMC,YAAY,GAAGH,KAAK,CAACI,UAAN,CACjB,gBAUIC,GAVJ;AAAA,MAEQC,QAFR,QAEQA,QAFR;AAAA,4BAGQC,SAHR;AAAA,MAGQA,SAHR,+BAGoB,EAHpB;AAAA,MAIQC,KAJR,QAIQA,KAJR;AAAA,mCAKQC,oBALR;AAAA,MAKQA,oBALR,sCAK+B,cAL/B;AAAA,6BAMQC,UANR;AAAA,MAMQA,UANR,gCAMqB,KANrB;AAAA,MAOQC,sBAPR,QAOQA,sBAPR;AAAA,MAQWC,IARX;;AAAA,SAYI,oBAAC,OAAD;AACI,IAAA,OAAO,EAAE,CAAC,CAACJ,KADf;AAEI,IAAA,QAAQ,EAAEC,oBAFd;AAGI,IAAA,sBAAsB,EAAEE,sBAH5B;AAII,IAAA,IAAI,EAAEH,KAJV;AAKI,IAAA,KAAK,EAAC;AALV,KAOI;AACI,IAAA,SAAS,EAAEP,UAAU,CAACM,SAAD,EAAY,eAAZ,EAA6B,kBAA7B,EAAiD;AAClE,oBAAc,CAAC,CAACC;AADkD,KAAjD,CADzB;AAII,IAAA,QAAQ,EAAEE,UAJd;AAKI,IAAA,GAAG,EAAEL,GALT;AAMI,IAAA,IAAI,EAAC;AANT,KAOQO,IAPR,GASKN,QATL,CAPJ,CAZJ;AAAA,CADiB,CAArB;AAmCA,eAAeH,YAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\n\nimport Tooltip from '../tooltip';\nimport type { Position } from '../tooltip';\nimport './SelectButton.scss';\n\ntype Props = {\n    children?: React.Node,\n    className: string,\n    error?: React.Node,\n    errorTooltipPosition?: Position,\n    isDisabled: boolean,\n    /** A CSS class for the tooltip's tether element component */\n    tooltipTetherClassName?: string,\n};\n\nconst SelectButton = React.forwardRef<Props, HTMLButtonElement>(\n    (\n        {\n            children,\n            className = '',\n            error,\n            errorTooltipPosition = 'middle-right',\n            isDisabled = false,\n            tooltipTetherClassName,\n            ...rest\n        }: Props,\n        ref,\n    ) => (\n        <Tooltip\n            isShown={!!error}\n            position={errorTooltipPosition}\n            tetherElementClassName={tooltipTetherClassName}\n            text={error}\n            theme=\"error\"\n        >\n            <button\n                className={classNames(className, 'select-button', 'bdl-SelectButton', {\n                    'is-invalid': !!error,\n                })}\n                disabled={isDisabled}\n                ref={ref}\n                type=\"button\"\n                {...rest}\n            >\n                {children}\n            </button>\n        </Tooltip>\n    ),\n);\n\nexport default SelectButton;\n"],"file":"SelectButton.js"}