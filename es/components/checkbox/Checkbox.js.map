{"version":3,"sources":["../../../src/components/checkbox/Checkbox.tsx"],"names":["React","uniqueId","classNames","CheckboxTooltip","Checkbox","className","description","fieldLabel","hideLabel","id","inputClassName","isChecked","isDisabled","label","name","onFocus","onChange","subsection","tooltip","rest","generatedID","useRef","current","inputID","checkboxAndLabel"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,OAAO,iBAAP;;AAwCA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAgBI;AAAA,4BAfjBC,SAeiB;AAAA,MAfjBA,SAeiB,+BAfL,EAeK;AAAA,MAdjBC,WAciB,QAdjBA,WAciB;AAAA,MAbjBC,UAaiB,QAbjBA,UAaiB;AAAA,MAZjBC,SAYiB,QAZjBA,SAYiB;AAAA,MAXjBC,EAWiB,QAXjBA,EAWiB;AAAA,MAVjBC,cAUiB,QAVjBA,cAUiB;AAAA,MATjBC,SASiB,QATjBA,SASiB;AAAA,MARjBC,UAQiB,QARjBA,UAQiB;AAAA,MAPjBC,KAOiB,QAPjBA,KAOiB;AAAA,MANjBC,IAMiB,QANjBA,IAMiB;AAAA,MALjBC,OAKiB,QALjBA,OAKiB;AAAA,MAJjBC,QAIiB,QAJjBA,QAIiB;AAAA,MAHjBC,UAGiB,QAHjBA,UAGiB;AAAA,MAFjBC,OAEiB,QAFjBA,OAEiB;AAAA,MADdC,IACc;;AACjB,MAAMC,WAAW,GAAGpB,KAAK,CAACqB,MAAN,CAAapB,QAAQ,CAAC,UAAD,CAArB,EAAmCqB,OAAvD,CADiB,CAEjB;;AACA,MAAMC,OAAO,GAAGd,EAAE,IAAIW,WAAtB;AAEA,MAAMI,gBAAgB,GAClB;AAAM,IAAA,SAAS,EAAC;AAAhB,KACI;AACI,wBAAkBlB,WAAW,yBAAkBiB,OAAlB,IAA8B,EAD/D;AAEI,IAAA,OAAO,EAAEZ,SAFb;AAGI,IAAA,SAAS,EAAED,cAHf;AAII,IAAA,QAAQ,EAAEE,UAJd;AAKI,IAAA,EAAE,EAAEW,OALR;AAMI,IAAA,IAAI,EAAET,IANV;AAOI,IAAA,OAAO,EAAEC,OAPb;AAQI,IAAA,QAAQ,EAAEC,QARd;AASI,IAAA,IAAI,EAAC;AATT,KAUQG,IAVR,EADJ,EAeI;AAAM,IAAA,SAAS,EAAC;AAAhB,IAfJ,EAgBI;AAAM,IAAA,SAAS,EAAEjB,UAAU,CAAC,kCAAD,EAAqC;AAAE,8BAAwBM;AAA1B,KAArC;AAA3B,KACKK,KAAK,IAAI;AAAO,IAAA,OAAO,EAAEU;AAAhB,KAA0BV,KAA1B,CADd,EAEKK,OAAO,IAAI,oBAAC,eAAD;AAAiB,IAAA,OAAO,EAAEA;AAA1B,IAFhB,CAhBJ,CADJ;AAwBA,SACI;AAAK,IAAA,SAAS,EAAEhB,UAAU,CAAC,oBAAD,EAAuBG,SAAvB,EAAkC;AAAE,qCAA+BO;AAAjC,KAAlC;AAA1B,KACKL,UAAU,IAAI;AAAK,IAAA,SAAS,EAAC;AAAf,KAAwBA,UAAxB,CADnB,EAEKiB,gBAFL,EAGKlB,WAAW,GACR;AAAK,IAAA,EAAE,wBAAiBiB,OAAjB,CAAP;AAAmC,IAAA,SAAS,EAAC;AAA7C,KACKjB,WADL,CADQ,GAIR,IAPR,EAQKW,UAAU,GAAG;AAAK,IAAA,SAAS,EAAC;AAAf,KAAsCA,UAAtC,CAAH,GAA6D,IAR5E,CADJ;AAYH,CAzDD;;AA2DA,eAAeb,QAAf","sourcesContent":["import * as React from 'react';\nimport uniqueId from 'lodash/uniqueId';\nimport classNames from 'classnames';\n\nimport CheckboxTooltip from './CheckboxTooltip';\n\nimport './Checkbox.scss';\n\nexport interface CheckboxProps {\n    /** Class name for the checkbox */\n    className?: string;\n    /** Description for the checkbox */\n    description?: React.ReactNode;\n    /** fieldLabel - label for the field shown on top of the checkbox */\n    fieldLabel?: React.ReactNode;\n    /** hideLabel - whether the checkbox label is hidden or not */\n    hideLabel?: boolean;\n    /** id - Unique `id` for the input */\n    id?: string;\n    inputClassName?: string;\n    /** isChecked - whether the checkbox is checked or not */\n    isChecked?: boolean; // @TODO: eventually call this `checked`\n    /** isDisabled - whether the checkbox is disabled or not */\n    isDisabled?: boolean; // @TODO: eventually call this `disabled`\n    /** Label displayed for the input */\n    label: React.ReactNode;\n    /** Name of the input */\n    name: string;\n    /** onBlur - blur callback function that takes the event as the argument */\n    onBlur?:\n        | ((e: React.SyntheticEvent<HTMLInputElement, Event>) => React.ReactText)\n        | {\n              (e: React.FocusEvent<HTMLInputElement>): void;\n          };\n    /** onFocus - focus callback function that takes the event as the argument  */\n    onFocus?: (e: React.FocusEvent<HTMLInputElement>) => void;\n    /** onChange - change callback function that takes the event as the argument */\n    onChange?: (e: React.SyntheticEvent<HTMLInputElement, Event>) => string | number | boolean | void;\n    /** Subsection below the checkbox */\n    subsection?: React.ReactNode;\n    /** Tooltip text next to the checkbox label */\n    tooltip?: string;\n    /** Value for the checkbox */\n    value?: string | number | string[];\n}\n\nconst Checkbox = ({\n    className = '',\n    description,\n    fieldLabel,\n    hideLabel,\n    id,\n    inputClassName,\n    isChecked,\n    isDisabled,\n    label,\n    name,\n    onFocus,\n    onChange,\n    subsection,\n    tooltip,\n    ...rest // @TODO: eventually remove `rest` in favor of explicit props\n}: CheckboxProps) => {\n    const generatedID = React.useRef(uniqueId('checkbox')).current;\n    // use passed-in ID from props; otherwise generate one\n    const inputID = id || generatedID;\n\n    const checkboxAndLabel = (\n        <span className=\"checkbox-label\">\n            <input\n                aria-describedby={description ? `description_${inputID}` : ''}\n                checked={isChecked}\n                className={inputClassName}\n                disabled={isDisabled}\n                id={inputID}\n                name={name}\n                onFocus={onFocus}\n                onChange={onChange}\n                type=\"checkbox\"\n                {...rest}\n            />\n            {/* This span is used for the before/after custom checkbox styles, but mouse clicks will pass through this element\n                    to the underlying <input> */}\n            <span className=\"checkbox-pointer-target\" />\n            <span className={classNames('bdl-Checkbox-labelTooltipWrapper', { 'accessibility-hidden': hideLabel })}>\n                {label && <label htmlFor={inputID}>{label}</label>}\n                {tooltip && <CheckboxTooltip tooltip={tooltip} />}\n            </span>\n        </span>\n    );\n\n    return (\n        <div className={classNames('checkbox-container', className, { 'is-disabled bdl-is-disabled': isDisabled })}>\n            {fieldLabel && <div className=\"label\">{fieldLabel}</div>}\n            {checkboxAndLabel}\n            {description ? (\n                <div id={`description_${inputID}`} className=\"checkbox-description\">\n                    {description}\n                </div>\n            ) : null}\n            {subsection ? <div className=\"checkbox-subsection\">{subsection}</div> : null}\n        </div>\n    );\n};\n\nexport default Checkbox;\n"],"file":"Checkbox.js"}