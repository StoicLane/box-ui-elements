{"version":3,"sources":["../../../src/components/draggable-list/DraggableList.stories.tsx"],"names":["React","uniqueId","Checkbox","DraggableList","DraggableListItem","reorder","notes","DraggableListExamples","items","listId","count","Array","from","length","v","k","map","id","label","sourceIndex","destinationIndex","state","setState","getItems","isDraggableViaHandle","props","onDragEnd","item","index","Component","Example","ExampleIsDraggableViaHandle","title","component","parameters"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AAEA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,OAAP,MAAyC,gCAAzC;AAEA,OAAOC,KAAP,MAAkB,4BAAlB;;IAWMC,qB;;;;;;;;;;;;;;;;;;4DACM;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,MAAM,EAAE;AAFJ,K;;+DAYG,UAACC,KAAD,EAA2C;AAClD,aAAOC,KAAK,CAACC,IAAN,CAAW;AAAEC,QAAAA,MAAM,EAAEH;AAAV,OAAX,EAA8B,UAACI,CAAD,EAAIC,CAAJ;AAAA,eAAUA,CAAV;AAAA,OAA9B,EAA2CC,GAA3C,CAA+C,UAAAD,CAAC;AAAA,eAAK;AACxDE,UAAAA,EAAE,EAAEhB,QAAQ,CAAC,OAAD,CAD4C;AAExDiB,UAAAA,KAAK,iBAAUH,CAAV;AAFmD,SAAL;AAAA,OAAhD,CAAP;AAIH,K;;gEAEW,UAACI,WAAD,EAAsBC,gBAAtB,EAAmD;AAC3D,UAAI,CAACA,gBAAL,EAAuB;AACnB;AACH;;AAED,UAAMZ,KAAK,GAAGH,OAAO,CAAC,MAAKgB,KAAL,CAAWb,KAAZ,EAAmBW,WAAnB,EAAgCC,gBAAhC,CAArB;;AAEA,YAAKE,QAAL,CAAc;AACVd,QAAAA,KAAK,EAALA;AADU,OAAd;AAGH,K;;;;;;;wCAxBmB;AAChB,WAAKc,QAAL,CAAc;AACVd,QAAAA,KAAK,EAAE,KAAKe,QAAL,CAAc,EAAd,CADG;AAEVd,QAAAA,MAAM,EAAER,QAAQ;AAFN,OAAd;AAIH;;;6BAqBQ;AAAA,UACGuB,oBADH,GAC4B,KAAKC,KADjC,CACGD,oBADH;AAAA,wBAEqB,KAAKH,KAF1B;AAAA,UAEGb,KAFH,eAEGA,KAFH;AAAA,UAEUC,MAFV,eAEUA,MAFV;AAIL,aACI,oBAAC,aAAD;AAAe,QAAA,SAAS,EAAC,kCAAzB;AAA4D,QAAA,MAAM,EAAEA,MAApE;AAA4E,QAAA,SAAS,EAAE,KAAKiB;AAA5F,SACKlB,KAAK,CAACQ,GAAN,CAAU,UAACW,IAAD,EAAwBC,KAAxB;AAAA,eACP,oBAAC,iBAAD;AACI,UAAA,GAAG,sBAAeA,KAAf,CADP;AAEI,UAAA,EAAE,EAAED,IAAI,CAACV,EAFb;AAGI,UAAA,KAAK,EAAEW,KAHX;AAII,UAAA,oBAAoB,EAAEJ;AAJ1B,WAMI,oBAAC,QAAD;AAAU,UAAA,KAAK,EAAEG,IAAI,CAACT,KAAtB;AAA6B,UAAA,IAAI,EAAES,IAAI,CAACT;AAAxC,UANJ,CADO;AAAA,OAAV,CADL,CADJ;AAcH;;;;EAlD+BlB,KAAK,CAAC6B,S;;AAqD1C,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,SAAM,oBAAC,qBAAD,OAAN;AAAA,CAAhB;AAEP,OAAO,IAAMC,2BAA2B,GAAG,SAA9BA,2BAA8B;AAAA,SAAM,oBAAC,qBAAD;AAAuB,IAAA,oBAAoB;AAA3C,IAAN;AAAA,CAApC;AAEP,eAAe;AACXC,EAAAA,KAAK,EAAE,0BADI;AAEXC,EAAAA,SAAS,EAAE9B,aAFA;AAGX+B,EAAAA,UAAU,EAAE;AACR5B,IAAAA,KAAK,EAALA;AADQ;AAHD,CAAf","sourcesContent":["import * as React from 'react';\nimport uniqueId from 'lodash/uniqueId';\n\nimport Checkbox from '../checkbox/Checkbox';\nimport DraggableList from './DraggableList';\nimport DraggableListItem from './DraggableListItem';\nimport reorder, { ReorderListItem } from './draggable-list-utils/reorder';\n\nimport notes from './DraggableList.stories.md';\n\ninterface Props {\n    isDraggableViaHandle?: boolean;\n}\n\ninterface State {\n    items: Array<ReorderListItem>;\n    listId: string;\n}\n\nclass DraggableListExamples extends React.Component<Props, State> {\n    state = {\n        items: [],\n        listId: '',\n    };\n\n    componentDidMount() {\n        this.setState({\n            items: this.getItems(10),\n            listId: uniqueId(),\n        });\n    }\n\n    getItems = (count: number): Array<ReorderListItem> => {\n        return Array.from({ length: count }, (v, k) => k).map(k => ({\n            id: uniqueId('item_'),\n            label: `item ${k}`,\n        }));\n    };\n\n    onDragEnd = (sourceIndex: number, destinationIndex: number) => {\n        if (!destinationIndex) {\n            return;\n        }\n\n        const items = reorder(this.state.items, sourceIndex, destinationIndex);\n\n        this.setState({\n            items,\n        });\n    };\n\n    render() {\n        const { isDraggableViaHandle } = this.props;\n        const { items, listId } = this.state;\n\n        return (\n            <DraggableList className=\"draggable-list-example-container\" listId={listId} onDragEnd={this.onDragEnd}>\n                {items.map((item: ReorderListItem, index) => (\n                    <DraggableListItem\n                        key={`draggable-${index}`}\n                        id={item.id}\n                        index={index}\n                        isDraggableViaHandle={isDraggableViaHandle}\n                    >\n                        <Checkbox label={item.label} name={item.label} />\n                    </DraggableListItem>\n                ))}\n            </DraggableList>\n        );\n    }\n}\n\nexport const Example = () => <DraggableListExamples />;\n\nexport const ExampleIsDraggableViaHandle = () => <DraggableListExamples isDraggableViaHandle />;\n\nexport default {\n    title: 'Components|DraggableList',\n    component: DraggableList,\n    parameters: {\n        notes,\n    },\n};\n"],"file":"DraggableList.stories.js"}