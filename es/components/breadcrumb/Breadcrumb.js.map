{"version":3,"sources":["../../../src/components/breadcrumb/Breadcrumb.js"],"names":["React","injectIntl","classNames","MenuLinkItem","EllipsisCrumb","Crumb","messages","Breadcrumb","children","className","hasReverseOverflowOrder","intl","numItemsBeforeOverflow","overflowMenuButton","threshold","breadcrumbs","Children","toArray","constructChildren","overflowItems","slice","length","dotDotDotItems","reverse","menuCrumbsItems","map","crumb","index","renderBreadcrumbs","newChildren","hasEllipsis","item","i","isLastCrumb","formatMessage","breadcrumbLabel","BreadcrumbBase"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport type { InjectIntlProvidedProps } from 'react-intl';\nimport classNames from 'classnames';\n\nimport { MenuLinkItem } from '../menu';\nimport EllipsisCrumb from './EllipsisCrumb';\nimport Crumb from './Crumb';\nimport messages from './messages';\n\nimport './Breadcrumb.scss';\n\nexport type BreadcrumbProps = {\n    /** Breadcrumb contents */\n    children: React.Node,\n    /** Class name for Breadcrumb */\n    className?: string,\n    /** Reverse default overflow breadcrumb ordering to highest to lowest depth */\n    hasReverseOverflowOrder?: boolean,\n    /** Show number of breadcrumb items before overflow. Default is 1 */\n    numItemsBeforeOverflow?: number,\n    /** Element to override default overflow menu button */\n    overflowMenuButton?: React.Node,\n    /** Number of crumbs to show before they collapse into an ellipsis */\n    threshold?: number,\n};\n\ntype Props = BreadcrumbProps & InjectIntlProvidedProps;\n\nconst Breadcrumb = ({\n    children,\n    className = '',\n    hasReverseOverflowOrder = false,\n    intl,\n    numItemsBeforeOverflow = 1,\n    overflowMenuButton,\n    threshold = 4,\n}: Props) => {\n    const breadcrumbs = React.Children.toArray(children);\n\n    const constructChildren = () => {\n        const overflowItems = breadcrumbs.slice(numItemsBeforeOverflow, breadcrumbs.length + 1 - threshold);\n        const dotDotDotItems = hasReverseOverflowOrder ? overflowItems : overflowItems.reverse();\n\n        const menuCrumbsItems = (\n            <EllipsisCrumb menuButton={overflowMenuButton}>\n                {dotDotDotItems.map((crumb, index) => (\n                    <MenuLinkItem key={index}>{crumb}</MenuLinkItem>\n                ))}\n            </EllipsisCrumb>\n        );\n        return [...breadcrumbs.slice(0, numItemsBeforeOverflow), menuCrumbsItems, ...breadcrumbs.slice(1 - threshold)];\n    };\n\n    const renderBreadcrumbs = () => {\n        let newChildren = breadcrumbs;\n        let { length } = breadcrumbs;\n        let hasEllipsis = false;\n\n        if (length > threshold) {\n            newChildren = constructChildren();\n            length = newChildren.length;\n            hasEllipsis = true;\n        }\n\n        return React.Children.map(newChildren, (item, i) => {\n            const isLastCrumb = length === 0 || i === length - 1;\n            return (\n                <Crumb\n                    className={classNames({ 'no-shrink': hasEllipsis && i === numItemsBeforeOverflow })}\n                    isLastCrumb={isLastCrumb}\n                >\n                    {item}\n                </Crumb>\n            );\n        });\n    };\n\n    return (\n        <nav aria-label={intl.formatMessage(messages.breadcrumbLabel)} className={classNames('breadcrumbs', className)}>\n            <ol>{renderBreadcrumbs()}</ol>\n        </nav>\n    );\n};\n\nexport { Breadcrumb as BreadcrumbBase };\nexport default injectIntl(Breadcrumb);\n"],"file":"Breadcrumb.js"}