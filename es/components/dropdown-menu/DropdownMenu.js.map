{"version":3,"sources":["../../../src/components/dropdown-menu/DropdownMenu.js"],"names":["React","TetherComponent","classNames","noop","uniqueId","KEYS","DropdownMenu","initialFocusIndex","isOpen","setState","event","props","onMenuClose","menuButtonEl","document","getElementById","menuButtonID","focus","state","stopPropagation","preventDefault","closeMenu","openMenuAndSetFocusIndex","key","space","enter","arrowDown","arrowUp","escape","isKeyboardEvent","focusButton","menuEl","menuID","target","Node","contains","prevProps","prevState","useBubble","addEventListener","handleDocumentClick","onMenuOpen","removeEventListener","bodyElement","children","className","constrainToScrollParent","constrainToWindow","constrainToWindowWithPin","isResponsive","isRightAligned","tetherAttachment","tetherTargetAttachment","elements","Children","toArray","length","Error","menuButton","menu","menuButtonProps","id","onClick","handleButtonClick","onKeyDown","handleButtonKeyDown","undefined","menuProps","onClose","handleMenuClose","attachment","targetAttachment","constraints","push","to","pin","bodyEl","HTMLElement","body","cloneElement","Component"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport TetherComponent from 'react-tether';\nimport classNames from 'classnames';\nimport noop from 'lodash/noop';\nimport uniqueId from 'lodash/uniqueId';\n\nimport { KEYS } from '../../constants';\nimport './DropdownMenu.scss';\n\ntype Props = {\n    bodyElement?: HTMLElement,\n    children: React.Node,\n    /** Forces menu to render within the scroll parent */\n    className?: string,\n    /** Forces menu to render within the visible window */\n    constrainToScrollParent: boolean,\n    /** Right aligns menu to button */\n    constrainToWindow: boolean,\n    /** Forces menu to render within the visible window and pins the dropdown if scrolled */\n    constrainToWindowWithPin?: boolean,\n    /** Enables responsive behaviors for this component */\n    isResponsive?: boolean,\n    /** Function called when menu is opened */\n    isRightAligned: boolean,\n    /** Handler for dropdown menu close events */\n    onMenuClose?: (event: SyntheticEvent<> | MouseEvent) => void,\n    /** Handler for dropdown menu open events */\n    onMenuOpen?: () => void,\n    /** \"attachment\" prop for the TetherComponent, will overwrite the default settings and ignore isRightAligned option */\n    tetherAttachment?: string,\n    /** \"targetAttachment\" prop for the TetherComponent, will overwrite the default settings and ignore isRightAligned option */\n    tetherTargetAttachment?: string,\n    /** Set true to close dropdown menu on event bubble instead of event capture */\n    useBubble?: boolean,\n};\n\ntype State = {\n    initialFocusIndex: ?number,\n    isOpen: boolean,\n};\n\nclass DropdownMenu extends React.Component<Props, State> {\n    static defaultProps = {\n        constrainToScrollParent: false,\n        constrainToWindow: false,\n        isResponsive: false,\n        isRightAligned: false,\n    };\n\n    menuID = uniqueId('menu');\n\n    menuButtonID = uniqueId('menubutton');\n\n    state = {\n        initialFocusIndex: null,\n        isOpen: false,\n    };\n\n    componentDidUpdate(prevProps: Props, prevState: State) {\n        const { useBubble } = this.props;\n        if (!prevState.isOpen && this.state.isOpen) {\n            // When menu is being opened\n            document.addEventListener('click', this.handleDocumentClick, !useBubble);\n            document.addEventListener('contextmenu', this.handleDocumentClick, !useBubble);\n\n            const { onMenuOpen } = this.props;\n            if (onMenuOpen) {\n                onMenuOpen();\n            }\n        } else if (prevState.isOpen && !this.state.isOpen) {\n            // When menu is being closed\n            document.removeEventListener('contextmenu', this.handleDocumentClick, !useBubble);\n            document.removeEventListener('click', this.handleDocumentClick, !useBubble);\n        }\n    }\n\n    componentWillUnmount() {\n        const { useBubble } = this.props;\n        if (this.state.isOpen) {\n            // Clean-up global click handlers\n            document.removeEventListener('contextmenu', this.handleDocumentClick, !useBubble);\n            document.removeEventListener('click', this.handleDocumentClick, !useBubble);\n        }\n    }\n\n    menuID: string;\n\n    menuButtonID: string;\n\n    openMenuAndSetFocusIndex = (initialFocusIndex: ?number) => {\n        this.setState({\n            initialFocusIndex,\n            isOpen: true,\n        });\n    };\n\n    closeMenu = (event: SyntheticEvent<> | MouseEvent) => {\n        const { onMenuClose = noop } = this.props;\n        this.setState(\n            {\n                isOpen: false,\n            },\n            () => onMenuClose(event),\n        );\n    };\n\n    focusButton = () => {\n        // @NOTE: This breaks encapsulation a bit, but the only other way is passing ref functions to unknown children components\n        const menuButtonEl = document.getElementById(this.menuButtonID);\n        if (menuButtonEl) {\n            menuButtonEl.focus();\n        }\n    };\n\n    handleButtonClick = (event: SyntheticEvent<>) => {\n        const { isOpen } = this.state;\n\n        event.stopPropagation();\n        event.preventDefault();\n\n        if (isOpen) {\n            this.closeMenu(event);\n        } else {\n            this.openMenuAndSetFocusIndex(null);\n        }\n    };\n\n    handleButtonKeyDown = (event: SyntheticKeyboardEvent<>) => {\n        const { isOpen } = this.state;\n\n        switch (event.key) {\n            case KEYS.space:\n            case KEYS.enter:\n            case KEYS.arrowDown:\n                event.stopPropagation();\n                event.preventDefault();\n\n                this.openMenuAndSetFocusIndex(0);\n                break;\n\n            case KEYS.arrowUp:\n                event.stopPropagation();\n                event.preventDefault();\n\n                this.openMenuAndSetFocusIndex(-1);\n                break;\n\n            case KEYS.escape:\n                if (isOpen) {\n                    event.stopPropagation();\n                }\n\n                event.preventDefault();\n                this.closeMenu(event);\n                break;\n\n            default:\n                break;\n        }\n    };\n\n    handleMenuClose = (isKeyboardEvent: boolean, event: SyntheticEvent<> | MouseEvent) => {\n        this.closeMenu(event);\n        this.focusButton();\n    };\n\n    handleDocumentClick = (event: MouseEvent) => {\n        const menuEl = document.getElementById(this.menuID);\n        const menuButtonEl = document.getElementById(this.menuButtonID);\n\n        // Some DOM magic to get global click handlers to close menu when not interacting with menu or associated button\n        if (\n            menuEl &&\n            menuButtonEl &&\n            event.target instanceof Node &&\n            !menuEl.contains(event.target) &&\n            !menuButtonEl.contains(event.target)\n        ) {\n            this.closeMenu(event);\n        }\n    };\n\n    render() {\n        const {\n            bodyElement,\n            children,\n            className,\n            constrainToScrollParent,\n            constrainToWindow,\n            constrainToWindowWithPin,\n            isResponsive,\n            isRightAligned,\n            tetherAttachment,\n            tetherTargetAttachment,\n        } = this.props;\n\n        const { isOpen, initialFocusIndex } = this.state;\n\n        const elements = React.Children.toArray(children);\n\n        if (elements.length !== 2) {\n            throw new Error('DropdownMenu must have exactly two children: A button component and a <Menu>');\n        }\n\n        const menuButton = elements[0];\n        const menu = elements[1];\n\n        const menuButtonProps: Object = {\n            id: this.menuButtonID,\n            key: this.menuButtonID,\n            onClick: this.handleButtonClick, // NOTE: Overrides button's handler\n            onKeyDown: this.handleButtonKeyDown, // NOTE: Overrides button's handler\n            'aria-expanded': isOpen ? 'true' : 'false',\n        };\n\n        if (menuButton.props['aria-haspopup'] === undefined) {\n            menuButtonProps['aria-haspopup'] = 'true';\n        }\n\n        // Add this only when its open, otherwise the menuID element isn't rendered\n        if (isOpen) {\n            menuButtonProps['aria-controls'] = this.menuID;\n        }\n\n        const menuProps = {\n            id: this.menuID,\n            key: this.menuID,\n            initialFocusIndex,\n            onClose: this.handleMenuClose,\n            'aria-labelledby': this.menuButtonID,\n        };\n\n        let attachment = 'top left';\n        let targetAttachment = 'bottom left';\n\n        if (isRightAligned) {\n            attachment = 'top right';\n            targetAttachment = 'bottom right';\n        }\n\n        const constraints = [];\n\n        if (constrainToScrollParent) {\n            constraints.push({\n                to: 'scrollParent',\n                attachment: 'together',\n            });\n        }\n\n        if (constrainToWindow) {\n            constraints.push({\n                to: 'window',\n                attachment: 'together',\n            });\n        }\n\n        if (constrainToWindowWithPin) {\n            constraints.push({\n                to: 'window',\n                attachment: 'together',\n                pin: true,\n            });\n        }\n\n        const bodyEl = bodyElement instanceof HTMLElement ? bodyElement : document.body;\n\n        return (\n            <TetherComponent\n                attachment={tetherAttachment || attachment}\n                bodyElement={bodyEl}\n                className={classNames({ 'bdl-DropdownMenu--responsive': isResponsive }, className)}\n                classPrefix=\"dropdown-menu\"\n                constraints={constraints}\n                enabled={isOpen}\n                targetAttachment={tetherTargetAttachment || targetAttachment}\n            >\n                {React.cloneElement(menuButton, menuButtonProps)}\n                {isOpen && React.cloneElement(menu, menuProps)}\n            </TetherComponent>\n        );\n    }\n}\n\nexport default DropdownMenu;\n"],"file":"DropdownMenu.js"}